// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: discover.proto

#ifndef PROTOBUF_discover_2eproto__INCLUDED
#define PROTOBUF_discover_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "weizhu.pb.h"
// @@protoc_insertion_point(includes)

namespace weizhu {
namespace discover {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_discover_2eproto();
void protobuf_AssignDesc_discover_2eproto();
void protobuf_ShutdownFile_discover_2eproto();

class Banner;
class Module;
class Module_Category;
class Item;
class ItemContent;
class RecommendModule;
class Comment;
class GetDiscoverHomeResponse;
class GetModuleItemListRequest;
class GetModuleItemListResponse;
class GetItemByIdRequest;
class GetItemByIdResponse;
class GetItemContentRequest;
class GetItemContentResponse;
class SearchItemRequest;
class SearchItemResponse;
class GetItemPVRequest;
class GetItemPVResponse;
class GetItemScoreRequest;
class GetItemScoreResponse;
class ScoreItemRequest;
class ScoreItemResponse;
class GetItemCommentListRequest;
class GetItemCommentListResponse;
class CommentItemRequest;
class CommentItemResponse;
class DeleteCommentRequest;
class DeleteCommentResponse;
class GetItemListRequest;
class GetItemListResponse;

enum ScoreItemResponse_Result {
  ScoreItemResponse_Result_SUCC = 0,
  ScoreItemResponse_Result_FAIL_SCORE_INVALID = 1,
  ScoreItemResponse_Result_FAIL_ITEM_NOT_EXSIT = 2,
  ScoreItemResponse_Result_FAIL_ITEM_DISABLE = 3,
  ScoreItemResponse_Result_FAIL_ITEM_IS_SCORED = 4,
  ScoreItemResponse_Result_FAIL_UNKNOWN = 99
};
bool ScoreItemResponse_Result_IsValid(int value);
const ScoreItemResponse_Result ScoreItemResponse_Result_Result_MIN = ScoreItemResponse_Result_SUCC;
const ScoreItemResponse_Result ScoreItemResponse_Result_Result_MAX = ScoreItemResponse_Result_FAIL_UNKNOWN;
const int ScoreItemResponse_Result_Result_ARRAYSIZE = ScoreItemResponse_Result_Result_MAX + 1;

enum CommentItemResponse_Result {
  CommentItemResponse_Result_SUCC = 0,
  CommentItemResponse_Result_FAIL_CONTENT_INVALID = 1,
  CommentItemResponse_Result_FAIL_ITEM_NOT_EXSIT = 2,
  CommentItemResponse_Result_FAIL_ITEM_DISABLE = 3,
  CommentItemResponse_Result_FAIL_UNKNOWN = 99
};
bool CommentItemResponse_Result_IsValid(int value);
const CommentItemResponse_Result CommentItemResponse_Result_Result_MIN = CommentItemResponse_Result_SUCC;
const CommentItemResponse_Result CommentItemResponse_Result_Result_MAX = CommentItemResponse_Result_FAIL_UNKNOWN;
const int CommentItemResponse_Result_Result_ARRAYSIZE = CommentItemResponse_Result_Result_MAX + 1;

enum DeleteCommentResponse_Result {
  DeleteCommentResponse_Result_SUCC = 0,
  DeleteCommentResponse_Result_FAIL_COMMENT_NOT_EXSIT = 1,
  DeleteCommentResponse_Result_FAIL_COMMENT_OTHER = 2,
  DeleteCommentResponse_Result_FAIL_UNKNOWN = 99
};
bool DeleteCommentResponse_Result_IsValid(int value);
const DeleteCommentResponse_Result DeleteCommentResponse_Result_Result_MIN = DeleteCommentResponse_Result_SUCC;
const DeleteCommentResponse_Result DeleteCommentResponse_Result_Result_MAX = DeleteCommentResponse_Result_FAIL_UNKNOWN;
const int DeleteCommentResponse_Result_Result_ARRAYSIZE = DeleteCommentResponse_Result_Result_MAX + 1;

// ===================================================================

class Banner : public ::google::protobuf::MessageLite {
 public:
  Banner();
  virtual ~Banner();

  Banner(const Banner& from);

  inline Banner& operator=(const Banner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Banner& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Banner* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Banner* other);

  // implements Message ----------------------------------------------

  Banner* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Banner& from);
  void MergeFrom(const Banner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 banner_id = 1;
  inline bool has_banner_id() const;
  inline void clear_banner_id();
  static const int kBannerIdFieldNumber = 1;
  inline ::google::protobuf::int32 banner_id() const;
  inline void set_banner_id(::google::protobuf::int32 value);

  // required string banner_name = 2;
  inline bool has_banner_name() const;
  inline void clear_banner_name();
  static const int kBannerNameFieldNumber = 2;
  inline const ::std::string& banner_name() const;
  inline void set_banner_name(const ::std::string& value);
  inline void set_banner_name(const char* value);
  inline void set_banner_name(const char* value, size_t size);
  inline ::std::string* mutable_banner_name();
  inline ::std::string* release_banner_name();
  inline void set_allocated_banner_name(::std::string* banner_name);

  // required string image_name = 3;
  inline bool has_image_name() const;
  inline void clear_image_name();
  static const int kImageNameFieldNumber = 3;
  inline const ::std::string& image_name() const;
  inline void set_image_name(const ::std::string& value);
  inline void set_image_name(const char* value);
  inline void set_image_name(const char* value, size_t size);
  inline ::std::string* mutable_image_name();
  inline ::std::string* release_image_name();
  inline void set_allocated_image_name(::std::string* image_name);

  // optional string item_id = 4;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  inline const ::std::string& item_id() const;
  inline void set_item_id(const ::std::string& value);
  inline void set_item_id(const char* value);
  inline void set_item_id(const char* value, size_t size);
  inline ::std::string* mutable_item_id();
  inline ::std::string* release_item_id();
  inline void set_allocated_item_id(::std::string* item_id);

  // required int32 create_time = 5;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  inline ::google::protobuf::int32 create_time() const;
  inline void set_create_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.Banner)
 private:
  inline void set_has_banner_id();
  inline void clear_has_banner_id();
  inline void set_has_banner_name();
  inline void clear_has_banner_name();
  inline void set_has_image_name();
  inline void clear_has_image_name();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* banner_name_;
  ::std::string* image_name_;
  ::google::protobuf::int32 banner_id_;
  ::google::protobuf::int32 create_time_;
  ::std::string* item_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static Banner* default_instance_;
};
// -------------------------------------------------------------------

class Module_Category : public ::google::protobuf::MessageLite {
 public:
  Module_Category();
  virtual ~Module_Category();

  Module_Category(const Module_Category& from);

  inline Module_Category& operator=(const Module_Category& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Module_Category& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Module_Category* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Module_Category* other);

  // implements Message ----------------------------------------------

  Module_Category* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Module_Category& from);
  void MergeFrom(const Module_Category& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 category_id = 1;
  inline bool has_category_id() const;
  inline void clear_category_id();
  static const int kCategoryIdFieldNumber = 1;
  inline ::google::protobuf::int32 category_id() const;
  inline void set_category_id(::google::protobuf::int32 value);

  // required string category_name = 2;
  inline bool has_category_name() const;
  inline void clear_category_name();
  static const int kCategoryNameFieldNumber = 2;
  inline const ::std::string& category_name() const;
  inline void set_category_name(const ::std::string& value);
  inline void set_category_name(const char* value);
  inline void set_category_name(const char* value, size_t size);
  inline ::std::string* mutable_category_name();
  inline ::std::string* release_category_name();
  inline void set_allocated_category_name(::std::string* category_name);

  // @@protoc_insertion_point(class_scope:weizhu.discover.Module.Category)
 private:
  inline void set_has_category_id();
  inline void clear_has_category_id();
  inline void set_has_category_name();
  inline void clear_has_category_name();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* category_name_;
  ::google::protobuf::int32 category_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static Module_Category* default_instance_;
};
// -------------------------------------------------------------------

class Module : public ::google::protobuf::MessageLite {
 public:
  Module();
  virtual ~Module();

  Module(const Module& from);

  inline Module& operator=(const Module& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Module& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Module* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Module* other);

  // implements Message ----------------------------------------------

  Module* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Module& from);
  void MergeFrom(const Module& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef Module_Category Category;

  // accessors -------------------------------------------------------

  // required int32 module_id = 1;
  inline bool has_module_id() const;
  inline void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  inline ::google::protobuf::int32 module_id() const;
  inline void set_module_id(::google::protobuf::int32 value);

  // required string module_name = 2;
  inline bool has_module_name() const;
  inline void clear_module_name();
  static const int kModuleNameFieldNumber = 2;
  inline const ::std::string& module_name() const;
  inline void set_module_name(const ::std::string& value);
  inline void set_module_name(const char* value);
  inline void set_module_name(const char* value, size_t size);
  inline ::std::string* mutable_module_name();
  inline ::std::string* release_module_name();
  inline void set_allocated_module_name(::std::string* module_name);

  // required string icon_name = 3;
  inline bool has_icon_name() const;
  inline void clear_icon_name();
  static const int kIconNameFieldNumber = 3;
  inline const ::std::string& icon_name() const;
  inline void set_icon_name(const ::std::string& value);
  inline void set_icon_name(const char* value);
  inline void set_icon_name(const char* value, size_t size);
  inline ::std::string* mutable_icon_name();
  inline ::std::string* release_icon_name();
  inline void set_allocated_icon_name(::std::string* icon_name);

  // repeated .weizhu.discover.Module.Category category = 4;
  inline int category_size() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 4;
  inline const ::weizhu::discover::Module_Category& category(int index) const;
  inline ::weizhu::discover::Module_Category* mutable_category(int index);
  inline ::weizhu::discover::Module_Category* add_category();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Module_Category >&
      category() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Module_Category >*
      mutable_category();

  // @@protoc_insertion_point(class_scope:weizhu.discover.Module)
 private:
  inline void set_has_module_id();
  inline void clear_has_module_id();
  inline void set_has_module_name();
  inline void clear_has_module_name();
  inline void set_has_icon_name();
  inline void clear_has_icon_name();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* module_name_;
  ::std::string* icon_name_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Module_Category > category_;
  ::google::protobuf::int32 module_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static Module* default_instance_;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::MessageLite {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Item& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Item* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required string item_name = 2;
  inline bool has_item_name() const;
  inline void clear_item_name();
  static const int kItemNameFieldNumber = 2;
  inline const ::std::string& item_name() const;
  inline void set_item_name(const ::std::string& value);
  inline void set_item_name(const char* value);
  inline void set_item_name(const char* value, size_t size);
  inline ::std::string* mutable_item_name();
  inline ::std::string* release_item_name();
  inline void set_allocated_item_name(::std::string* item_name);

  // optional string icon_name = 3;
  inline bool has_icon_name() const;
  inline void clear_icon_name();
  static const int kIconNameFieldNumber = 3;
  inline const ::std::string& icon_name() const;
  inline void set_icon_name(const ::std::string& value);
  inline void set_icon_name(const char* value);
  inline void set_icon_name(const char* value, size_t size);
  inline ::std::string* mutable_icon_name();
  inline ::std::string* release_icon_name();
  inline void set_allocated_icon_name(::std::string* icon_name);

  // required int32 create_time = 4;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  inline ::google::protobuf::int32 create_time() const;
  inline void set_create_time(::google::protobuf::int32 value);

  // required string item_desc = 5;
  inline bool has_item_desc() const;
  inline void clear_item_desc();
  static const int kItemDescFieldNumber = 5;
  inline const ::std::string& item_desc() const;
  inline void set_item_desc(const ::std::string& value);
  inline void set_item_desc(const char* value);
  inline void set_item_desc(const char* value, size_t size);
  inline ::std::string* mutable_item_desc();
  inline ::std::string* release_item_desc();
  inline void set_allocated_item_desc(::std::string* item_desc);

  // optional bool enable_score = 6;
  inline bool has_enable_score() const;
  inline void clear_enable_score();
  static const int kEnableScoreFieldNumber = 6;
  inline bool enable_score() const;
  inline void set_enable_score(bool value);

  // optional bool enable_comment = 7;
  inline bool has_enable_comment() const;
  inline void clear_enable_comment();
  static const int kEnableCommentFieldNumber = 7;
  inline bool enable_comment() const;
  inline void set_enable_comment(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_name();
  inline void clear_has_item_name();
  inline void set_has_icon_name();
  inline void clear_has_icon_name();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_item_desc();
  inline void clear_has_item_desc();
  inline void set_has_enable_score();
  inline void clear_has_enable_score();
  inline void set_has_enable_comment();
  inline void clear_has_enable_comment();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::std::string* item_name_;
  ::std::string* icon_name_;
  ::std::string* item_desc_;
  ::google::protobuf::int32 create_time_;
  bool enable_score_;
  bool enable_comment_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class ItemContent : public ::google::protobuf::MessageLite {
 public:
  ItemContent();
  virtual ~ItemContent();

  ItemContent(const ItemContent& from);

  inline ItemContent& operator=(const ItemContent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ItemContent& default_instance();

  enum ContentTypeCase {
    kRedirectUrl = 101,
    kExamId = 102,
    CONTENT_TYPE_NOT_SET = 0,
  };

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ItemContent* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ItemContent* other);

  // implements Message ----------------------------------------------

  ItemContent* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ItemContent& from);
  void MergeFrom(const ItemContent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .weizhu.discover.Item item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::weizhu::discover::Item& item() const;
  inline ::weizhu::discover::Item* mutable_item();
  inline ::weizhu::discover::Item* release_item();
  inline void set_allocated_item(::weizhu::discover::Item* item);

  // optional string redirect_url = 101;
  inline bool has_redirect_url() const;
  inline void clear_redirect_url();
  static const int kRedirectUrlFieldNumber = 101;
  inline const ::std::string& redirect_url() const;
  inline void set_redirect_url(const ::std::string& value);
  inline void set_redirect_url(const char* value);
  inline void set_redirect_url(const char* value, size_t size);
  inline ::std::string* mutable_redirect_url();
  inline ::std::string* release_redirect_url();
  inline void set_allocated_redirect_url(::std::string* redirect_url);

  // optional int32 exam_id = 102;
  inline bool has_exam_id() const;
  inline void clear_exam_id();
  static const int kExamIdFieldNumber = 102;
  inline ::google::protobuf::int32 exam_id() const;
  inline void set_exam_id(::google::protobuf::int32 value);

  inline ContentTypeCase content_type_case() const;
  // @@protoc_insertion_point(class_scope:weizhu.discover.ItemContent)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_redirect_url();
  inline void set_has_exam_id();

  inline bool has_content_type();
  void clear_content_type();
  inline void clear_has_content_type();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::weizhu::discover::Item* item_;
  union ContentTypeUnion {
    ::std::string* redirect_url_;
    ::google::protobuf::int32 exam_id_;
  } content_type_;
  ::google::protobuf::uint32 _oneof_case_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static ItemContent* default_instance_;
};
// -------------------------------------------------------------------

class RecommendModule : public ::google::protobuf::MessageLite {
 public:
  RecommendModule();
  virtual ~RecommendModule();

  RecommendModule(const RecommendModule& from);

  inline RecommendModule& operator=(const RecommendModule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RecommendModule& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RecommendModule* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RecommendModule* other);

  // implements Message ----------------------------------------------

  RecommendModule* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RecommendModule& from);
  void MergeFrom(const RecommendModule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .weizhu.discover.Module module = 1;
  inline bool has_module() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 1;
  inline const ::weizhu::discover::Module& module() const;
  inline ::weizhu::discover::Module* mutable_module();
  inline ::weizhu::discover::Module* release_module();
  inline void set_allocated_module(::weizhu::discover::Module* module);

  // required int32 category_id = 2;
  inline bool has_category_id() const;
  inline void clear_category_id();
  static const int kCategoryIdFieldNumber = 2;
  inline ::google::protobuf::int32 category_id() const;
  inline void set_category_id(::google::protobuf::int32 value);

  // required .weizhu.discover.Item item = 3;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::weizhu::discover::Item& item() const;
  inline ::weizhu::discover::Item* mutable_item();
  inline ::weizhu::discover::Item* release_item();
  inline void set_allocated_item(::weizhu::discover::Item* item);

  // @@protoc_insertion_point(class_scope:weizhu.discover.RecommendModule)
 private:
  inline void set_has_module();
  inline void clear_has_module();
  inline void set_has_category_id();
  inline void clear_has_category_id();
  inline void set_has_item();
  inline void clear_has_item();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::weizhu::discover::Module* module_;
  ::weizhu::discover::Item* item_;
  ::google::protobuf::int32 category_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static RecommendModule* default_instance_;
};
// -------------------------------------------------------------------

class Comment : public ::google::protobuf::MessageLite {
 public:
  Comment();
  virtual ~Comment();

  Comment(const Comment& from);

  inline Comment& operator=(const Comment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Comment& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Comment* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Comment* other);

  // implements Message ----------------------------------------------

  Comment* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Comment& from);
  void MergeFrom(const Comment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 comment_id = 1;
  inline bool has_comment_id() const;
  inline void clear_comment_id();
  static const int kCommentIdFieldNumber = 1;
  inline ::google::protobuf::int64 comment_id() const;
  inline void set_comment_id(::google::protobuf::int64 value);

  // required int32 comment_time = 2;
  inline bool has_comment_time() const;
  inline void clear_comment_time();
  static const int kCommentTimeFieldNumber = 2;
  inline ::google::protobuf::int32 comment_time() const;
  inline void set_comment_time(::google::protobuf::int32 value);

  // required int64 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:weizhu.discover.Comment)
 private:
  inline void set_has_comment_id();
  inline void clear_has_comment_id();
  inline void set_has_comment_time();
  inline void clear_has_comment_time();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_content();
  inline void clear_has_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 comment_id_;
  ::google::protobuf::int64 user_id_;
  ::std::string* content_;
  ::google::protobuf::int32 comment_time_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static Comment* default_instance_;
};
// -------------------------------------------------------------------

class GetDiscoverHomeResponse : public ::google::protobuf::MessageLite {
 public:
  GetDiscoverHomeResponse();
  virtual ~GetDiscoverHomeResponse();

  GetDiscoverHomeResponse(const GetDiscoverHomeResponse& from);

  inline GetDiscoverHomeResponse& operator=(const GetDiscoverHomeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetDiscoverHomeResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetDiscoverHomeResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetDiscoverHomeResponse* other);

  // implements Message ----------------------------------------------

  GetDiscoverHomeResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetDiscoverHomeResponse& from);
  void MergeFrom(const GetDiscoverHomeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover.Banner banner = 1;
  inline int banner_size() const;
  inline void clear_banner();
  static const int kBannerFieldNumber = 1;
  inline const ::weizhu::discover::Banner& banner(int index) const;
  inline ::weizhu::discover::Banner* mutable_banner(int index);
  inline ::weizhu::discover::Banner* add_banner();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Banner >&
      banner() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Banner >*
      mutable_banner();

  // repeated .weizhu.discover.RecommendModule recommend_module = 2;
  inline int recommend_module_size() const;
  inline void clear_recommend_module();
  static const int kRecommendModuleFieldNumber = 2;
  inline const ::weizhu::discover::RecommendModule& recommend_module(int index) const;
  inline ::weizhu::discover::RecommendModule* mutable_recommend_module(int index);
  inline ::weizhu::discover::RecommendModule* add_recommend_module();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::RecommendModule >&
      recommend_module() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::RecommendModule >*
      mutable_recommend_module();

  // repeated .weizhu.discover.Module module = 3;
  inline int module_size() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 3;
  inline const ::weizhu::discover::Module& module(int index) const;
  inline ::weizhu::discover::Module* mutable_module(int index);
  inline ::weizhu::discover::Module* add_module();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Module >&
      module() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Module >*
      mutable_module();

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetDiscoverHomeResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Banner > banner_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover::RecommendModule > recommend_module_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Module > module_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetDiscoverHomeResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetModuleItemListRequest : public ::google::protobuf::MessageLite {
 public:
  GetModuleItemListRequest();
  virtual ~GetModuleItemListRequest();

  GetModuleItemListRequest(const GetModuleItemListRequest& from);

  inline GetModuleItemListRequest& operator=(const GetModuleItemListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetModuleItemListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetModuleItemListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetModuleItemListRequest* other);

  // implements Message ----------------------------------------------

  GetModuleItemListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetModuleItemListRequest& from);
  void MergeFrom(const GetModuleItemListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 module_id = 1;
  inline bool has_module_id() const;
  inline void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  inline ::google::protobuf::int32 module_id() const;
  inline void set_module_id(::google::protobuf::int32 value);

  // required int32 category_id = 2;
  inline bool has_category_id() const;
  inline void clear_category_id();
  static const int kCategoryIdFieldNumber = 2;
  inline ::google::protobuf::int32 category_id() const;
  inline void set_category_id(::google::protobuf::int32 value);

  // optional bytes list_index_begin = 3;
  inline bool has_list_index_begin() const;
  inline void clear_list_index_begin();
  static const int kListIndexBeginFieldNumber = 3;
  inline const ::std::string& list_index_begin() const;
  inline void set_list_index_begin(const ::std::string& value);
  inline void set_list_index_begin(const char* value);
  inline void set_list_index_begin(const void* value, size_t size);
  inline ::std::string* mutable_list_index_begin();
  inline ::std::string* release_list_index_begin();
  inline void set_allocated_list_index_begin(::std::string* list_index_begin);

  // optional bytes list_index_end = 4;
  inline bool has_list_index_end() const;
  inline void clear_list_index_end();
  static const int kListIndexEndFieldNumber = 4;
  inline const ::std::string& list_index_end() const;
  inline void set_list_index_end(const ::std::string& value);
  inline void set_list_index_end(const char* value);
  inline void set_list_index_end(const void* value, size_t size);
  inline ::std::string* mutable_list_index_end();
  inline ::std::string* release_list_index_end();
  inline void set_allocated_list_index_end(::std::string* list_index_end);

  // required int32 item_size = 5;
  inline bool has_item_size() const;
  inline void clear_item_size();
  static const int kItemSizeFieldNumber = 5;
  inline ::google::protobuf::int32 item_size() const;
  inline void set_item_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetModuleItemListRequest)
 private:
  inline void set_has_module_id();
  inline void clear_has_module_id();
  inline void set_has_category_id();
  inline void clear_has_category_id();
  inline void set_has_list_index_begin();
  inline void clear_has_list_index_begin();
  inline void set_has_list_index_end();
  inline void clear_has_list_index_end();
  inline void set_has_item_size();
  inline void clear_has_item_size();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 module_id_;
  ::google::protobuf::int32 category_id_;
  ::std::string* list_index_begin_;
  ::std::string* list_index_end_;
  ::google::protobuf::int32 item_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetModuleItemListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetModuleItemListResponse : public ::google::protobuf::MessageLite {
 public:
  GetModuleItemListResponse();
  virtual ~GetModuleItemListResponse();

  GetModuleItemListResponse(const GetModuleItemListResponse& from);

  inline GetModuleItemListResponse& operator=(const GetModuleItemListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetModuleItemListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetModuleItemListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetModuleItemListResponse* other);

  // implements Message ----------------------------------------------

  GetModuleItemListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetModuleItemListResponse& from);
  void MergeFrom(const GetModuleItemListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool clear_old_list = 1;
  inline bool has_clear_old_list() const;
  inline void clear_clear_old_list();
  static const int kClearOldListFieldNumber = 1;
  inline bool clear_old_list() const;
  inline void set_clear_old_list(bool value);

  // repeated .weizhu.discover.Item item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::weizhu::discover::Item& item(int index) const;
  inline ::weizhu::discover::Item* mutable_item(int index);
  inline ::weizhu::discover::Item* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >*
      mutable_item();

  // required bool has_more = 3;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 3;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes list_index_begin = 4;
  inline bool has_list_index_begin() const;
  inline void clear_list_index_begin();
  static const int kListIndexBeginFieldNumber = 4;
  inline const ::std::string& list_index_begin() const;
  inline void set_list_index_begin(const ::std::string& value);
  inline void set_list_index_begin(const char* value);
  inline void set_list_index_begin(const void* value, size_t size);
  inline ::std::string* mutable_list_index_begin();
  inline ::std::string* release_list_index_begin();
  inline void set_allocated_list_index_begin(::std::string* list_index_begin);

  // required bytes list_index_end = 5;
  inline bool has_list_index_end() const;
  inline void clear_list_index_end();
  static const int kListIndexEndFieldNumber = 5;
  inline const ::std::string& list_index_end() const;
  inline void set_list_index_end(const ::std::string& value);
  inline void set_list_index_end(const char* value);
  inline void set_list_index_end(const void* value, size_t size);
  inline ::std::string* mutable_list_index_end();
  inline ::std::string* release_list_index_end();
  inline void set_allocated_list_index_end(::std::string* list_index_end);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetModuleItemListResponse)
 private:
  inline void set_has_clear_old_list();
  inline void clear_has_clear_old_list();
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_list_index_begin();
  inline void clear_has_list_index_begin();
  inline void set_has_list_index_end();
  inline void clear_has_list_index_end();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item > item_;
  ::std::string* list_index_begin_;
  ::std::string* list_index_end_;
  bool clear_old_list_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetModuleItemListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemByIdRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemByIdRequest();
  virtual ~GetItemByIdRequest();

  GetItemByIdRequest(const GetItemByIdRequest& from);

  inline GetItemByIdRequest& operator=(const GetItemByIdRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemByIdRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemByIdRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemByIdRequest* other);

  // implements Message ----------------------------------------------

  GetItemByIdRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemByIdRequest& from);
  void MergeFrom(const GetItemByIdRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 item_id = 1;
  inline int item_id_size() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id(int index) const;
  inline void set_item_id(int index, ::google::protobuf::int64 value);
  inline void add_item_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      item_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_item_id();

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemByIdRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > item_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemByIdRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemByIdResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemByIdResponse();
  virtual ~GetItemByIdResponse();

  GetItemByIdResponse(const GetItemByIdResponse& from);

  inline GetItemByIdResponse& operator=(const GetItemByIdResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemByIdResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemByIdResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemByIdResponse* other);

  // implements Message ----------------------------------------------

  GetItemByIdResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemByIdResponse& from);
  void MergeFrom(const GetItemByIdResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover.Item item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::weizhu::discover::Item& item(int index) const;
  inline ::weizhu::discover::Item* mutable_item(int index);
  inline ::weizhu::discover::Item* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemByIdResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item > item_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemByIdResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemContentRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemContentRequest();
  virtual ~GetItemContentRequest();

  GetItemContentRequest(const GetItemContentRequest& from);

  inline GetItemContentRequest& operator=(const GetItemContentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemContentRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemContentRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemContentRequest* other);

  // implements Message ----------------------------------------------

  GetItemContentRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemContentRequest& from);
  void MergeFrom(const GetItemContentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemContentRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemContentRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemContentResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemContentResponse();
  virtual ~GetItemContentResponse();

  GetItemContentResponse(const GetItemContentResponse& from);

  inline GetItemContentResponse& operator=(const GetItemContentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemContentResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemContentResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemContentResponse* other);

  // implements Message ----------------------------------------------

  GetItemContentResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemContentResponse& from);
  void MergeFrom(const GetItemContentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .weizhu.discover.ItemContent item_content = 1;
  inline bool has_item_content() const;
  inline void clear_item_content();
  static const int kItemContentFieldNumber = 1;
  inline const ::weizhu::discover::ItemContent& item_content() const;
  inline ::weizhu::discover::ItemContent* mutable_item_content();
  inline ::weizhu::discover::ItemContent* release_item_content();
  inline void set_allocated_item_content(::weizhu::discover::ItemContent* item_content);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemContentResponse)
 private:
  inline void set_has_item_content();
  inline void clear_has_item_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::weizhu::discover::ItemContent* item_content_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemContentResponse* default_instance_;
};
// -------------------------------------------------------------------

class SearchItemRequest : public ::google::protobuf::MessageLite {
 public:
  SearchItemRequest();
  virtual ~SearchItemRequest();

  SearchItemRequest(const SearchItemRequest& from);

  inline SearchItemRequest& operator=(const SearchItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SearchItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SearchItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SearchItemRequest* other);

  // implements Message ----------------------------------------------

  SearchItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SearchItemRequest& from);
  void MergeFrom(const SearchItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string keyword = 1;
  inline bool has_keyword() const;
  inline void clear_keyword();
  static const int kKeywordFieldNumber = 1;
  inline const ::std::string& keyword() const;
  inline void set_keyword(const ::std::string& value);
  inline void set_keyword(const char* value);
  inline void set_keyword(const char* value, size_t size);
  inline ::std::string* mutable_keyword();
  inline ::std::string* release_keyword();
  inline void set_allocated_keyword(::std::string* keyword);

  // @@protoc_insertion_point(class_scope:weizhu.discover.SearchItemRequest)
 private:
  inline void set_has_keyword();
  inline void clear_has_keyword();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* keyword_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static SearchItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class SearchItemResponse : public ::google::protobuf::MessageLite {
 public:
  SearchItemResponse();
  virtual ~SearchItemResponse();

  SearchItemResponse(const SearchItemResponse& from);

  inline SearchItemResponse& operator=(const SearchItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SearchItemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SearchItemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SearchItemResponse* other);

  // implements Message ----------------------------------------------

  SearchItemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SearchItemResponse& from);
  void MergeFrom(const SearchItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover.Item item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::weizhu::discover::Item& item(int index) const;
  inline ::weizhu::discover::Item* mutable_item(int index);
  inline ::weizhu::discover::Item* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:weizhu.discover.SearchItemResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item > item_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static SearchItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemPVRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemPVRequest();
  virtual ~GetItemPVRequest();

  GetItemPVRequest(const GetItemPVRequest& from);

  inline GetItemPVRequest& operator=(const GetItemPVRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemPVRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemPVRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemPVRequest* other);

  // implements Message ----------------------------------------------

  GetItemPVRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemPVRequest& from);
  void MergeFrom(const GetItemPVRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required bool is_incre_pv = 2;
  inline bool has_is_incre_pv() const;
  inline void clear_is_incre_pv();
  static const int kIsIncrePvFieldNumber = 2;
  inline bool is_incre_pv() const;
  inline void set_is_incre_pv(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemPVRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_is_incre_pv();
  inline void clear_has_is_incre_pv();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  bool is_incre_pv_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemPVRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemPVResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemPVResponse();
  virtual ~GetItemPVResponse();

  GetItemPVResponse(const GetItemPVResponse& from);

  inline GetItemPVResponse& operator=(const GetItemPVResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemPVResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemPVResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemPVResponse* other);

  // implements Message ----------------------------------------------

  GetItemPVResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemPVResponse& from);
  void MergeFrom(const GetItemPVResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pv = 1;
  inline bool has_pv() const;
  inline void clear_pv();
  static const int kPvFieldNumber = 1;
  inline ::google::protobuf::int32 pv() const;
  inline void set_pv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemPVResponse)
 private:
  inline void set_has_pv();
  inline void clear_has_pv();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 pv_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemPVResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemScoreRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemScoreRequest();
  virtual ~GetItemScoreRequest();

  GetItemScoreRequest(const GetItemScoreRequest& from);

  inline GetItemScoreRequest& operator=(const GetItemScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemScoreRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemScoreRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemScoreRequest* other);

  // implements Message ----------------------------------------------

  GetItemScoreRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemScoreRequest& from);
  void MergeFrom(const GetItemScoreRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemScoreRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemScoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemScoreResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemScoreResponse();
  virtual ~GetItemScoreResponse();

  GetItemScoreResponse(const GetItemScoreResponse& from);

  inline GetItemScoreResponse& operator=(const GetItemScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemScoreResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemScoreResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemScoreResponse* other);

  // implements Message ----------------------------------------------

  GetItemScoreResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemScoreResponse& from);
  void MergeFrom(const GetItemScoreResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // required int32 total_score = 2;
  inline bool has_total_score() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 2;
  inline ::google::protobuf::int32 total_score() const;
  inline void set_total_score(::google::protobuf::int32 value);

  // required int32 total_user = 3;
  inline bool has_total_user() const;
  inline void clear_total_user();
  static const int kTotalUserFieldNumber = 3;
  inline ::google::protobuf::int32 total_user() const;
  inline void set_total_user(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemScoreResponse)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_total_score();
  inline void clear_has_total_score();
  inline void set_has_total_user();
  inline void clear_has_total_user();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 total_score_;
  ::google::protobuf::int32 total_user_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemScoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class ScoreItemRequest : public ::google::protobuf::MessageLite {
 public:
  ScoreItemRequest();
  virtual ~ScoreItemRequest();

  ScoreItemRequest(const ScoreItemRequest& from);

  inline ScoreItemRequest& operator=(const ScoreItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ScoreItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ScoreItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ScoreItemRequest* other);

  // implements Message ----------------------------------------------

  ScoreItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ScoreItemRequest& from);
  void MergeFrom(const ScoreItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.ScoreItemRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int32 score_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static ScoreItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class ScoreItemResponse : public ::google::protobuf::MessageLite {
 public:
  ScoreItemResponse();
  virtual ~ScoreItemResponse();

  ScoreItemResponse(const ScoreItemResponse& from);

  inline ScoreItemResponse& operator=(const ScoreItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ScoreItemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ScoreItemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ScoreItemResponse* other);

  // implements Message ----------------------------------------------

  ScoreItemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ScoreItemResponse& from);
  void MergeFrom(const ScoreItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef ScoreItemResponse_Result Result;
  static const Result SUCC = ScoreItemResponse_Result_SUCC;
  static const Result FAIL_SCORE_INVALID = ScoreItemResponse_Result_FAIL_SCORE_INVALID;
  static const Result FAIL_ITEM_NOT_EXSIT = ScoreItemResponse_Result_FAIL_ITEM_NOT_EXSIT;
  static const Result FAIL_ITEM_DISABLE = ScoreItemResponse_Result_FAIL_ITEM_DISABLE;
  static const Result FAIL_ITEM_IS_SCORED = ScoreItemResponse_Result_FAIL_ITEM_IS_SCORED;
  static const Result FAIL_UNKNOWN = ScoreItemResponse_Result_FAIL_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return ScoreItemResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    ScoreItemResponse_Result_Result_MIN;
  static const Result Result_MAX =
    ScoreItemResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    ScoreItemResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .weizhu.discover.ScoreItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::discover::ScoreItemResponse_Result result() const;
  inline void set_result(::weizhu::discover::ScoreItemResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // @@protoc_insertion_point(class_scope:weizhu.discover.ScoreItemResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  int result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static ScoreItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemCommentListRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemCommentListRequest();
  virtual ~GetItemCommentListRequest();

  GetItemCommentListRequest(const GetItemCommentListRequest& from);

  inline GetItemCommentListRequest& operator=(const GetItemCommentListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemCommentListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemCommentListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemCommentListRequest* other);

  // implements Message ----------------------------------------------

  GetItemCommentListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemCommentListRequest& from);
  void MergeFrom(const GetItemCommentListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // optional int64 last_comment_id = 2;
  inline bool has_last_comment_id() const;
  inline void clear_last_comment_id();
  static const int kLastCommentIdFieldNumber = 2;
  inline ::google::protobuf::int64 last_comment_id() const;
  inline void set_last_comment_id(::google::protobuf::int64 value);

  // optional int32 last_comment_time = 3;
  inline bool has_last_comment_time() const;
  inline void clear_last_comment_time();
  static const int kLastCommentTimeFieldNumber = 3;
  inline ::google::protobuf::int32 last_comment_time() const;
  inline void set_last_comment_time(::google::protobuf::int32 value);

  // required int32 size = 4;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 4;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemCommentListRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_last_comment_id();
  inline void clear_has_last_comment_id();
  inline void set_has_last_comment_time();
  inline void clear_has_last_comment_time();
  inline void set_has_size();
  inline void clear_has_size();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int64 last_comment_id_;
  ::google::protobuf::int32 last_comment_time_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemCommentListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemCommentListResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemCommentListResponse();
  virtual ~GetItemCommentListResponse();

  GetItemCommentListResponse(const GetItemCommentListResponse& from);

  inline GetItemCommentListResponse& operator=(const GetItemCommentListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemCommentListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemCommentListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemCommentListResponse* other);

  // implements Message ----------------------------------------------

  GetItemCommentListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemCommentListResponse& from);
  void MergeFrom(const GetItemCommentListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover.Comment comment = 1;
  inline int comment_size() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 1;
  inline const ::weizhu::discover::Comment& comment(int index) const;
  inline ::weizhu::discover::Comment* mutable_comment(int index);
  inline ::weizhu::discover::Comment* add_comment();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Comment >&
      comment() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Comment >*
      mutable_comment();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required int32 total = 3;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 3;
  inline ::google::protobuf::int32 total() const;
  inline void set_total(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemCommentListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_total();
  inline void clear_has_total();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Comment > comment_;
  bool has_more_;
  ::google::protobuf::int32 total_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemCommentListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CommentItemRequest : public ::google::protobuf::MessageLite {
 public:
  CommentItemRequest();
  virtual ~CommentItemRequest();

  CommentItemRequest(const CommentItemRequest& from);

  inline CommentItemRequest& operator=(const CommentItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CommentItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CommentItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CommentItemRequest* other);

  // implements Message ----------------------------------------------

  CommentItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CommentItemRequest& from);
  void MergeFrom(const CommentItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required string comment_content = 2;
  inline bool has_comment_content() const;
  inline void clear_comment_content();
  static const int kCommentContentFieldNumber = 2;
  inline const ::std::string& comment_content() const;
  inline void set_comment_content(const ::std::string& value);
  inline void set_comment_content(const char* value);
  inline void set_comment_content(const char* value, size_t size);
  inline ::std::string* mutable_comment_content();
  inline ::std::string* release_comment_content();
  inline void set_allocated_comment_content(::std::string* comment_content);

  // @@protoc_insertion_point(class_scope:weizhu.discover.CommentItemRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_comment_content();
  inline void clear_has_comment_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::std::string* comment_content_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static CommentItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class CommentItemResponse : public ::google::protobuf::MessageLite {
 public:
  CommentItemResponse();
  virtual ~CommentItemResponse();

  CommentItemResponse(const CommentItemResponse& from);

  inline CommentItemResponse& operator=(const CommentItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CommentItemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CommentItemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CommentItemResponse* other);

  // implements Message ----------------------------------------------

  CommentItemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CommentItemResponse& from);
  void MergeFrom(const CommentItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef CommentItemResponse_Result Result;
  static const Result SUCC = CommentItemResponse_Result_SUCC;
  static const Result FAIL_CONTENT_INVALID = CommentItemResponse_Result_FAIL_CONTENT_INVALID;
  static const Result FAIL_ITEM_NOT_EXSIT = CommentItemResponse_Result_FAIL_ITEM_NOT_EXSIT;
  static const Result FAIL_ITEM_DISABLE = CommentItemResponse_Result_FAIL_ITEM_DISABLE;
  static const Result FAIL_UNKNOWN = CommentItemResponse_Result_FAIL_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return CommentItemResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CommentItemResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CommentItemResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CommentItemResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .weizhu.discover.CommentItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::discover::CommentItemResponse_Result result() const;
  inline void set_result(::weizhu::discover::CommentItemResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // optional int64 comment_id = 3;
  inline bool has_comment_id() const;
  inline void clear_comment_id();
  static const int kCommentIdFieldNumber = 3;
  inline ::google::protobuf::int64 comment_id() const;
  inline void set_comment_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.CommentItemResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();
  inline void set_has_comment_id();
  inline void clear_has_comment_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  ::google::protobuf::int64 comment_id_;
  int result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static CommentItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteCommentRequest : public ::google::protobuf::MessageLite {
 public:
  DeleteCommentRequest();
  virtual ~DeleteCommentRequest();

  DeleteCommentRequest(const DeleteCommentRequest& from);

  inline DeleteCommentRequest& operator=(const DeleteCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteCommentRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteCommentRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteCommentRequest* other);

  // implements Message ----------------------------------------------

  DeleteCommentRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteCommentRequest& from);
  void MergeFrom(const DeleteCommentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 comment_id = 1;
  inline bool has_comment_id() const;
  inline void clear_comment_id();
  static const int kCommentIdFieldNumber = 1;
  inline ::google::protobuf::int64 comment_id() const;
  inline void set_comment_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.DeleteCommentRequest)
 private:
  inline void set_has_comment_id();
  inline void clear_has_comment_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 comment_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static DeleteCommentRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteCommentResponse : public ::google::protobuf::MessageLite {
 public:
  DeleteCommentResponse();
  virtual ~DeleteCommentResponse();

  DeleteCommentResponse(const DeleteCommentResponse& from);

  inline DeleteCommentResponse& operator=(const DeleteCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteCommentResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteCommentResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteCommentResponse* other);

  // implements Message ----------------------------------------------

  DeleteCommentResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteCommentResponse& from);
  void MergeFrom(const DeleteCommentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef DeleteCommentResponse_Result Result;
  static const Result SUCC = DeleteCommentResponse_Result_SUCC;
  static const Result FAIL_COMMENT_NOT_EXSIT = DeleteCommentResponse_Result_FAIL_COMMENT_NOT_EXSIT;
  static const Result FAIL_COMMENT_OTHER = DeleteCommentResponse_Result_FAIL_COMMENT_OTHER;
  static const Result FAIL_UNKNOWN = DeleteCommentResponse_Result_FAIL_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return DeleteCommentResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    DeleteCommentResponse_Result_Result_MIN;
  static const Result Result_MAX =
    DeleteCommentResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    DeleteCommentResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .weizhu.discover.DeleteCommentResponse.Result result = 1 [default = FAIL_UNKNOWN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::discover::DeleteCommentResponse_Result result() const;
  inline void set_result(::weizhu::discover::DeleteCommentResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // @@protoc_insertion_point(class_scope:weizhu.discover.DeleteCommentResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  int result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static DeleteCommentResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemListRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemListRequest();
  virtual ~GetItemListRequest();

  GetItemListRequest(const GetItemListRequest& from);

  inline GetItemListRequest& operator=(const GetItemListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemListRequest* other);

  // implements Message ----------------------------------------------

  GetItemListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemListRequest& from);
  void MergeFrom(const GetItemListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 last_item_id = 1;
  inline bool has_last_item_id() const;
  inline void clear_last_item_id();
  static const int kLastItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 last_item_id() const;
  inline void set_last_item_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemListRequest)
 private:
  inline void set_has_last_item_id();
  inline void clear_has_last_item_id();
  inline void set_has_size();
  inline void clear_has_size();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 last_item_id_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemListResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemListResponse();
  virtual ~GetItemListResponse();

  GetItemListResponse(const GetItemListResponse& from);

  inline GetItemListResponse& operator=(const GetItemListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemListResponse* other);

  // implements Message ----------------------------------------------

  GetItemListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemListResponse& from);
  void MergeFrom(const GetItemListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover.Item item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::weizhu::discover::Item& item(int index) const;
  inline ::weizhu::discover::Item* mutable_item(int index);
  inline ::weizhu::discover::Item* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >*
      mutable_item();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.discover.GetItemListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item > item_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_2eproto();
  friend void protobuf_ShutdownFile_discover_2eproto();

  void InitAsDefaultInstance();
  static GetItemListResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// Banner

// required int32 banner_id = 1;
inline bool Banner::has_banner_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Banner::set_has_banner_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Banner::clear_has_banner_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Banner::clear_banner_id() {
  banner_id_ = 0;
  clear_has_banner_id();
}
inline ::google::protobuf::int32 Banner::banner_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Banner.banner_id)
  return banner_id_;
}
inline void Banner::set_banner_id(::google::protobuf::int32 value) {
  set_has_banner_id();
  banner_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Banner.banner_id)
}

// required string banner_name = 2;
inline bool Banner::has_banner_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Banner::set_has_banner_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Banner::clear_has_banner_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Banner::clear_banner_name() {
  if (banner_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_->clear();
  }
  clear_has_banner_name();
}
inline const ::std::string& Banner::banner_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Banner.banner_name)
  return *banner_name_;
}
inline void Banner::set_banner_name(const ::std::string& value) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.Banner.banner_name)
}
inline void Banner::set_banner_name(const char* value) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.Banner.banner_name)
}
inline void Banner::set_banner_name(const char* value, size_t size) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.Banner.banner_name)
}
inline ::std::string* Banner::mutable_banner_name() {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Banner.banner_name)
  return banner_name_;
}
inline ::std::string* Banner::release_banner_name() {
  clear_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = banner_name_;
    banner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Banner::set_allocated_banner_name(::std::string* banner_name) {
  if (banner_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete banner_name_;
  }
  if (banner_name) {
    set_has_banner_name();
    banner_name_ = banner_name;
  } else {
    clear_has_banner_name();
    banner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.Banner.banner_name)
}

// required string image_name = 3;
inline bool Banner::has_image_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Banner::set_has_image_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Banner::clear_has_image_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Banner::clear_image_name() {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_->clear();
  }
  clear_has_image_name();
}
inline const ::std::string& Banner::image_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Banner.image_name)
  return *image_name_;
}
inline void Banner::set_image_name(const ::std::string& value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.Banner.image_name)
}
inline void Banner::set_image_name(const char* value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.Banner.image_name)
}
inline void Banner::set_image_name(const char* value, size_t size) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.Banner.image_name)
}
inline ::std::string* Banner::mutable_image_name() {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Banner.image_name)
  return image_name_;
}
inline ::std::string* Banner::release_image_name() {
  clear_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = image_name_;
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Banner::set_allocated_image_name(::std::string* image_name) {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete image_name_;
  }
  if (image_name) {
    set_has_image_name();
    image_name_ = image_name;
  } else {
    clear_has_image_name();
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.Banner.image_name)
}

// optional string item_id = 4;
inline bool Banner::has_item_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Banner::set_has_item_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Banner::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Banner::clear_item_id() {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_->clear();
  }
  clear_has_item_id();
}
inline const ::std::string& Banner::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Banner.item_id)
  return *item_id_;
}
inline void Banner::set_item_id(const ::std::string& value) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.Banner.item_id)
}
inline void Banner::set_item_id(const char* value) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.Banner.item_id)
}
inline void Banner::set_item_id(const char* value, size_t size) {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.Banner.item_id)
}
inline ::std::string* Banner::mutable_item_id() {
  set_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Banner.item_id)
  return item_id_;
}
inline ::std::string* Banner::release_item_id() {
  clear_has_item_id();
  if (item_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_id_;
    item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Banner::set_allocated_item_id(::std::string* item_id) {
  if (item_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_id_;
  }
  if (item_id) {
    set_has_item_id();
    item_id_ = item_id;
  } else {
    clear_has_item_id();
    item_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.Banner.item_id)
}

// required int32 create_time = 5;
inline bool Banner::has_create_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Banner::set_has_create_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Banner::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Banner::clear_create_time() {
  create_time_ = 0;
  clear_has_create_time();
}
inline ::google::protobuf::int32 Banner::create_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Banner.create_time)
  return create_time_;
}
inline void Banner::set_create_time(::google::protobuf::int32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Banner.create_time)
}

// -------------------------------------------------------------------

// Module_Category

// required int32 category_id = 1;
inline bool Module_Category::has_category_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Module_Category::set_has_category_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Module_Category::clear_has_category_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Module_Category::clear_category_id() {
  category_id_ = 0;
  clear_has_category_id();
}
inline ::google::protobuf::int32 Module_Category::category_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Module.Category.category_id)
  return category_id_;
}
inline void Module_Category::set_category_id(::google::protobuf::int32 value) {
  set_has_category_id();
  category_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Module.Category.category_id)
}

// required string category_name = 2;
inline bool Module_Category::has_category_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Module_Category::set_has_category_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Module_Category::clear_has_category_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Module_Category::clear_category_name() {
  if (category_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    category_name_->clear();
  }
  clear_has_category_name();
}
inline const ::std::string& Module_Category::category_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Module.Category.category_name)
  return *category_name_;
}
inline void Module_Category::set_category_name(const ::std::string& value) {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    category_name_ = new ::std::string;
  }
  category_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.Module.Category.category_name)
}
inline void Module_Category::set_category_name(const char* value) {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    category_name_ = new ::std::string;
  }
  category_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.Module.Category.category_name)
}
inline void Module_Category::set_category_name(const char* value, size_t size) {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    category_name_ = new ::std::string;
  }
  category_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.Module.Category.category_name)
}
inline ::std::string* Module_Category::mutable_category_name() {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    category_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Module.Category.category_name)
  return category_name_;
}
inline ::std::string* Module_Category::release_category_name() {
  clear_has_category_name();
  if (category_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = category_name_;
    category_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Module_Category::set_allocated_category_name(::std::string* category_name) {
  if (category_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete category_name_;
  }
  if (category_name) {
    set_has_category_name();
    category_name_ = category_name;
  } else {
    clear_has_category_name();
    category_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.Module.Category.category_name)
}

// -------------------------------------------------------------------

// Module

// required int32 module_id = 1;
inline bool Module::has_module_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Module::set_has_module_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Module::clear_has_module_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Module::clear_module_id() {
  module_id_ = 0;
  clear_has_module_id();
}
inline ::google::protobuf::int32 Module::module_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Module.module_id)
  return module_id_;
}
inline void Module::set_module_id(::google::protobuf::int32 value) {
  set_has_module_id();
  module_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Module.module_id)
}

// required string module_name = 2;
inline bool Module::has_module_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Module::set_has_module_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Module::clear_has_module_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Module::clear_module_name() {
  if (module_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_name_->clear();
  }
  clear_has_module_name();
}
inline const ::std::string& Module::module_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Module.module_name)
  return *module_name_;
}
inline void Module::set_module_name(const ::std::string& value) {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_name_ = new ::std::string;
  }
  module_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.Module.module_name)
}
inline void Module::set_module_name(const char* value) {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_name_ = new ::std::string;
  }
  module_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.Module.module_name)
}
inline void Module::set_module_name(const char* value, size_t size) {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_name_ = new ::std::string;
  }
  module_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.Module.module_name)
}
inline ::std::string* Module::mutable_module_name() {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Module.module_name)
  return module_name_;
}
inline ::std::string* Module::release_module_name() {
  clear_has_module_name();
  if (module_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = module_name_;
    module_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Module::set_allocated_module_name(::std::string* module_name) {
  if (module_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete module_name_;
  }
  if (module_name) {
    set_has_module_name();
    module_name_ = module_name;
  } else {
    clear_has_module_name();
    module_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.Module.module_name)
}

// required string icon_name = 3;
inline bool Module::has_icon_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Module::set_has_icon_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Module::clear_has_icon_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Module::clear_icon_name() {
  if (icon_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_name_->clear();
  }
  clear_has_icon_name();
}
inline const ::std::string& Module::icon_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Module.icon_name)
  return *icon_name_;
}
inline void Module::set_icon_name(const ::std::string& value) {
  set_has_icon_name();
  if (icon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_name_ = new ::std::string;
  }
  icon_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.Module.icon_name)
}
inline void Module::set_icon_name(const char* value) {
  set_has_icon_name();
  if (icon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_name_ = new ::std::string;
  }
  icon_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.Module.icon_name)
}
inline void Module::set_icon_name(const char* value, size_t size) {
  set_has_icon_name();
  if (icon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_name_ = new ::std::string;
  }
  icon_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.Module.icon_name)
}
inline ::std::string* Module::mutable_icon_name() {
  set_has_icon_name();
  if (icon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Module.icon_name)
  return icon_name_;
}
inline ::std::string* Module::release_icon_name() {
  clear_has_icon_name();
  if (icon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = icon_name_;
    icon_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Module::set_allocated_icon_name(::std::string* icon_name) {
  if (icon_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete icon_name_;
  }
  if (icon_name) {
    set_has_icon_name();
    icon_name_ = icon_name;
  } else {
    clear_has_icon_name();
    icon_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.Module.icon_name)
}

// repeated .weizhu.discover.Module.Category category = 4;
inline int Module::category_size() const {
  return category_.size();
}
inline void Module::clear_category() {
  category_.Clear();
}
inline const ::weizhu::discover::Module_Category& Module::category(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Module.category)
  return category_.Get(index);
}
inline ::weizhu::discover::Module_Category* Module::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Module.category)
  return category_.Mutable(index);
}
inline ::weizhu::discover::Module_Category* Module::add_category() {
  // @@protoc_insertion_point(field_add:weizhu.discover.Module.category)
  return category_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Module_Category >&
Module::category() const {
  // @@protoc_insertion_point(field_list:weizhu.discover.Module.category)
  return category_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Module_Category >*
Module::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover.Module.category)
  return &category_;
}

// -------------------------------------------------------------------

// Item

// required int64 item_id = 1;
inline bool Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 Item::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Item.item_id)
  return item_id_;
}
inline void Item::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Item.item_id)
}

// required string item_name = 2;
inline bool Item::has_item_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_item_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_item_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_item_name() {
  if (item_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_->clear();
  }
  clear_has_item_name();
}
inline const ::std::string& Item::item_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Item.item_name)
  return *item_name_;
}
inline void Item::set_item_name(const ::std::string& value) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.Item.item_name)
}
inline void Item::set_item_name(const char* value) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.Item.item_name)
}
inline void Item::set_item_name(const char* value, size_t size) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.Item.item_name)
}
inline ::std::string* Item::mutable_item_name() {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Item.item_name)
  return item_name_;
}
inline ::std::string* Item::release_item_name() {
  clear_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_name_;
    item_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item::set_allocated_item_name(::std::string* item_name) {
  if (item_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_name_;
  }
  if (item_name) {
    set_has_item_name();
    item_name_ = item_name;
  } else {
    clear_has_item_name();
    item_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.Item.item_name)
}

// optional string icon_name = 3;
inline bool Item::has_icon_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_icon_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_icon_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_icon_name() {
  if (icon_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_name_->clear();
  }
  clear_has_icon_name();
}
inline const ::std::string& Item::icon_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Item.icon_name)
  return *icon_name_;
}
inline void Item::set_icon_name(const ::std::string& value) {
  set_has_icon_name();
  if (icon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_name_ = new ::std::string;
  }
  icon_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.Item.icon_name)
}
inline void Item::set_icon_name(const char* value) {
  set_has_icon_name();
  if (icon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_name_ = new ::std::string;
  }
  icon_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.Item.icon_name)
}
inline void Item::set_icon_name(const char* value, size_t size) {
  set_has_icon_name();
  if (icon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_name_ = new ::std::string;
  }
  icon_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.Item.icon_name)
}
inline ::std::string* Item::mutable_icon_name() {
  set_has_icon_name();
  if (icon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Item.icon_name)
  return icon_name_;
}
inline ::std::string* Item::release_icon_name() {
  clear_has_icon_name();
  if (icon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = icon_name_;
    icon_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item::set_allocated_icon_name(::std::string* icon_name) {
  if (icon_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete icon_name_;
  }
  if (icon_name) {
    set_has_icon_name();
    icon_name_ = icon_name;
  } else {
    clear_has_icon_name();
    icon_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.Item.icon_name)
}

// required int32 create_time = 4;
inline bool Item::has_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item::set_has_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item::clear_create_time() {
  create_time_ = 0;
  clear_has_create_time();
}
inline ::google::protobuf::int32 Item::create_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Item.create_time)
  return create_time_;
}
inline void Item::set_create_time(::google::protobuf::int32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Item.create_time)
}

// required string item_desc = 5;
inline bool Item::has_item_desc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Item::set_has_item_desc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Item::clear_has_item_desc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Item::clear_item_desc() {
  if (item_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_->clear();
  }
  clear_has_item_desc();
}
inline const ::std::string& Item::item_desc() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Item.item_desc)
  return *item_desc_;
}
inline void Item::set_item_desc(const ::std::string& value) {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  item_desc_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.Item.item_desc)
}
inline void Item::set_item_desc(const char* value) {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  item_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.Item.item_desc)
}
inline void Item::set_item_desc(const char* value, size_t size) {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  item_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.Item.item_desc)
}
inline ::std::string* Item::mutable_item_desc() {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Item.item_desc)
  return item_desc_;
}
inline ::std::string* Item::release_item_desc() {
  clear_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_desc_;
    item_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item::set_allocated_item_desc(::std::string* item_desc) {
  if (item_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_desc_;
  }
  if (item_desc) {
    set_has_item_desc();
    item_desc_ = item_desc;
  } else {
    clear_has_item_desc();
    item_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.Item.item_desc)
}

// optional bool enable_score = 6;
inline bool Item::has_enable_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Item::set_has_enable_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Item::clear_has_enable_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Item::clear_enable_score() {
  enable_score_ = false;
  clear_has_enable_score();
}
inline bool Item::enable_score() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Item.enable_score)
  return enable_score_;
}
inline void Item::set_enable_score(bool value) {
  set_has_enable_score();
  enable_score_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Item.enable_score)
}

// optional bool enable_comment = 7;
inline bool Item::has_enable_comment() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Item::set_has_enable_comment() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Item::clear_has_enable_comment() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Item::clear_enable_comment() {
  enable_comment_ = false;
  clear_has_enable_comment();
}
inline bool Item::enable_comment() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Item.enable_comment)
  return enable_comment_;
}
inline void Item::set_enable_comment(bool value) {
  set_has_enable_comment();
  enable_comment_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Item.enable_comment)
}

// -------------------------------------------------------------------

// ItemContent

// required .weizhu.discover.Item item = 1;
inline bool ItemContent::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemContent::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemContent::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemContent::clear_item() {
  if (item_ != NULL) item_->::weizhu::discover::Item::Clear();
  clear_has_item();
}
inline const ::weizhu::discover::Item& ItemContent::item() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.ItemContent.item)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return item_ != NULL ? *item_ : *default_instance().item_;
#else
  return item_ != NULL ? *item_ : *default_instance_->item_;
#endif
}
inline ::weizhu::discover::Item* ItemContent::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::weizhu::discover::Item;
  // @@protoc_insertion_point(field_mutable:weizhu.discover.ItemContent.item)
  return item_;
}
inline ::weizhu::discover::Item* ItemContent::release_item() {
  clear_has_item();
  ::weizhu::discover::Item* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ItemContent::set_allocated_item(::weizhu::discover::Item* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.ItemContent.item)
}

// optional string redirect_url = 101;
inline bool ItemContent::has_redirect_url() const {
  return content_type_case() == kRedirectUrl;
}
inline void ItemContent::set_has_redirect_url() {
  _oneof_case_[0] = kRedirectUrl;
}
inline void ItemContent::clear_redirect_url() {
  if (has_redirect_url()) {
    delete content_type_.redirect_url_;
    clear_has_content_type();
  }
}
inline const ::std::string& ItemContent::redirect_url() const {
  if (has_redirect_url()) {
    return *content_type_.redirect_url_;
  }
  return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ItemContent::set_redirect_url(const ::std::string& value) {
  if (!has_redirect_url()) {
    clear_content_type();
    set_has_redirect_url();
    content_type_.redirect_url_ = new ::std::string;
  }
  content_type_.redirect_url_->assign(value);
}
inline void ItemContent::set_redirect_url(const char* value) {
  if (!has_redirect_url()) {
    clear_content_type();
    set_has_redirect_url();
    content_type_.redirect_url_ = new ::std::string;
  }
  content_type_.redirect_url_->assign(value);
}
inline void ItemContent::set_redirect_url(const char* value, size_t size) {
  if (!has_redirect_url()) {
    clear_content_type();
    set_has_redirect_url();
    content_type_.redirect_url_ = new ::std::string;
  }
  content_type_.redirect_url_->assign(
      reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ItemContent::mutable_redirect_url() {
  if (!has_redirect_url()) {
    clear_content_type();
    set_has_redirect_url();
    content_type_.redirect_url_ = new ::std::string;
  }
  return content_type_.redirect_url_;
}
inline ::std::string* ItemContent::release_redirect_url() {
  if (has_redirect_url()) {
    clear_has_content_type();
    ::std::string* temp = content_type_.redirect_url_;
    content_type_.redirect_url_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ItemContent::set_allocated_redirect_url(::std::string* redirect_url) {
  clear_content_type();
  if (redirect_url) {
    set_has_redirect_url();
    content_type_.redirect_url_ = redirect_url;
  }
}

// optional int32 exam_id = 102;
inline bool ItemContent::has_exam_id() const {
  return content_type_case() == kExamId;
}
inline void ItemContent::set_has_exam_id() {
  _oneof_case_[0] = kExamId;
}
inline void ItemContent::clear_exam_id() {
  if (has_exam_id()) {
    content_type_.exam_id_ = 0;
    clear_has_content_type();
  }
}
inline ::google::protobuf::int32 ItemContent::exam_id() const {
  if (has_exam_id()) {
    return content_type_.exam_id_;
  }
  return 0;
}
inline void ItemContent::set_exam_id(::google::protobuf::int32 value) {
  if (!has_exam_id()) {
    clear_content_type();
    set_has_exam_id();
  }
  content_type_.exam_id_ = value;
}

inline bool ItemContent::has_content_type() {
  return content_type_case() != CONTENT_TYPE_NOT_SET;
}
inline void ItemContent::clear_has_content_type() {
  _oneof_case_[0] = CONTENT_TYPE_NOT_SET;
}
inline ItemContent::ContentTypeCase ItemContent::content_type_case() const {
  return ItemContent::ContentTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RecommendModule

// required .weizhu.discover.Module module = 1;
inline bool RecommendModule::has_module() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecommendModule::set_has_module() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecommendModule::clear_has_module() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecommendModule::clear_module() {
  if (module_ != NULL) module_->::weizhu::discover::Module::Clear();
  clear_has_module();
}
inline const ::weizhu::discover::Module& RecommendModule::module() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.RecommendModule.module)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return module_ != NULL ? *module_ : *default_instance().module_;
#else
  return module_ != NULL ? *module_ : *default_instance_->module_;
#endif
}
inline ::weizhu::discover::Module* RecommendModule::mutable_module() {
  set_has_module();
  if (module_ == NULL) module_ = new ::weizhu::discover::Module;
  // @@protoc_insertion_point(field_mutable:weizhu.discover.RecommendModule.module)
  return module_;
}
inline ::weizhu::discover::Module* RecommendModule::release_module() {
  clear_has_module();
  ::weizhu::discover::Module* temp = module_;
  module_ = NULL;
  return temp;
}
inline void RecommendModule::set_allocated_module(::weizhu::discover::Module* module) {
  delete module_;
  module_ = module;
  if (module) {
    set_has_module();
  } else {
    clear_has_module();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.RecommendModule.module)
}

// required int32 category_id = 2;
inline bool RecommendModule::has_category_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecommendModule::set_has_category_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecommendModule::clear_has_category_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecommendModule::clear_category_id() {
  category_id_ = 0;
  clear_has_category_id();
}
inline ::google::protobuf::int32 RecommendModule::category_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.RecommendModule.category_id)
  return category_id_;
}
inline void RecommendModule::set_category_id(::google::protobuf::int32 value) {
  set_has_category_id();
  category_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.RecommendModule.category_id)
}

// required .weizhu.discover.Item item = 3;
inline bool RecommendModule::has_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecommendModule::set_has_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecommendModule::clear_has_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecommendModule::clear_item() {
  if (item_ != NULL) item_->::weizhu::discover::Item::Clear();
  clear_has_item();
}
inline const ::weizhu::discover::Item& RecommendModule::item() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.RecommendModule.item)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return item_ != NULL ? *item_ : *default_instance().item_;
#else
  return item_ != NULL ? *item_ : *default_instance_->item_;
#endif
}
inline ::weizhu::discover::Item* RecommendModule::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::weizhu::discover::Item;
  // @@protoc_insertion_point(field_mutable:weizhu.discover.RecommendModule.item)
  return item_;
}
inline ::weizhu::discover::Item* RecommendModule::release_item() {
  clear_has_item();
  ::weizhu::discover::Item* temp = item_;
  item_ = NULL;
  return temp;
}
inline void RecommendModule::set_allocated_item(::weizhu::discover::Item* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.RecommendModule.item)
}

// -------------------------------------------------------------------

// Comment

// required int64 comment_id = 1;
inline bool Comment::has_comment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Comment::set_has_comment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Comment::clear_has_comment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Comment::clear_comment_id() {
  comment_id_ = GOOGLE_LONGLONG(0);
  clear_has_comment_id();
}
inline ::google::protobuf::int64 Comment::comment_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Comment.comment_id)
  return comment_id_;
}
inline void Comment::set_comment_id(::google::protobuf::int64 value) {
  set_has_comment_id();
  comment_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Comment.comment_id)
}

// required int32 comment_time = 2;
inline bool Comment::has_comment_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Comment::set_has_comment_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Comment::clear_has_comment_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Comment::clear_comment_time() {
  comment_time_ = 0;
  clear_has_comment_time();
}
inline ::google::protobuf::int32 Comment::comment_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Comment.comment_time)
  return comment_time_;
}
inline void Comment::set_comment_time(::google::protobuf::int32 value) {
  set_has_comment_time();
  comment_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Comment.comment_time)
}

// required int64 user_id = 3;
inline bool Comment::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Comment::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Comment::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Comment::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 Comment::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Comment.user_id)
  return user_id_;
}
inline void Comment::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.Comment.user_id)
}

// required string content = 4;
inline bool Comment::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Comment::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Comment::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Comment::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& Comment::content() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.Comment.content)
  return *content_;
}
inline void Comment::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.Comment.content)
}
inline void Comment::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.Comment.content)
}
inline void Comment::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.Comment.content)
}
inline ::std::string* Comment::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.Comment.content)
  return content_;
}
inline ::std::string* Comment::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Comment::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.Comment.content)
}

// -------------------------------------------------------------------

// GetDiscoverHomeResponse

// repeated .weizhu.discover.Banner banner = 1;
inline int GetDiscoverHomeResponse::banner_size() const {
  return banner_.size();
}
inline void GetDiscoverHomeResponse::clear_banner() {
  banner_.Clear();
}
inline const ::weizhu::discover::Banner& GetDiscoverHomeResponse::banner(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetDiscoverHomeResponse.banner)
  return banner_.Get(index);
}
inline ::weizhu::discover::Banner* GetDiscoverHomeResponse::mutable_banner(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetDiscoverHomeResponse.banner)
  return banner_.Mutable(index);
}
inline ::weizhu::discover::Banner* GetDiscoverHomeResponse::add_banner() {
  // @@protoc_insertion_point(field_add:weizhu.discover.GetDiscoverHomeResponse.banner)
  return banner_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Banner >&
GetDiscoverHomeResponse::banner() const {
  // @@protoc_insertion_point(field_list:weizhu.discover.GetDiscoverHomeResponse.banner)
  return banner_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Banner >*
GetDiscoverHomeResponse::mutable_banner() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover.GetDiscoverHomeResponse.banner)
  return &banner_;
}

// repeated .weizhu.discover.RecommendModule recommend_module = 2;
inline int GetDiscoverHomeResponse::recommend_module_size() const {
  return recommend_module_.size();
}
inline void GetDiscoverHomeResponse::clear_recommend_module() {
  recommend_module_.Clear();
}
inline const ::weizhu::discover::RecommendModule& GetDiscoverHomeResponse::recommend_module(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetDiscoverHomeResponse.recommend_module)
  return recommend_module_.Get(index);
}
inline ::weizhu::discover::RecommendModule* GetDiscoverHomeResponse::mutable_recommend_module(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetDiscoverHomeResponse.recommend_module)
  return recommend_module_.Mutable(index);
}
inline ::weizhu::discover::RecommendModule* GetDiscoverHomeResponse::add_recommend_module() {
  // @@protoc_insertion_point(field_add:weizhu.discover.GetDiscoverHomeResponse.recommend_module)
  return recommend_module_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::RecommendModule >&
GetDiscoverHomeResponse::recommend_module() const {
  // @@protoc_insertion_point(field_list:weizhu.discover.GetDiscoverHomeResponse.recommend_module)
  return recommend_module_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::RecommendModule >*
GetDiscoverHomeResponse::mutable_recommend_module() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover.GetDiscoverHomeResponse.recommend_module)
  return &recommend_module_;
}

// repeated .weizhu.discover.Module module = 3;
inline int GetDiscoverHomeResponse::module_size() const {
  return module_.size();
}
inline void GetDiscoverHomeResponse::clear_module() {
  module_.Clear();
}
inline const ::weizhu::discover::Module& GetDiscoverHomeResponse::module(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetDiscoverHomeResponse.module)
  return module_.Get(index);
}
inline ::weizhu::discover::Module* GetDiscoverHomeResponse::mutable_module(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetDiscoverHomeResponse.module)
  return module_.Mutable(index);
}
inline ::weizhu::discover::Module* GetDiscoverHomeResponse::add_module() {
  // @@protoc_insertion_point(field_add:weizhu.discover.GetDiscoverHomeResponse.module)
  return module_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Module >&
GetDiscoverHomeResponse::module() const {
  // @@protoc_insertion_point(field_list:weizhu.discover.GetDiscoverHomeResponse.module)
  return module_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Module >*
GetDiscoverHomeResponse::mutable_module() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover.GetDiscoverHomeResponse.module)
  return &module_;
}

// -------------------------------------------------------------------

// GetModuleItemListRequest

// required int32 module_id = 1;
inline bool GetModuleItemListRequest::has_module_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetModuleItemListRequest::set_has_module_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetModuleItemListRequest::clear_has_module_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetModuleItemListRequest::clear_module_id() {
  module_id_ = 0;
  clear_has_module_id();
}
inline ::google::protobuf::int32 GetModuleItemListRequest::module_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetModuleItemListRequest.module_id)
  return module_id_;
}
inline void GetModuleItemListRequest::set_module_id(::google::protobuf::int32 value) {
  set_has_module_id();
  module_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetModuleItemListRequest.module_id)
}

// required int32 category_id = 2;
inline bool GetModuleItemListRequest::has_category_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetModuleItemListRequest::set_has_category_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetModuleItemListRequest::clear_has_category_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetModuleItemListRequest::clear_category_id() {
  category_id_ = 0;
  clear_has_category_id();
}
inline ::google::protobuf::int32 GetModuleItemListRequest::category_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetModuleItemListRequest.category_id)
  return category_id_;
}
inline void GetModuleItemListRequest::set_category_id(::google::protobuf::int32 value) {
  set_has_category_id();
  category_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetModuleItemListRequest.category_id)
}

// optional bytes list_index_begin = 3;
inline bool GetModuleItemListRequest::has_list_index_begin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetModuleItemListRequest::set_has_list_index_begin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetModuleItemListRequest::clear_has_list_index_begin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetModuleItemListRequest::clear_list_index_begin() {
  if (list_index_begin_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_begin_->clear();
  }
  clear_has_list_index_begin();
}
inline const ::std::string& GetModuleItemListRequest::list_index_begin() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetModuleItemListRequest.list_index_begin)
  return *list_index_begin_;
}
inline void GetModuleItemListRequest::set_list_index_begin(const ::std::string& value) {
  set_has_list_index_begin();
  if (list_index_begin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_begin_ = new ::std::string;
  }
  list_index_begin_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.GetModuleItemListRequest.list_index_begin)
}
inline void GetModuleItemListRequest::set_list_index_begin(const char* value) {
  set_has_list_index_begin();
  if (list_index_begin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_begin_ = new ::std::string;
  }
  list_index_begin_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.GetModuleItemListRequest.list_index_begin)
}
inline void GetModuleItemListRequest::set_list_index_begin(const void* value, size_t size) {
  set_has_list_index_begin();
  if (list_index_begin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_begin_ = new ::std::string;
  }
  list_index_begin_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.GetModuleItemListRequest.list_index_begin)
}
inline ::std::string* GetModuleItemListRequest::mutable_list_index_begin() {
  set_has_list_index_begin();
  if (list_index_begin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_begin_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetModuleItemListRequest.list_index_begin)
  return list_index_begin_;
}
inline ::std::string* GetModuleItemListRequest::release_list_index_begin() {
  clear_has_list_index_begin();
  if (list_index_begin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = list_index_begin_;
    list_index_begin_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetModuleItemListRequest::set_allocated_list_index_begin(::std::string* list_index_begin) {
  if (list_index_begin_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete list_index_begin_;
  }
  if (list_index_begin) {
    set_has_list_index_begin();
    list_index_begin_ = list_index_begin;
  } else {
    clear_has_list_index_begin();
    list_index_begin_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.GetModuleItemListRequest.list_index_begin)
}

// optional bytes list_index_end = 4;
inline bool GetModuleItemListRequest::has_list_index_end() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetModuleItemListRequest::set_has_list_index_end() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetModuleItemListRequest::clear_has_list_index_end() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetModuleItemListRequest::clear_list_index_end() {
  if (list_index_end_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_end_->clear();
  }
  clear_has_list_index_end();
}
inline const ::std::string& GetModuleItemListRequest::list_index_end() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetModuleItemListRequest.list_index_end)
  return *list_index_end_;
}
inline void GetModuleItemListRequest::set_list_index_end(const ::std::string& value) {
  set_has_list_index_end();
  if (list_index_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_end_ = new ::std::string;
  }
  list_index_end_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.GetModuleItemListRequest.list_index_end)
}
inline void GetModuleItemListRequest::set_list_index_end(const char* value) {
  set_has_list_index_end();
  if (list_index_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_end_ = new ::std::string;
  }
  list_index_end_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.GetModuleItemListRequest.list_index_end)
}
inline void GetModuleItemListRequest::set_list_index_end(const void* value, size_t size) {
  set_has_list_index_end();
  if (list_index_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_end_ = new ::std::string;
  }
  list_index_end_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.GetModuleItemListRequest.list_index_end)
}
inline ::std::string* GetModuleItemListRequest::mutable_list_index_end() {
  set_has_list_index_end();
  if (list_index_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_end_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetModuleItemListRequest.list_index_end)
  return list_index_end_;
}
inline ::std::string* GetModuleItemListRequest::release_list_index_end() {
  clear_has_list_index_end();
  if (list_index_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = list_index_end_;
    list_index_end_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetModuleItemListRequest::set_allocated_list_index_end(::std::string* list_index_end) {
  if (list_index_end_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete list_index_end_;
  }
  if (list_index_end) {
    set_has_list_index_end();
    list_index_end_ = list_index_end;
  } else {
    clear_has_list_index_end();
    list_index_end_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.GetModuleItemListRequest.list_index_end)
}

// required int32 item_size = 5;
inline bool GetModuleItemListRequest::has_item_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetModuleItemListRequest::set_has_item_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetModuleItemListRequest::clear_has_item_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetModuleItemListRequest::clear_item_size() {
  item_size_ = 0;
  clear_has_item_size();
}
inline ::google::protobuf::int32 GetModuleItemListRequest::item_size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetModuleItemListRequest.item_size)
  return item_size_;
}
inline void GetModuleItemListRequest::set_item_size(::google::protobuf::int32 value) {
  set_has_item_size();
  item_size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetModuleItemListRequest.item_size)
}

// -------------------------------------------------------------------

// GetModuleItemListResponse

// required bool clear_old_list = 1;
inline bool GetModuleItemListResponse::has_clear_old_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetModuleItemListResponse::set_has_clear_old_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetModuleItemListResponse::clear_has_clear_old_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetModuleItemListResponse::clear_clear_old_list() {
  clear_old_list_ = false;
  clear_has_clear_old_list();
}
inline bool GetModuleItemListResponse::clear_old_list() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetModuleItemListResponse.clear_old_list)
  return clear_old_list_;
}
inline void GetModuleItemListResponse::set_clear_old_list(bool value) {
  set_has_clear_old_list();
  clear_old_list_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetModuleItemListResponse.clear_old_list)
}

// repeated .weizhu.discover.Item item = 2;
inline int GetModuleItemListResponse::item_size() const {
  return item_.size();
}
inline void GetModuleItemListResponse::clear_item() {
  item_.Clear();
}
inline const ::weizhu::discover::Item& GetModuleItemListResponse::item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetModuleItemListResponse.item)
  return item_.Get(index);
}
inline ::weizhu::discover::Item* GetModuleItemListResponse::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetModuleItemListResponse.item)
  return item_.Mutable(index);
}
inline ::weizhu::discover::Item* GetModuleItemListResponse::add_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover.GetModuleItemListResponse.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >&
GetModuleItemListResponse::item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover.GetModuleItemListResponse.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >*
GetModuleItemListResponse::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover.GetModuleItemListResponse.item)
  return &item_;
}

// required bool has_more = 3;
inline bool GetModuleItemListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetModuleItemListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetModuleItemListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetModuleItemListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetModuleItemListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetModuleItemListResponse.has_more)
  return has_more_;
}
inline void GetModuleItemListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetModuleItemListResponse.has_more)
}

// required bytes list_index_begin = 4;
inline bool GetModuleItemListResponse::has_list_index_begin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetModuleItemListResponse::set_has_list_index_begin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetModuleItemListResponse::clear_has_list_index_begin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetModuleItemListResponse::clear_list_index_begin() {
  if (list_index_begin_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_begin_->clear();
  }
  clear_has_list_index_begin();
}
inline const ::std::string& GetModuleItemListResponse::list_index_begin() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetModuleItemListResponse.list_index_begin)
  return *list_index_begin_;
}
inline void GetModuleItemListResponse::set_list_index_begin(const ::std::string& value) {
  set_has_list_index_begin();
  if (list_index_begin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_begin_ = new ::std::string;
  }
  list_index_begin_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.GetModuleItemListResponse.list_index_begin)
}
inline void GetModuleItemListResponse::set_list_index_begin(const char* value) {
  set_has_list_index_begin();
  if (list_index_begin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_begin_ = new ::std::string;
  }
  list_index_begin_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.GetModuleItemListResponse.list_index_begin)
}
inline void GetModuleItemListResponse::set_list_index_begin(const void* value, size_t size) {
  set_has_list_index_begin();
  if (list_index_begin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_begin_ = new ::std::string;
  }
  list_index_begin_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.GetModuleItemListResponse.list_index_begin)
}
inline ::std::string* GetModuleItemListResponse::mutable_list_index_begin() {
  set_has_list_index_begin();
  if (list_index_begin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_begin_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetModuleItemListResponse.list_index_begin)
  return list_index_begin_;
}
inline ::std::string* GetModuleItemListResponse::release_list_index_begin() {
  clear_has_list_index_begin();
  if (list_index_begin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = list_index_begin_;
    list_index_begin_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetModuleItemListResponse::set_allocated_list_index_begin(::std::string* list_index_begin) {
  if (list_index_begin_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete list_index_begin_;
  }
  if (list_index_begin) {
    set_has_list_index_begin();
    list_index_begin_ = list_index_begin;
  } else {
    clear_has_list_index_begin();
    list_index_begin_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.GetModuleItemListResponse.list_index_begin)
}

// required bytes list_index_end = 5;
inline bool GetModuleItemListResponse::has_list_index_end() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetModuleItemListResponse::set_has_list_index_end() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetModuleItemListResponse::clear_has_list_index_end() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetModuleItemListResponse::clear_list_index_end() {
  if (list_index_end_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_end_->clear();
  }
  clear_has_list_index_end();
}
inline const ::std::string& GetModuleItemListResponse::list_index_end() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetModuleItemListResponse.list_index_end)
  return *list_index_end_;
}
inline void GetModuleItemListResponse::set_list_index_end(const ::std::string& value) {
  set_has_list_index_end();
  if (list_index_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_end_ = new ::std::string;
  }
  list_index_end_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.GetModuleItemListResponse.list_index_end)
}
inline void GetModuleItemListResponse::set_list_index_end(const char* value) {
  set_has_list_index_end();
  if (list_index_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_end_ = new ::std::string;
  }
  list_index_end_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.GetModuleItemListResponse.list_index_end)
}
inline void GetModuleItemListResponse::set_list_index_end(const void* value, size_t size) {
  set_has_list_index_end();
  if (list_index_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_end_ = new ::std::string;
  }
  list_index_end_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.GetModuleItemListResponse.list_index_end)
}
inline ::std::string* GetModuleItemListResponse::mutable_list_index_end() {
  set_has_list_index_end();
  if (list_index_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    list_index_end_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetModuleItemListResponse.list_index_end)
  return list_index_end_;
}
inline ::std::string* GetModuleItemListResponse::release_list_index_end() {
  clear_has_list_index_end();
  if (list_index_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = list_index_end_;
    list_index_end_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetModuleItemListResponse::set_allocated_list_index_end(::std::string* list_index_end) {
  if (list_index_end_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete list_index_end_;
  }
  if (list_index_end) {
    set_has_list_index_end();
    list_index_end_ = list_index_end;
  } else {
    clear_has_list_index_end();
    list_index_end_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.GetModuleItemListResponse.list_index_end)
}

// -------------------------------------------------------------------

// GetItemByIdRequest

// repeated int64 item_id = 1;
inline int GetItemByIdRequest::item_id_size() const {
  return item_id_.size();
}
inline void GetItemByIdRequest::clear_item_id() {
  item_id_.Clear();
}
inline ::google::protobuf::int64 GetItemByIdRequest::item_id(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemByIdRequest.item_id)
  return item_id_.Get(index);
}
inline void GetItemByIdRequest::set_item_id(int index, ::google::protobuf::int64 value) {
  item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemByIdRequest.item_id)
}
inline void GetItemByIdRequest::add_item_id(::google::protobuf::int64 value) {
  item_id_.Add(value);
  // @@protoc_insertion_point(field_add:weizhu.discover.GetItemByIdRequest.item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetItemByIdRequest::item_id() const {
  // @@protoc_insertion_point(field_list:weizhu.discover.GetItemByIdRequest.item_id)
  return item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetItemByIdRequest::mutable_item_id() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover.GetItemByIdRequest.item_id)
  return &item_id_;
}

// -------------------------------------------------------------------

// GetItemByIdResponse

// repeated .weizhu.discover.Item item = 1;
inline int GetItemByIdResponse::item_size() const {
  return item_.size();
}
inline void GetItemByIdResponse::clear_item() {
  item_.Clear();
}
inline const ::weizhu::discover::Item& GetItemByIdResponse::item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemByIdResponse.item)
  return item_.Get(index);
}
inline ::weizhu::discover::Item* GetItemByIdResponse::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetItemByIdResponse.item)
  return item_.Mutable(index);
}
inline ::weizhu::discover::Item* GetItemByIdResponse::add_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover.GetItemByIdResponse.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >&
GetItemByIdResponse::item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover.GetItemByIdResponse.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >*
GetItemByIdResponse::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover.GetItemByIdResponse.item)
  return &item_;
}

// -------------------------------------------------------------------

// GetItemContentRequest

// required int64 item_id = 1;
inline bool GetItemContentRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemContentRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemContentRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemContentRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 GetItemContentRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemContentRequest.item_id)
  return item_id_;
}
inline void GetItemContentRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemContentRequest.item_id)
}

// -------------------------------------------------------------------

// GetItemContentResponse

// optional .weizhu.discover.ItemContent item_content = 1;
inline bool GetItemContentResponse::has_item_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemContentResponse::set_has_item_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemContentResponse::clear_has_item_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemContentResponse::clear_item_content() {
  if (item_content_ != NULL) item_content_->::weizhu::discover::ItemContent::Clear();
  clear_has_item_content();
}
inline const ::weizhu::discover::ItemContent& GetItemContentResponse::item_content() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemContentResponse.item_content)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return item_content_ != NULL ? *item_content_ : *default_instance().item_content_;
#else
  return item_content_ != NULL ? *item_content_ : *default_instance_->item_content_;
#endif
}
inline ::weizhu::discover::ItemContent* GetItemContentResponse::mutable_item_content() {
  set_has_item_content();
  if (item_content_ == NULL) item_content_ = new ::weizhu::discover::ItemContent;
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetItemContentResponse.item_content)
  return item_content_;
}
inline ::weizhu::discover::ItemContent* GetItemContentResponse::release_item_content() {
  clear_has_item_content();
  ::weizhu::discover::ItemContent* temp = item_content_;
  item_content_ = NULL;
  return temp;
}
inline void GetItemContentResponse::set_allocated_item_content(::weizhu::discover::ItemContent* item_content) {
  delete item_content_;
  item_content_ = item_content;
  if (item_content) {
    set_has_item_content();
  } else {
    clear_has_item_content();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.GetItemContentResponse.item_content)
}

// -------------------------------------------------------------------

// SearchItemRequest

// required string keyword = 1;
inline bool SearchItemRequest::has_keyword() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchItemRequest::set_has_keyword() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchItemRequest::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchItemRequest::clear_keyword() {
  if (keyword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_->clear();
  }
  clear_has_keyword();
}
inline const ::std::string& SearchItemRequest::keyword() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.SearchItemRequest.keyword)
  return *keyword_;
}
inline void SearchItemRequest::set_keyword(const ::std::string& value) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.SearchItemRequest.keyword)
}
inline void SearchItemRequest::set_keyword(const char* value) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.SearchItemRequest.keyword)
}
inline void SearchItemRequest::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.SearchItemRequest.keyword)
}
inline ::std::string* SearchItemRequest::mutable_keyword() {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.SearchItemRequest.keyword)
  return keyword_;
}
inline ::std::string* SearchItemRequest::release_keyword() {
  clear_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = keyword_;
    keyword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SearchItemRequest::set_allocated_keyword(::std::string* keyword) {
  if (keyword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete keyword_;
  }
  if (keyword) {
    set_has_keyword();
    keyword_ = keyword;
  } else {
    clear_has_keyword();
    keyword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.SearchItemRequest.keyword)
}

// -------------------------------------------------------------------

// SearchItemResponse

// repeated .weizhu.discover.Item item = 1;
inline int SearchItemResponse::item_size() const {
  return item_.size();
}
inline void SearchItemResponse::clear_item() {
  item_.Clear();
}
inline const ::weizhu::discover::Item& SearchItemResponse::item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover.SearchItemResponse.item)
  return item_.Get(index);
}
inline ::weizhu::discover::Item* SearchItemResponse::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover.SearchItemResponse.item)
  return item_.Mutable(index);
}
inline ::weizhu::discover::Item* SearchItemResponse::add_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover.SearchItemResponse.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >&
SearchItemResponse::item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover.SearchItemResponse.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >*
SearchItemResponse::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover.SearchItemResponse.item)
  return &item_;
}

// -------------------------------------------------------------------

// GetItemPVRequest

// required int64 item_id = 1;
inline bool GetItemPVRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemPVRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemPVRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemPVRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 GetItemPVRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemPVRequest.item_id)
  return item_id_;
}
inline void GetItemPVRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemPVRequest.item_id)
}

// required bool is_incre_pv = 2;
inline bool GetItemPVRequest::has_is_incre_pv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemPVRequest::set_has_is_incre_pv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemPVRequest::clear_has_is_incre_pv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemPVRequest::clear_is_incre_pv() {
  is_incre_pv_ = false;
  clear_has_is_incre_pv();
}
inline bool GetItemPVRequest::is_incre_pv() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemPVRequest.is_incre_pv)
  return is_incre_pv_;
}
inline void GetItemPVRequest::set_is_incre_pv(bool value) {
  set_has_is_incre_pv();
  is_incre_pv_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemPVRequest.is_incre_pv)
}

// -------------------------------------------------------------------

// GetItemPVResponse

// required int32 pv = 1;
inline bool GetItemPVResponse::has_pv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemPVResponse::set_has_pv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemPVResponse::clear_has_pv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemPVResponse::clear_pv() {
  pv_ = 0;
  clear_has_pv();
}
inline ::google::protobuf::int32 GetItemPVResponse::pv() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemPVResponse.pv)
  return pv_;
}
inline void GetItemPVResponse::set_pv(::google::protobuf::int32 value) {
  set_has_pv();
  pv_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemPVResponse.pv)
}

// -------------------------------------------------------------------

// GetItemScoreRequest

// required int64 item_id = 1;
inline bool GetItemScoreRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemScoreRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemScoreRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemScoreRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 GetItemScoreRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemScoreRequest.item_id)
  return item_id_;
}
inline void GetItemScoreRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemScoreRequest.item_id)
}

// -------------------------------------------------------------------

// GetItemScoreResponse

// optional int32 score = 1;
inline bool GetItemScoreResponse::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemScoreResponse::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemScoreResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemScoreResponse::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 GetItemScoreResponse::score() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemScoreResponse.score)
  return score_;
}
inline void GetItemScoreResponse::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemScoreResponse.score)
}

// required int32 total_score = 2;
inline bool GetItemScoreResponse::has_total_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemScoreResponse::set_has_total_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemScoreResponse::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemScoreResponse::clear_total_score() {
  total_score_ = 0;
  clear_has_total_score();
}
inline ::google::protobuf::int32 GetItemScoreResponse::total_score() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemScoreResponse.total_score)
  return total_score_;
}
inline void GetItemScoreResponse::set_total_score(::google::protobuf::int32 value) {
  set_has_total_score();
  total_score_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemScoreResponse.total_score)
}

// required int32 total_user = 3;
inline bool GetItemScoreResponse::has_total_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemScoreResponse::set_has_total_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemScoreResponse::clear_has_total_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemScoreResponse::clear_total_user() {
  total_user_ = 0;
  clear_has_total_user();
}
inline ::google::protobuf::int32 GetItemScoreResponse::total_user() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemScoreResponse.total_user)
  return total_user_;
}
inline void GetItemScoreResponse::set_total_user(::google::protobuf::int32 value) {
  set_has_total_user();
  total_user_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemScoreResponse.total_user)
}

// -------------------------------------------------------------------

// ScoreItemRequest

// required int64 item_id = 1;
inline bool ScoreItemRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScoreItemRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScoreItemRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScoreItemRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 ScoreItemRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.ScoreItemRequest.item_id)
  return item_id_;
}
inline void ScoreItemRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.ScoreItemRequest.item_id)
}

// required int32 score = 2;
inline bool ScoreItemRequest::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScoreItemRequest::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScoreItemRequest::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScoreItemRequest::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ScoreItemRequest::score() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.ScoreItemRequest.score)
  return score_;
}
inline void ScoreItemRequest::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.ScoreItemRequest.score)
}

// -------------------------------------------------------------------

// ScoreItemResponse

// optional .weizhu.discover.ScoreItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
inline bool ScoreItemResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScoreItemResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScoreItemResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScoreItemResponse::clear_result() {
  result_ = 99;
  clear_has_result();
}
inline ::weizhu::discover::ScoreItemResponse_Result ScoreItemResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.ScoreItemResponse.result)
  return static_cast< ::weizhu::discover::ScoreItemResponse_Result >(result_);
}
inline void ScoreItemResponse::set_result(::weizhu::discover::ScoreItemResponse_Result value) {
  assert(::weizhu::discover::ScoreItemResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.ScoreItemResponse.result)
}

// optional string fail_text = 2;
inline bool ScoreItemResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScoreItemResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScoreItemResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScoreItemResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& ScoreItemResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.ScoreItemResponse.fail_text)
  return *fail_text_;
}
inline void ScoreItemResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.ScoreItemResponse.fail_text)
}
inline void ScoreItemResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.ScoreItemResponse.fail_text)
}
inline void ScoreItemResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.ScoreItemResponse.fail_text)
}
inline ::std::string* ScoreItemResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.ScoreItemResponse.fail_text)
  return fail_text_;
}
inline ::std::string* ScoreItemResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ScoreItemResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.ScoreItemResponse.fail_text)
}

// -------------------------------------------------------------------

// GetItemCommentListRequest

// required int64 item_id = 1;
inline bool GetItemCommentListRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemCommentListRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemCommentListRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemCommentListRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 GetItemCommentListRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemCommentListRequest.item_id)
  return item_id_;
}
inline void GetItemCommentListRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemCommentListRequest.item_id)
}

// optional int64 last_comment_id = 2;
inline bool GetItemCommentListRequest::has_last_comment_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemCommentListRequest::set_has_last_comment_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemCommentListRequest::clear_has_last_comment_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemCommentListRequest::clear_last_comment_id() {
  last_comment_id_ = GOOGLE_LONGLONG(0);
  clear_has_last_comment_id();
}
inline ::google::protobuf::int64 GetItemCommentListRequest::last_comment_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemCommentListRequest.last_comment_id)
  return last_comment_id_;
}
inline void GetItemCommentListRequest::set_last_comment_id(::google::protobuf::int64 value) {
  set_has_last_comment_id();
  last_comment_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemCommentListRequest.last_comment_id)
}

// optional int32 last_comment_time = 3;
inline bool GetItemCommentListRequest::has_last_comment_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemCommentListRequest::set_has_last_comment_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemCommentListRequest::clear_has_last_comment_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemCommentListRequest::clear_last_comment_time() {
  last_comment_time_ = 0;
  clear_has_last_comment_time();
}
inline ::google::protobuf::int32 GetItemCommentListRequest::last_comment_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemCommentListRequest.last_comment_time)
  return last_comment_time_;
}
inline void GetItemCommentListRequest::set_last_comment_time(::google::protobuf::int32 value) {
  set_has_last_comment_time();
  last_comment_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemCommentListRequest.last_comment_time)
}

// required int32 size = 4;
inline bool GetItemCommentListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetItemCommentListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetItemCommentListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetItemCommentListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetItemCommentListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemCommentListRequest.size)
  return size_;
}
inline void GetItemCommentListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemCommentListRequest.size)
}

// -------------------------------------------------------------------

// GetItemCommentListResponse

// repeated .weizhu.discover.Comment comment = 1;
inline int GetItemCommentListResponse::comment_size() const {
  return comment_.size();
}
inline void GetItemCommentListResponse::clear_comment() {
  comment_.Clear();
}
inline const ::weizhu::discover::Comment& GetItemCommentListResponse::comment(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemCommentListResponse.comment)
  return comment_.Get(index);
}
inline ::weizhu::discover::Comment* GetItemCommentListResponse::mutable_comment(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetItemCommentListResponse.comment)
  return comment_.Mutable(index);
}
inline ::weizhu::discover::Comment* GetItemCommentListResponse::add_comment() {
  // @@protoc_insertion_point(field_add:weizhu.discover.GetItemCommentListResponse.comment)
  return comment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Comment >&
GetItemCommentListResponse::comment() const {
  // @@protoc_insertion_point(field_list:weizhu.discover.GetItemCommentListResponse.comment)
  return comment_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Comment >*
GetItemCommentListResponse::mutable_comment() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover.GetItemCommentListResponse.comment)
  return &comment_;
}

// required bool has_more = 2;
inline bool GetItemCommentListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemCommentListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemCommentListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemCommentListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetItemCommentListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemCommentListResponse.has_more)
  return has_more_;
}
inline void GetItemCommentListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemCommentListResponse.has_more)
}

// required int32 total = 3;
inline bool GetItemCommentListResponse::has_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemCommentListResponse::set_has_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemCommentListResponse::clear_has_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemCommentListResponse::clear_total() {
  total_ = 0;
  clear_has_total();
}
inline ::google::protobuf::int32 GetItemCommentListResponse::total() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemCommentListResponse.total)
  return total_;
}
inline void GetItemCommentListResponse::set_total(::google::protobuf::int32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemCommentListResponse.total)
}

// -------------------------------------------------------------------

// CommentItemRequest

// required int64 item_id = 1;
inline bool CommentItemRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommentItemRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommentItemRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommentItemRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 CommentItemRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.CommentItemRequest.item_id)
  return item_id_;
}
inline void CommentItemRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.CommentItemRequest.item_id)
}

// required string comment_content = 2;
inline bool CommentItemRequest::has_comment_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommentItemRequest::set_has_comment_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommentItemRequest::clear_has_comment_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommentItemRequest::clear_comment_content() {
  if (comment_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_content_->clear();
  }
  clear_has_comment_content();
}
inline const ::std::string& CommentItemRequest::comment_content() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.CommentItemRequest.comment_content)
  return *comment_content_;
}
inline void CommentItemRequest::set_comment_content(const ::std::string& value) {
  set_has_comment_content();
  if (comment_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_content_ = new ::std::string;
  }
  comment_content_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.CommentItemRequest.comment_content)
}
inline void CommentItemRequest::set_comment_content(const char* value) {
  set_has_comment_content();
  if (comment_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_content_ = new ::std::string;
  }
  comment_content_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.CommentItemRequest.comment_content)
}
inline void CommentItemRequest::set_comment_content(const char* value, size_t size) {
  set_has_comment_content();
  if (comment_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_content_ = new ::std::string;
  }
  comment_content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.CommentItemRequest.comment_content)
}
inline ::std::string* CommentItemRequest::mutable_comment_content() {
  set_has_comment_content();
  if (comment_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.CommentItemRequest.comment_content)
  return comment_content_;
}
inline ::std::string* CommentItemRequest::release_comment_content() {
  clear_has_comment_content();
  if (comment_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_content_;
    comment_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CommentItemRequest::set_allocated_comment_content(::std::string* comment_content) {
  if (comment_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_content_;
  }
  if (comment_content) {
    set_has_comment_content();
    comment_content_ = comment_content;
  } else {
    clear_has_comment_content();
    comment_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.CommentItemRequest.comment_content)
}

// -------------------------------------------------------------------

// CommentItemResponse

// optional .weizhu.discover.CommentItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
inline bool CommentItemResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommentItemResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommentItemResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommentItemResponse::clear_result() {
  result_ = 99;
  clear_has_result();
}
inline ::weizhu::discover::CommentItemResponse_Result CommentItemResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.CommentItemResponse.result)
  return static_cast< ::weizhu::discover::CommentItemResponse_Result >(result_);
}
inline void CommentItemResponse::set_result(::weizhu::discover::CommentItemResponse_Result value) {
  assert(::weizhu::discover::CommentItemResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.CommentItemResponse.result)
}

// optional string fail_text = 2;
inline bool CommentItemResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommentItemResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommentItemResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommentItemResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& CommentItemResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.CommentItemResponse.fail_text)
  return *fail_text_;
}
inline void CommentItemResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.CommentItemResponse.fail_text)
}
inline void CommentItemResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.CommentItemResponse.fail_text)
}
inline void CommentItemResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.CommentItemResponse.fail_text)
}
inline ::std::string* CommentItemResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.CommentItemResponse.fail_text)
  return fail_text_;
}
inline ::std::string* CommentItemResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CommentItemResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.CommentItemResponse.fail_text)
}

// optional int64 comment_id = 3;
inline bool CommentItemResponse::has_comment_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommentItemResponse::set_has_comment_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommentItemResponse::clear_has_comment_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommentItemResponse::clear_comment_id() {
  comment_id_ = GOOGLE_LONGLONG(0);
  clear_has_comment_id();
}
inline ::google::protobuf::int64 CommentItemResponse::comment_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.CommentItemResponse.comment_id)
  return comment_id_;
}
inline void CommentItemResponse::set_comment_id(::google::protobuf::int64 value) {
  set_has_comment_id();
  comment_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.CommentItemResponse.comment_id)
}

// -------------------------------------------------------------------

// DeleteCommentRequest

// required int64 comment_id = 1;
inline bool DeleteCommentRequest::has_comment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteCommentRequest::set_has_comment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteCommentRequest::clear_has_comment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteCommentRequest::clear_comment_id() {
  comment_id_ = GOOGLE_LONGLONG(0);
  clear_has_comment_id();
}
inline ::google::protobuf::int64 DeleteCommentRequest::comment_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.DeleteCommentRequest.comment_id)
  return comment_id_;
}
inline void DeleteCommentRequest::set_comment_id(::google::protobuf::int64 value) {
  set_has_comment_id();
  comment_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.DeleteCommentRequest.comment_id)
}

// -------------------------------------------------------------------

// DeleteCommentResponse

// optional .weizhu.discover.DeleteCommentResponse.Result result = 1 [default = FAIL_UNKNOWN];
inline bool DeleteCommentResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteCommentResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteCommentResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteCommentResponse::clear_result() {
  result_ = 99;
  clear_has_result();
}
inline ::weizhu::discover::DeleteCommentResponse_Result DeleteCommentResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.DeleteCommentResponse.result)
  return static_cast< ::weizhu::discover::DeleteCommentResponse_Result >(result_);
}
inline void DeleteCommentResponse::set_result(::weizhu::discover::DeleteCommentResponse_Result value) {
  assert(::weizhu::discover::DeleteCommentResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.DeleteCommentResponse.result)
}

// optional string fail_text = 2;
inline bool DeleteCommentResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteCommentResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteCommentResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteCommentResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& DeleteCommentResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.DeleteCommentResponse.fail_text)
  return *fail_text_;
}
inline void DeleteCommentResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover.DeleteCommentResponse.fail_text)
}
inline void DeleteCommentResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover.DeleteCommentResponse.fail_text)
}
inline void DeleteCommentResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover.DeleteCommentResponse.fail_text)
}
inline ::std::string* DeleteCommentResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover.DeleteCommentResponse.fail_text)
  return fail_text_;
}
inline ::std::string* DeleteCommentResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeleteCommentResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover.DeleteCommentResponse.fail_text)
}

// -------------------------------------------------------------------

// GetItemListRequest

// optional int64 last_item_id = 1;
inline bool GetItemListRequest::has_last_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemListRequest::set_has_last_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemListRequest::clear_has_last_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemListRequest::clear_last_item_id() {
  last_item_id_ = GOOGLE_LONGLONG(0);
  clear_has_last_item_id();
}
inline ::google::protobuf::int64 GetItemListRequest::last_item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemListRequest.last_item_id)
  return last_item_id_;
}
inline void GetItemListRequest::set_last_item_id(::google::protobuf::int64 value) {
  set_has_last_item_id();
  last_item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemListRequest.last_item_id)
}

// required int32 size = 2;
inline bool GetItemListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetItemListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemListRequest.size)
  return size_;
}
inline void GetItemListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemListRequest.size)
}

// -------------------------------------------------------------------

// GetItemListResponse

// repeated .weizhu.discover.Item item = 1;
inline int GetItemListResponse::item_size() const {
  return item_.size();
}
inline void GetItemListResponse::clear_item() {
  item_.Clear();
}
inline const ::weizhu::discover::Item& GetItemListResponse::item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemListResponse.item)
  return item_.Get(index);
}
inline ::weizhu::discover::Item* GetItemListResponse::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover.GetItemListResponse.item)
  return item_.Mutable(index);
}
inline ::weizhu::discover::Item* GetItemListResponse::add_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover.GetItemListResponse.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >&
GetItemListResponse::item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover.GetItemListResponse.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover::Item >*
GetItemListResponse::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover.GetItemListResponse.item)
  return &item_;
}

// required bool has_more = 2;
inline bool GetItemListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetItemListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover.GetItemListResponse.has_more)
  return has_more_;
}
inline void GetItemListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover.GetItemListResponse.has_more)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace discover
}  // namespace weizhu

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_discover_2eproto__INCLUDED
