// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: official.proto

#ifndef PROTOBUF_official_2eproto__INCLUDED
#define PROTOBUF_official_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "weizhu.pb.h"
// @@protoc_insertion_point(includes)

namespace weizhu {
namespace official {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_official_2eproto();
void protobuf_AssignDesc_official_2eproto();
void protobuf_ShutdownFile_official_2eproto();

class Official;
class OfficialMessage;
class OfficialMessage_Text;
class OfficialMessage_Voice;
class OfficialMessage_Image;
class OfficialMessage_User;
class OfficialMessage_Video;
class OfficialMessage_File;
class OfficialMessage_DiscoverItem;
class OfficialMessage_CommunityPost;
class OfficialMessagePush;
class GetOfficialByIdRequest;
class GetOfficialByIdResponse;
class GetOfficialListRequest;
class GetOfficialListResponse;
class GetOfficialMessageRequest;
class GetOfficialMessageResponse;
class SendOfficialMessageRequest;
class SendOfficialMessageResponse;

enum SendOfficialMessageResponse_Result {
  SendOfficialMessageResponse_Result_SUCC = 0,
  SendOfficialMessageResponse_Result_FAIL_OFFICIAL_NOT_EXIST = 1,
  SendOfficialMessageResponse_Result_FAIL_MSG_INVALID = 2,
  SendOfficialMessageResponse_Result_FAIL_UNKNOWN = 99
};
bool SendOfficialMessageResponse_Result_IsValid(int value);
const SendOfficialMessageResponse_Result SendOfficialMessageResponse_Result_Result_MIN = SendOfficialMessageResponse_Result_SUCC;
const SendOfficialMessageResponse_Result SendOfficialMessageResponse_Result_Result_MAX = SendOfficialMessageResponse_Result_FAIL_UNKNOWN;
const int SendOfficialMessageResponse_Result_Result_ARRAYSIZE = SendOfficialMessageResponse_Result_Result_MAX + 1;

enum State {
  NORMAL = 0,
  DISABLE = 1,
  DELETE = 2
};
bool State_IsValid(int value);
const State State_MIN = NORMAL;
const State State_MAX = DELETE;
const int State_ARRAYSIZE = State_MAX + 1;

// ===================================================================

class Official : public ::google::protobuf::MessageLite {
 public:
  Official();
  virtual ~Official();

  Official(const Official& from);

  inline Official& operator=(const Official& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Official& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Official* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Official* other);

  // implements Message ----------------------------------------------

  Official* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Official& from);
  void MergeFrom(const Official& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 official_id = 1;
  inline bool has_official_id() const;
  inline void clear_official_id();
  static const int kOfficialIdFieldNumber = 1;
  inline ::google::protobuf::int64 official_id() const;
  inline void set_official_id(::google::protobuf::int64 value);

  // required string official_name = 2;
  inline bool has_official_name() const;
  inline void clear_official_name();
  static const int kOfficialNameFieldNumber = 2;
  inline const ::std::string& official_name() const;
  inline void set_official_name(const ::std::string& value);
  inline void set_official_name(const char* value);
  inline void set_official_name(const char* value, size_t size);
  inline ::std::string* mutable_official_name();
  inline ::std::string* release_official_name();
  inline void set_allocated_official_name(::std::string* official_name);

  // required string avatar = 3;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 3;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // optional string official_desc = 4;
  inline bool has_official_desc() const;
  inline void clear_official_desc();
  static const int kOfficialDescFieldNumber = 4;
  inline const ::std::string& official_desc() const;
  inline void set_official_desc(const ::std::string& value);
  inline void set_official_desc(const char* value);
  inline void set_official_desc(const char* value, size_t size);
  inline ::std::string* mutable_official_desc();
  inline ::std::string* release_official_desc();
  inline void set_allocated_official_desc(::std::string* official_desc);

  // optional string function_desc = 5;
  inline bool has_function_desc() const;
  inline void clear_function_desc();
  static const int kFunctionDescFieldNumber = 5;
  inline const ::std::string& function_desc() const;
  inline void set_function_desc(const ::std::string& value);
  inline void set_function_desc(const char* value);
  inline void set_function_desc(const char* value, size_t size);
  inline ::std::string* mutable_function_desc();
  inline ::std::string* release_function_desc();
  inline void set_allocated_function_desc(::std::string* function_desc);

  // optional int32 allow_model_id = 6;
  inline bool has_allow_model_id() const;
  inline void clear_allow_model_id();
  static const int kAllowModelIdFieldNumber = 6;
  inline ::google::protobuf::int32 allow_model_id() const;
  inline void set_allow_model_id(::google::protobuf::int32 value);

  // optional .weizhu.official.State state = 95 [default = NORMAL];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 95;
  inline ::weizhu::official::State state() const;
  inline void set_state(::weizhu::official::State value);

  // optional int64 create_admin_id = 96;
  inline bool has_create_admin_id() const;
  inline void clear_create_admin_id();
  static const int kCreateAdminIdFieldNumber = 96;
  inline ::google::protobuf::int64 create_admin_id() const;
  inline void set_create_admin_id(::google::protobuf::int64 value);

  // optional int32 create_time = 97;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 97;
  inline ::google::protobuf::int32 create_time() const;
  inline void set_create_time(::google::protobuf::int32 value);

  // optional int64 update_admin_id = 98;
  inline bool has_update_admin_id() const;
  inline void clear_update_admin_id();
  static const int kUpdateAdminIdFieldNumber = 98;
  inline ::google::protobuf::int64 update_admin_id() const;
  inline void set_update_admin_id(::google::protobuf::int64 value);

  // optional int32 update_time = 99;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 99;
  inline ::google::protobuf::int32 update_time() const;
  inline void set_update_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.official.Official)
 private:
  inline void set_has_official_id();
  inline void clear_has_official_id();
  inline void set_has_official_name();
  inline void clear_has_official_name();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_official_desc();
  inline void clear_has_official_desc();
  inline void set_has_function_desc();
  inline void clear_has_function_desc();
  inline void set_has_allow_model_id();
  inline void clear_has_allow_model_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_create_admin_id();
  inline void clear_has_create_admin_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_update_admin_id();
  inline void clear_has_update_admin_id();
  inline void set_has_update_time();
  inline void clear_has_update_time();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 official_id_;
  ::std::string* official_name_;
  ::std::string* avatar_;
  ::std::string* official_desc_;
  ::std::string* function_desc_;
  ::google::protobuf::int32 allow_model_id_;
  int state_;
  ::google::protobuf::int64 create_admin_id_;
  ::google::protobuf::int64 update_admin_id_;
  ::google::protobuf::int32 create_time_;
  ::google::protobuf::int32 update_time_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static Official* default_instance_;
};
// -------------------------------------------------------------------

class OfficialMessage_Text : public ::google::protobuf::MessageLite {
 public:
  OfficialMessage_Text();
  virtual ~OfficialMessage_Text();

  OfficialMessage_Text(const OfficialMessage_Text& from);

  inline OfficialMessage_Text& operator=(const OfficialMessage_Text& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const OfficialMessage_Text& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OfficialMessage_Text* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OfficialMessage_Text* other);

  // implements Message ----------------------------------------------

  OfficialMessage_Text* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OfficialMessage_Text& from);
  void MergeFrom(const OfficialMessage_Text& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:weizhu.official.OfficialMessage.Text)
 private:
  inline void set_has_content();
  inline void clear_has_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* content_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static OfficialMessage_Text* default_instance_;
};
// -------------------------------------------------------------------

class OfficialMessage_Voice : public ::google::protobuf::MessageLite {
 public:
  OfficialMessage_Voice();
  virtual ~OfficialMessage_Voice();

  OfficialMessage_Voice(const OfficialMessage_Voice& from);

  inline OfficialMessage_Voice& operator=(const OfficialMessage_Voice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const OfficialMessage_Voice& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OfficialMessage_Voice* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OfficialMessage_Voice* other);

  // implements Message ----------------------------------------------

  OfficialMessage_Voice* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OfficialMessage_Voice& from);
  void MergeFrom(const OfficialMessage_Voice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional int32 duration = 2;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 2;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.official.OfficialMessage.Voice)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_duration();
  inline void clear_has_duration();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  ::google::protobuf::int32 duration_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static OfficialMessage_Voice* default_instance_;
};
// -------------------------------------------------------------------

class OfficialMessage_Image : public ::google::protobuf::MessageLite {
 public:
  OfficialMessage_Image();
  virtual ~OfficialMessage_Image();

  OfficialMessage_Image(const OfficialMessage_Image& from);

  inline OfficialMessage_Image& operator=(const OfficialMessage_Image& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const OfficialMessage_Image& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OfficialMessage_Image* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OfficialMessage_Image* other);

  // implements Message ----------------------------------------------

  OfficialMessage_Image* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OfficialMessage_Image& from);
  void MergeFrom(const OfficialMessage_Image& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:weizhu.official.OfficialMessage.Image)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static OfficialMessage_Image* default_instance_;
};
// -------------------------------------------------------------------

class OfficialMessage_User : public ::google::protobuf::MessageLite {
 public:
  OfficialMessage_User();
  virtual ~OfficialMessage_User();

  OfficialMessage_User(const OfficialMessage_User& from);

  inline OfficialMessage_User& operator=(const OfficialMessage_User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const OfficialMessage_User& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OfficialMessage_User* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OfficialMessage_User* other);

  // implements Message ----------------------------------------------

  OfficialMessage_User* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OfficialMessage_User& from);
  void MergeFrom(const OfficialMessage_User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.official.OfficialMessage.User)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static OfficialMessage_User* default_instance_;
};
// -------------------------------------------------------------------

class OfficialMessage_Video : public ::google::protobuf::MessageLite {
 public:
  OfficialMessage_Video();
  virtual ~OfficialMessage_Video();

  OfficialMessage_Video(const OfficialMessage_Video& from);

  inline OfficialMessage_Video& operator=(const OfficialMessage_Video& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const OfficialMessage_Video& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OfficialMessage_Video* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OfficialMessage_Video* other);

  // implements Message ----------------------------------------------

  OfficialMessage_Video* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OfficialMessage_Video& from);
  void MergeFrom(const OfficialMessage_Video& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // required int32 size = 3;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 3;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // required int32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // required string image_name = 5;
  inline bool has_image_name() const;
  inline void clear_image_name();
  static const int kImageNameFieldNumber = 5;
  inline const ::std::string& image_name() const;
  inline void set_image_name(const ::std::string& value);
  inline void set_image_name(const char* value);
  inline void set_image_name(const char* value, size_t size);
  inline ::std::string* mutable_image_name();
  inline ::std::string* release_image_name();
  inline void set_allocated_image_name(::std::string* image_name);

  // @@protoc_insertion_point(class_scope:weizhu.official.OfficialMessage.Video)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_image_name();
  inline void clear_has_image_name();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* type_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 time_;
  ::std::string* image_name_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static OfficialMessage_Video* default_instance_;
};
// -------------------------------------------------------------------

class OfficialMessage_File : public ::google::protobuf::MessageLite {
 public:
  OfficialMessage_File();
  virtual ~OfficialMessage_File();

  OfficialMessage_File(const OfficialMessage_File& from);

  inline OfficialMessage_File& operator=(const OfficialMessage_File& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const OfficialMessage_File& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OfficialMessage_File* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OfficialMessage_File* other);

  // implements Message ----------------------------------------------

  OfficialMessage_File* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OfficialMessage_File& from);
  void MergeFrom(const OfficialMessage_File& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string orginal_name = 2;
  inline bool has_orginal_name() const;
  inline void clear_orginal_name();
  static const int kOrginalNameFieldNumber = 2;
  inline const ::std::string& orginal_name() const;
  inline void set_orginal_name(const ::std::string& value);
  inline void set_orginal_name(const char* value);
  inline void set_orginal_name(const char* value, size_t size);
  inline ::std::string* mutable_orginal_name();
  inline ::std::string* release_orginal_name();
  inline void set_allocated_orginal_name(::std::string* orginal_name);

  // @@protoc_insertion_point(class_scope:weizhu.official.OfficialMessage.File)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_orginal_name();
  inline void clear_has_orginal_name();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* orginal_name_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static OfficialMessage_File* default_instance_;
};
// -------------------------------------------------------------------

class OfficialMessage_DiscoverItem : public ::google::protobuf::MessageLite {
 public:
  OfficialMessage_DiscoverItem();
  virtual ~OfficialMessage_DiscoverItem();

  OfficialMessage_DiscoverItem(const OfficialMessage_DiscoverItem& from);

  inline OfficialMessage_DiscoverItem& operator=(const OfficialMessage_DiscoverItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const OfficialMessage_DiscoverItem& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OfficialMessage_DiscoverItem* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OfficialMessage_DiscoverItem* other);

  // implements Message ----------------------------------------------

  OfficialMessage_DiscoverItem* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OfficialMessage_DiscoverItem& from);
  void MergeFrom(const OfficialMessage_DiscoverItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.official.OfficialMessage.DiscoverItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static OfficialMessage_DiscoverItem* default_instance_;
};
// -------------------------------------------------------------------

class OfficialMessage_CommunityPost : public ::google::protobuf::MessageLite {
 public:
  OfficialMessage_CommunityPost();
  virtual ~OfficialMessage_CommunityPost();

  OfficialMessage_CommunityPost(const OfficialMessage_CommunityPost& from);

  inline OfficialMessage_CommunityPost& operator=(const OfficialMessage_CommunityPost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const OfficialMessage_CommunityPost& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OfficialMessage_CommunityPost* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OfficialMessage_CommunityPost* other);

  // implements Message ----------------------------------------------

  OfficialMessage_CommunityPost* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OfficialMessage_CommunityPost& from);
  void MergeFrom(const OfficialMessage_CommunityPost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 post_id = 1;
  inline bool has_post_id() const;
  inline void clear_post_id();
  static const int kPostIdFieldNumber = 1;
  inline ::google::protobuf::int32 post_id() const;
  inline void set_post_id(::google::protobuf::int32 value);

  // optional string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:weizhu.official.OfficialMessage.CommunityPost)
 private:
  inline void set_has_post_id();
  inline void clear_has_post_id();
  inline void set_has_text();
  inline void clear_has_text();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* text_;
  ::google::protobuf::int32 post_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static OfficialMessage_CommunityPost* default_instance_;
};
// -------------------------------------------------------------------

class OfficialMessage : public ::google::protobuf::MessageLite {
 public:
  OfficialMessage();
  virtual ~OfficialMessage();

  OfficialMessage(const OfficialMessage& from);

  inline OfficialMessage& operator=(const OfficialMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const OfficialMessage& default_instance();

  enum MsgTypeCase {
    kText = 5,
    kVoice = 6,
    kImage = 7,
    kUser = 8,
    kVideo = 9,
    kFile = 10,
    kDiscoverItem = 12,
    kCommunityPost = 13,
    MSG_TYPE_NOT_SET = 0,
  };

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OfficialMessage* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OfficialMessage* other);

  // implements Message ----------------------------------------------

  OfficialMessage* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OfficialMessage& from);
  void MergeFrom(const OfficialMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef OfficialMessage_Text Text;
  typedef OfficialMessage_Voice Voice;
  typedef OfficialMessage_Image Image;
  typedef OfficialMessage_User User;
  typedef OfficialMessage_Video Video;
  typedef OfficialMessage_File File;
  typedef OfficialMessage_DiscoverItem DiscoverItem;
  typedef OfficialMessage_CommunityPost CommunityPost;

  // accessors -------------------------------------------------------

  // required int64 msg_seq = 1;
  inline bool has_msg_seq() const;
  inline void clear_msg_seq();
  static const int kMsgSeqFieldNumber = 1;
  inline ::google::protobuf::int64 msg_seq() const;
  inline void set_msg_seq(::google::protobuf::int64 value);

  // required int32 msg_time = 2;
  inline bool has_msg_time() const;
  inline void clear_msg_time();
  static const int kMsgTimeFieldNumber = 2;
  inline ::google::protobuf::int32 msg_time() const;
  inline void set_msg_time(::google::protobuf::int32 value);

  // required bool is_from_user = 3;
  inline bool has_is_from_user() const;
  inline void clear_is_from_user();
  static const int kIsFromUserFieldNumber = 3;
  inline bool is_from_user() const;
  inline void set_is_from_user(bool value);

  // optional .weizhu.official.OfficialMessage.Text text = 5;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 5;
  inline const ::weizhu::official::OfficialMessage_Text& text() const;
  inline ::weizhu::official::OfficialMessage_Text* mutable_text();
  inline ::weizhu::official::OfficialMessage_Text* release_text();
  inline void set_allocated_text(::weizhu::official::OfficialMessage_Text* text);

  // optional .weizhu.official.OfficialMessage.Voice voice = 6;
  inline bool has_voice() const;
  inline void clear_voice();
  static const int kVoiceFieldNumber = 6;
  inline const ::weizhu::official::OfficialMessage_Voice& voice() const;
  inline ::weizhu::official::OfficialMessage_Voice* mutable_voice();
  inline ::weizhu::official::OfficialMessage_Voice* release_voice();
  inline void set_allocated_voice(::weizhu::official::OfficialMessage_Voice* voice);

  // optional .weizhu.official.OfficialMessage.Image image = 7;
  inline bool has_image() const;
  inline void clear_image();
  static const int kImageFieldNumber = 7;
  inline const ::weizhu::official::OfficialMessage_Image& image() const;
  inline ::weizhu::official::OfficialMessage_Image* mutable_image();
  inline ::weizhu::official::OfficialMessage_Image* release_image();
  inline void set_allocated_image(::weizhu::official::OfficialMessage_Image* image);

  // optional .weizhu.official.OfficialMessage.User user = 8;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 8;
  inline const ::weizhu::official::OfficialMessage_User& user() const;
  inline ::weizhu::official::OfficialMessage_User* mutable_user();
  inline ::weizhu::official::OfficialMessage_User* release_user();
  inline void set_allocated_user(::weizhu::official::OfficialMessage_User* user);

  // optional .weizhu.official.OfficialMessage.Video video = 9;
  inline bool has_video() const;
  inline void clear_video();
  static const int kVideoFieldNumber = 9;
  inline const ::weizhu::official::OfficialMessage_Video& video() const;
  inline ::weizhu::official::OfficialMessage_Video* mutable_video();
  inline ::weizhu::official::OfficialMessage_Video* release_video();
  inline void set_allocated_video(::weizhu::official::OfficialMessage_Video* video);

  // optional .weizhu.official.OfficialMessage.File file = 10;
  inline bool has_file() const;
  inline void clear_file();
  static const int kFileFieldNumber = 10;
  inline const ::weizhu::official::OfficialMessage_File& file() const;
  inline ::weizhu::official::OfficialMessage_File* mutable_file();
  inline ::weizhu::official::OfficialMessage_File* release_file();
  inline void set_allocated_file(::weizhu::official::OfficialMessage_File* file);

  // optional .weizhu.official.OfficialMessage.DiscoverItem discover_item = 12;
  inline bool has_discover_item() const;
  inline void clear_discover_item();
  static const int kDiscoverItemFieldNumber = 12;
  inline const ::weizhu::official::OfficialMessage_DiscoverItem& discover_item() const;
  inline ::weizhu::official::OfficialMessage_DiscoverItem* mutable_discover_item();
  inline ::weizhu::official::OfficialMessage_DiscoverItem* release_discover_item();
  inline void set_allocated_discover_item(::weizhu::official::OfficialMessage_DiscoverItem* discover_item);

  // optional .weizhu.official.OfficialMessage.CommunityPost community_post = 13;
  inline bool has_community_post() const;
  inline void clear_community_post();
  static const int kCommunityPostFieldNumber = 13;
  inline const ::weizhu::official::OfficialMessage_CommunityPost& community_post() const;
  inline ::weizhu::official::OfficialMessage_CommunityPost* mutable_community_post();
  inline ::weizhu::official::OfficialMessage_CommunityPost* release_community_post();
  inline void set_allocated_community_post(::weizhu::official::OfficialMessage_CommunityPost* community_post);

  inline MsgTypeCase msg_type_case() const;
  // @@protoc_insertion_point(class_scope:weizhu.official.OfficialMessage)
 private:
  inline void set_has_msg_seq();
  inline void clear_has_msg_seq();
  inline void set_has_msg_time();
  inline void clear_has_msg_time();
  inline void set_has_is_from_user();
  inline void clear_has_is_from_user();
  inline void set_has_text();
  inline void set_has_voice();
  inline void set_has_image();
  inline void set_has_user();
  inline void set_has_video();
  inline void set_has_file();
  inline void set_has_discover_item();
  inline void set_has_community_post();

  inline bool has_msg_type();
  void clear_msg_type();
  inline void clear_has_msg_type();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 msg_seq_;
  ::google::protobuf::int32 msg_time_;
  bool is_from_user_;
  union MsgTypeUnion {
    ::weizhu::official::OfficialMessage_Text* text_;
    ::weizhu::official::OfficialMessage_Voice* voice_;
    ::weizhu::official::OfficialMessage_Image* image_;
    ::weizhu::official::OfficialMessage_User* user_;
    ::weizhu::official::OfficialMessage_Video* video_;
    ::weizhu::official::OfficialMessage_File* file_;
    ::weizhu::official::OfficialMessage_DiscoverItem* discover_item_;
    ::weizhu::official::OfficialMessage_CommunityPost* community_post_;
  } msg_type_;
  ::google::protobuf::uint32 _oneof_case_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static OfficialMessage* default_instance_;
};
// -------------------------------------------------------------------

class OfficialMessagePush : public ::google::protobuf::MessageLite {
 public:
  OfficialMessagePush();
  virtual ~OfficialMessagePush();

  OfficialMessagePush(const OfficialMessagePush& from);

  inline OfficialMessagePush& operator=(const OfficialMessagePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const OfficialMessagePush& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OfficialMessagePush* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OfficialMessagePush* other);

  // implements Message ----------------------------------------------

  OfficialMessagePush* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OfficialMessagePush& from);
  void MergeFrom(const OfficialMessagePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 official_id = 1;
  inline bool has_official_id() const;
  inline void clear_official_id();
  static const int kOfficialIdFieldNumber = 1;
  inline ::google::protobuf::int64 official_id() const;
  inline void set_official_id(::google::protobuf::int64 value);

  // required .weizhu.official.OfficialMessage msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::weizhu::official::OfficialMessage& msg() const;
  inline ::weizhu::official::OfficialMessage* mutable_msg();
  inline ::weizhu::official::OfficialMessage* release_msg();
  inline void set_allocated_msg(::weizhu::official::OfficialMessage* msg);

  // @@protoc_insertion_point(class_scope:weizhu.official.OfficialMessagePush)
 private:
  inline void set_has_official_id();
  inline void clear_has_official_id();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 official_id_;
  ::weizhu::official::OfficialMessage* msg_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static OfficialMessagePush* default_instance_;
};
// -------------------------------------------------------------------

class GetOfficialByIdRequest : public ::google::protobuf::MessageLite {
 public:
  GetOfficialByIdRequest();
  virtual ~GetOfficialByIdRequest();

  GetOfficialByIdRequest(const GetOfficialByIdRequest& from);

  inline GetOfficialByIdRequest& operator=(const GetOfficialByIdRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetOfficialByIdRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetOfficialByIdRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetOfficialByIdRequest* other);

  // implements Message ----------------------------------------------

  GetOfficialByIdRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetOfficialByIdRequest& from);
  void MergeFrom(const GetOfficialByIdRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 official_id = 1;
  inline int official_id_size() const;
  inline void clear_official_id();
  static const int kOfficialIdFieldNumber = 1;
  inline ::google::protobuf::int64 official_id(int index) const;
  inline void set_official_id(int index, ::google::protobuf::int64 value);
  inline void add_official_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      official_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_official_id();

  // @@protoc_insertion_point(class_scope:weizhu.official.GetOfficialByIdRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > official_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static GetOfficialByIdRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetOfficialByIdResponse : public ::google::protobuf::MessageLite {
 public:
  GetOfficialByIdResponse();
  virtual ~GetOfficialByIdResponse();

  GetOfficialByIdResponse(const GetOfficialByIdResponse& from);

  inline GetOfficialByIdResponse& operator=(const GetOfficialByIdResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetOfficialByIdResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetOfficialByIdResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetOfficialByIdResponse* other);

  // implements Message ----------------------------------------------

  GetOfficialByIdResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetOfficialByIdResponse& from);
  void MergeFrom(const GetOfficialByIdResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.official.Official official = 1;
  inline int official_size() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 1;
  inline const ::weizhu::official::Official& official(int index) const;
  inline ::weizhu::official::Official* mutable_official(int index);
  inline ::weizhu::official::Official* add_official();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::official::Official >&
      official() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::official::Official >*
      mutable_official();

  // @@protoc_insertion_point(class_scope:weizhu.official.GetOfficialByIdResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::official::Official > official_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static GetOfficialByIdResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetOfficialListRequest : public ::google::protobuf::MessageLite {
 public:
  GetOfficialListRequest();
  virtual ~GetOfficialListRequest();

  GetOfficialListRequest(const GetOfficialListRequest& from);

  inline GetOfficialListRequest& operator=(const GetOfficialListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetOfficialListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetOfficialListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetOfficialListRequest* other);

  // implements Message ----------------------------------------------

  GetOfficialListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetOfficialListRequest& from);
  void MergeFrom(const GetOfficialListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 last_official_id = 1;
  inline bool has_last_official_id() const;
  inline void clear_last_official_id();
  static const int kLastOfficialIdFieldNumber = 1;
  inline ::google::protobuf::int64 last_official_id() const;
  inline void set_last_official_id(::google::protobuf::int64 value);

  // optional int32 official_size = 2;
  inline bool has_official_size() const;
  inline void clear_official_size();
  static const int kOfficialSizeFieldNumber = 2;
  inline ::google::protobuf::int32 official_size() const;
  inline void set_official_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.official.GetOfficialListRequest)
 private:
  inline void set_has_last_official_id();
  inline void clear_has_last_official_id();
  inline void set_has_official_size();
  inline void clear_has_official_size();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 last_official_id_;
  ::google::protobuf::int32 official_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static GetOfficialListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetOfficialListResponse : public ::google::protobuf::MessageLite {
 public:
  GetOfficialListResponse();
  virtual ~GetOfficialListResponse();

  GetOfficialListResponse(const GetOfficialListResponse& from);

  inline GetOfficialListResponse& operator=(const GetOfficialListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetOfficialListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetOfficialListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetOfficialListResponse* other);

  // implements Message ----------------------------------------------

  GetOfficialListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetOfficialListResponse& from);
  void MergeFrom(const GetOfficialListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.official.Official official = 1;
  inline int official_size() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 1;
  inline const ::weizhu::official::Official& official(int index) const;
  inline ::weizhu::official::Official* mutable_official(int index);
  inline ::weizhu::official::Official* add_official();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::official::Official >&
      official() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::official::Official >*
      mutable_official();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.official.GetOfficialListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::official::Official > official_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static GetOfficialListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetOfficialMessageRequest : public ::google::protobuf::MessageLite {
 public:
  GetOfficialMessageRequest();
  virtual ~GetOfficialMessageRequest();

  GetOfficialMessageRequest(const GetOfficialMessageRequest& from);

  inline GetOfficialMessageRequest& operator=(const GetOfficialMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetOfficialMessageRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetOfficialMessageRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetOfficialMessageRequest* other);

  // implements Message ----------------------------------------------

  GetOfficialMessageRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetOfficialMessageRequest& from);
  void MergeFrom(const GetOfficialMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 official_id = 1;
  inline bool has_official_id() const;
  inline void clear_official_id();
  static const int kOfficialIdFieldNumber = 1;
  inline ::google::protobuf::int64 official_id() const;
  inline void set_official_id(::google::protobuf::int64 value);

  // optional int64 msg_seq_begin = 2;
  inline bool has_msg_seq_begin() const;
  inline void clear_msg_seq_begin();
  static const int kMsgSeqBeginFieldNumber = 2;
  inline ::google::protobuf::int64 msg_seq_begin() const;
  inline void set_msg_seq_begin(::google::protobuf::int64 value);

  // optional int64 msg_seq_end = 3;
  inline bool has_msg_seq_end() const;
  inline void clear_msg_seq_end();
  static const int kMsgSeqEndFieldNumber = 3;
  inline ::google::protobuf::int64 msg_seq_end() const;
  inline void set_msg_seq_end(::google::protobuf::int64 value);

  // required int32 msg_size = 4;
  inline bool has_msg_size() const;
  inline void clear_msg_size();
  static const int kMsgSizeFieldNumber = 4;
  inline ::google::protobuf::int32 msg_size() const;
  inline void set_msg_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.official.GetOfficialMessageRequest)
 private:
  inline void set_has_official_id();
  inline void clear_has_official_id();
  inline void set_has_msg_seq_begin();
  inline void clear_has_msg_seq_begin();
  inline void set_has_msg_seq_end();
  inline void clear_has_msg_seq_end();
  inline void set_has_msg_size();
  inline void clear_has_msg_size();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 official_id_;
  ::google::protobuf::int64 msg_seq_begin_;
  ::google::protobuf::int64 msg_seq_end_;
  ::google::protobuf::int32 msg_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static GetOfficialMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetOfficialMessageResponse : public ::google::protobuf::MessageLite {
 public:
  GetOfficialMessageResponse();
  virtual ~GetOfficialMessageResponse();

  GetOfficialMessageResponse(const GetOfficialMessageResponse& from);

  inline GetOfficialMessageResponse& operator=(const GetOfficialMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetOfficialMessageResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetOfficialMessageResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetOfficialMessageResponse* other);

  // implements Message ----------------------------------------------

  GetOfficialMessageResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetOfficialMessageResponse& from);
  void MergeFrom(const GetOfficialMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.official.OfficialMessage msg = 1;
  inline int msg_size() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::weizhu::official::OfficialMessage& msg(int index) const;
  inline ::weizhu::official::OfficialMessage* mutable_msg(int index);
  inline ::weizhu::official::OfficialMessage* add_msg();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::official::OfficialMessage >&
      msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::official::OfficialMessage >*
      mutable_msg();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.official.GetOfficialMessageResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::official::OfficialMessage > msg_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static GetOfficialMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class SendOfficialMessageRequest : public ::google::protobuf::MessageLite {
 public:
  SendOfficialMessageRequest();
  virtual ~SendOfficialMessageRequest();

  SendOfficialMessageRequest(const SendOfficialMessageRequest& from);

  inline SendOfficialMessageRequest& operator=(const SendOfficialMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SendOfficialMessageRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SendOfficialMessageRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SendOfficialMessageRequest* other);

  // implements Message ----------------------------------------------

  SendOfficialMessageRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SendOfficialMessageRequest& from);
  void MergeFrom(const SendOfficialMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 official_id = 1;
  inline bool has_official_id() const;
  inline void clear_official_id();
  static const int kOfficialIdFieldNumber = 1;
  inline ::google::protobuf::int64 official_id() const;
  inline void set_official_id(::google::protobuf::int64 value);

  // required .weizhu.official.OfficialMessage msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::weizhu::official::OfficialMessage& msg() const;
  inline ::weizhu::official::OfficialMessage* mutable_msg();
  inline ::weizhu::official::OfficialMessage* release_msg();
  inline void set_allocated_msg(::weizhu::official::OfficialMessage* msg);

  // @@protoc_insertion_point(class_scope:weizhu.official.SendOfficialMessageRequest)
 private:
  inline void set_has_official_id();
  inline void clear_has_official_id();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 official_id_;
  ::weizhu::official::OfficialMessage* msg_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static SendOfficialMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class SendOfficialMessageResponse : public ::google::protobuf::MessageLite {
 public:
  SendOfficialMessageResponse();
  virtual ~SendOfficialMessageResponse();

  SendOfficialMessageResponse(const SendOfficialMessageResponse& from);

  inline SendOfficialMessageResponse& operator=(const SendOfficialMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SendOfficialMessageResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SendOfficialMessageResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SendOfficialMessageResponse* other);

  // implements Message ----------------------------------------------

  SendOfficialMessageResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SendOfficialMessageResponse& from);
  void MergeFrom(const SendOfficialMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef SendOfficialMessageResponse_Result Result;
  static const Result SUCC = SendOfficialMessageResponse_Result_SUCC;
  static const Result FAIL_OFFICIAL_NOT_EXIST = SendOfficialMessageResponse_Result_FAIL_OFFICIAL_NOT_EXIST;
  static const Result FAIL_MSG_INVALID = SendOfficialMessageResponse_Result_FAIL_MSG_INVALID;
  static const Result FAIL_UNKNOWN = SendOfficialMessageResponse_Result_FAIL_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return SendOfficialMessageResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    SendOfficialMessageResponse_Result_Result_MIN;
  static const Result Result_MAX =
    SendOfficialMessageResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    SendOfficialMessageResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .weizhu.official.SendOfficialMessageResponse.Result result = 1 [default = FAIL_UNKNOWN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::official::SendOfficialMessageResponse_Result result() const;
  inline void set_result(::weizhu::official::SendOfficialMessageResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // optional int64 msg_seq = 3;
  inline bool has_msg_seq() const;
  inline void clear_msg_seq();
  static const int kMsgSeqFieldNumber = 3;
  inline ::google::protobuf::int64 msg_seq() const;
  inline void set_msg_seq(::google::protobuf::int64 value);

  // optional int32 msg_time = 4;
  inline bool has_msg_time() const;
  inline void clear_msg_time();
  static const int kMsgTimeFieldNumber = 4;
  inline ::google::protobuf::int32 msg_time() const;
  inline void set_msg_time(::google::protobuf::int32 value);

  // repeated .weizhu.official.OfficialMessage response_msg = 5;
  inline int response_msg_size() const;
  inline void clear_response_msg();
  static const int kResponseMsgFieldNumber = 5;
  inline const ::weizhu::official::OfficialMessage& response_msg(int index) const;
  inline ::weizhu::official::OfficialMessage* mutable_response_msg(int index);
  inline ::weizhu::official::OfficialMessage* add_response_msg();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::official::OfficialMessage >&
      response_msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::official::OfficialMessage >*
      mutable_response_msg();

  // @@protoc_insertion_point(class_scope:weizhu.official.SendOfficialMessageResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();
  inline void set_has_msg_seq();
  inline void clear_has_msg_seq();
  inline void set_has_msg_time();
  inline void clear_has_msg_time();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  int result_;
  ::google::protobuf::int32 msg_time_;
  ::google::protobuf::int64 msg_seq_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::official::OfficialMessage > response_msg_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_official_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_official_2eproto();
  #endif
  friend void protobuf_AssignDesc_official_2eproto();
  friend void protobuf_ShutdownFile_official_2eproto();

  void InitAsDefaultInstance();
  static SendOfficialMessageResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// Official

// required int64 official_id = 1;
inline bool Official::has_official_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Official::set_has_official_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Official::clear_has_official_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Official::clear_official_id() {
  official_id_ = GOOGLE_LONGLONG(0);
  clear_has_official_id();
}
inline ::google::protobuf::int64 Official::official_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.official_id)
  return official_id_;
}
inline void Official::set_official_id(::google::protobuf::int64 value) {
  set_has_official_id();
  official_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.Official.official_id)
}

// required string official_name = 2;
inline bool Official::has_official_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Official::set_has_official_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Official::clear_has_official_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Official::clear_official_name() {
  if (official_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    official_name_->clear();
  }
  clear_has_official_name();
}
inline const ::std::string& Official::official_name() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.official_name)
  return *official_name_;
}
inline void Official::set_official_name(const ::std::string& value) {
  set_has_official_name();
  if (official_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    official_name_ = new ::std::string;
  }
  official_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.Official.official_name)
}
inline void Official::set_official_name(const char* value) {
  set_has_official_name();
  if (official_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    official_name_ = new ::std::string;
  }
  official_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.Official.official_name)
}
inline void Official::set_official_name(const char* value, size_t size) {
  set_has_official_name();
  if (official_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    official_name_ = new ::std::string;
  }
  official_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.Official.official_name)
}
inline ::std::string* Official::mutable_official_name() {
  set_has_official_name();
  if (official_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    official_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.Official.official_name)
  return official_name_;
}
inline ::std::string* Official::release_official_name() {
  clear_has_official_name();
  if (official_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = official_name_;
    official_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Official::set_allocated_official_name(::std::string* official_name) {
  if (official_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete official_name_;
  }
  if (official_name) {
    set_has_official_name();
    official_name_ = official_name;
  } else {
    clear_has_official_name();
    official_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.Official.official_name)
}

// required string avatar = 3;
inline bool Official::has_avatar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Official::set_has_avatar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Official::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Official::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& Official::avatar() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.avatar)
  return *avatar_;
}
inline void Official::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.Official.avatar)
}
inline void Official::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.Official.avatar)
}
inline void Official::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.Official.avatar)
}
inline ::std::string* Official::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.Official.avatar)
  return avatar_;
}
inline ::std::string* Official::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Official::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.Official.avatar)
}

// optional string official_desc = 4;
inline bool Official::has_official_desc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Official::set_has_official_desc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Official::clear_has_official_desc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Official::clear_official_desc() {
  if (official_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    official_desc_->clear();
  }
  clear_has_official_desc();
}
inline const ::std::string& Official::official_desc() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.official_desc)
  return *official_desc_;
}
inline void Official::set_official_desc(const ::std::string& value) {
  set_has_official_desc();
  if (official_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    official_desc_ = new ::std::string;
  }
  official_desc_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.Official.official_desc)
}
inline void Official::set_official_desc(const char* value) {
  set_has_official_desc();
  if (official_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    official_desc_ = new ::std::string;
  }
  official_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.Official.official_desc)
}
inline void Official::set_official_desc(const char* value, size_t size) {
  set_has_official_desc();
  if (official_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    official_desc_ = new ::std::string;
  }
  official_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.Official.official_desc)
}
inline ::std::string* Official::mutable_official_desc() {
  set_has_official_desc();
  if (official_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    official_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.Official.official_desc)
  return official_desc_;
}
inline ::std::string* Official::release_official_desc() {
  clear_has_official_desc();
  if (official_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = official_desc_;
    official_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Official::set_allocated_official_desc(::std::string* official_desc) {
  if (official_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete official_desc_;
  }
  if (official_desc) {
    set_has_official_desc();
    official_desc_ = official_desc;
  } else {
    clear_has_official_desc();
    official_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.Official.official_desc)
}

// optional string function_desc = 5;
inline bool Official::has_function_desc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Official::set_has_function_desc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Official::clear_has_function_desc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Official::clear_function_desc() {
  if (function_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    function_desc_->clear();
  }
  clear_has_function_desc();
}
inline const ::std::string& Official::function_desc() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.function_desc)
  return *function_desc_;
}
inline void Official::set_function_desc(const ::std::string& value) {
  set_has_function_desc();
  if (function_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    function_desc_ = new ::std::string;
  }
  function_desc_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.Official.function_desc)
}
inline void Official::set_function_desc(const char* value) {
  set_has_function_desc();
  if (function_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    function_desc_ = new ::std::string;
  }
  function_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.Official.function_desc)
}
inline void Official::set_function_desc(const char* value, size_t size) {
  set_has_function_desc();
  if (function_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    function_desc_ = new ::std::string;
  }
  function_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.Official.function_desc)
}
inline ::std::string* Official::mutable_function_desc() {
  set_has_function_desc();
  if (function_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    function_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.Official.function_desc)
  return function_desc_;
}
inline ::std::string* Official::release_function_desc() {
  clear_has_function_desc();
  if (function_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = function_desc_;
    function_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Official::set_allocated_function_desc(::std::string* function_desc) {
  if (function_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete function_desc_;
  }
  if (function_desc) {
    set_has_function_desc();
    function_desc_ = function_desc;
  } else {
    clear_has_function_desc();
    function_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.Official.function_desc)
}

// optional int32 allow_model_id = 6;
inline bool Official::has_allow_model_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Official::set_has_allow_model_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Official::clear_has_allow_model_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Official::clear_allow_model_id() {
  allow_model_id_ = 0;
  clear_has_allow_model_id();
}
inline ::google::protobuf::int32 Official::allow_model_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.allow_model_id)
  return allow_model_id_;
}
inline void Official::set_allow_model_id(::google::protobuf::int32 value) {
  set_has_allow_model_id();
  allow_model_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.Official.allow_model_id)
}

// optional .weizhu.official.State state = 95 [default = NORMAL];
inline bool Official::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Official::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Official::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Official::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::weizhu::official::State Official::state() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.state)
  return static_cast< ::weizhu::official::State >(state_);
}
inline void Official::set_state(::weizhu::official::State value) {
  assert(::weizhu::official::State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.Official.state)
}

// optional int64 create_admin_id = 96;
inline bool Official::has_create_admin_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Official::set_has_create_admin_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Official::clear_has_create_admin_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Official::clear_create_admin_id() {
  create_admin_id_ = GOOGLE_LONGLONG(0);
  clear_has_create_admin_id();
}
inline ::google::protobuf::int64 Official::create_admin_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.create_admin_id)
  return create_admin_id_;
}
inline void Official::set_create_admin_id(::google::protobuf::int64 value) {
  set_has_create_admin_id();
  create_admin_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.Official.create_admin_id)
}

// optional int32 create_time = 97;
inline bool Official::has_create_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Official::set_has_create_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Official::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Official::clear_create_time() {
  create_time_ = 0;
  clear_has_create_time();
}
inline ::google::protobuf::int32 Official::create_time() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.create_time)
  return create_time_;
}
inline void Official::set_create_time(::google::protobuf::int32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.Official.create_time)
}

// optional int64 update_admin_id = 98;
inline bool Official::has_update_admin_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Official::set_has_update_admin_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Official::clear_has_update_admin_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Official::clear_update_admin_id() {
  update_admin_id_ = GOOGLE_LONGLONG(0);
  clear_has_update_admin_id();
}
inline ::google::protobuf::int64 Official::update_admin_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.update_admin_id)
  return update_admin_id_;
}
inline void Official::set_update_admin_id(::google::protobuf::int64 value) {
  set_has_update_admin_id();
  update_admin_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.Official.update_admin_id)
}

// optional int32 update_time = 99;
inline bool Official::has_update_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Official::set_has_update_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Official::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Official::clear_update_time() {
  update_time_ = 0;
  clear_has_update_time();
}
inline ::google::protobuf::int32 Official::update_time() const {
  // @@protoc_insertion_point(field_get:weizhu.official.Official.update_time)
  return update_time_;
}
inline void Official::set_update_time(::google::protobuf::int32 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.Official.update_time)
}

// -------------------------------------------------------------------

// OfficialMessage_Text

// required string content = 1;
inline bool OfficialMessage_Text::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialMessage_Text::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialMessage_Text::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialMessage_Text::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& OfficialMessage_Text::content() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.Text.content)
  return *content_;
}
inline void OfficialMessage_Text::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.Text.content)
}
inline void OfficialMessage_Text::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.OfficialMessage.Text.content)
}
inline void OfficialMessage_Text::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.OfficialMessage.Text.content)
}
inline ::std::string* OfficialMessage_Text::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.OfficialMessage.Text.content)
  return content_;
}
inline ::std::string* OfficialMessage_Text::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialMessage_Text::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.OfficialMessage.Text.content)
}

// -------------------------------------------------------------------

// OfficialMessage_Voice

// required bytes data = 1;
inline bool OfficialMessage_Voice::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialMessage_Voice::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialMessage_Voice::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialMessage_Voice::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& OfficialMessage_Voice::data() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.Voice.data)
  return *data_;
}
inline void OfficialMessage_Voice::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.Voice.data)
}
inline void OfficialMessage_Voice::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.OfficialMessage.Voice.data)
}
inline void OfficialMessage_Voice::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.OfficialMessage.Voice.data)
}
inline ::std::string* OfficialMessage_Voice::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.OfficialMessage.Voice.data)
  return data_;
}
inline ::std::string* OfficialMessage_Voice::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialMessage_Voice::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.OfficialMessage.Voice.data)
}

// optional int32 duration = 2;
inline bool OfficialMessage_Voice::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfficialMessage_Voice::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfficialMessage_Voice::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfficialMessage_Voice::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 OfficialMessage_Voice::duration() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.Voice.duration)
  return duration_;
}
inline void OfficialMessage_Voice::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.Voice.duration)
}

// -------------------------------------------------------------------

// OfficialMessage_Image

// required string name = 1;
inline bool OfficialMessage_Image::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialMessage_Image::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialMessage_Image::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialMessage_Image::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& OfficialMessage_Image::name() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.Image.name)
  return *name_;
}
inline void OfficialMessage_Image::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.Image.name)
}
inline void OfficialMessage_Image::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.OfficialMessage.Image.name)
}
inline void OfficialMessage_Image::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.OfficialMessage.Image.name)
}
inline ::std::string* OfficialMessage_Image::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.OfficialMessage.Image.name)
  return name_;
}
inline ::std::string* OfficialMessage_Image::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialMessage_Image::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.OfficialMessage.Image.name)
}

// -------------------------------------------------------------------

// OfficialMessage_User

// required int64 user_id = 1;
inline bool OfficialMessage_User::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialMessage_User::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialMessage_User::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialMessage_User::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 OfficialMessage_User::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.User.user_id)
  return user_id_;
}
inline void OfficialMessage_User::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.User.user_id)
}

// -------------------------------------------------------------------

// OfficialMessage_Video

// required string name = 1;
inline bool OfficialMessage_Video::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialMessage_Video::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialMessage_Video::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialMessage_Video::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& OfficialMessage_Video::name() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.Video.name)
  return *name_;
}
inline void OfficialMessage_Video::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.Video.name)
}
inline void OfficialMessage_Video::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.OfficialMessage.Video.name)
}
inline void OfficialMessage_Video::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.OfficialMessage.Video.name)
}
inline ::std::string* OfficialMessage_Video::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.OfficialMessage.Video.name)
  return name_;
}
inline ::std::string* OfficialMessage_Video::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialMessage_Video::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.OfficialMessage.Video.name)
}

// required string type = 2;
inline bool OfficialMessage_Video::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfficialMessage_Video::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfficialMessage_Video::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfficialMessage_Video::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& OfficialMessage_Video::type() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.Video.type)
  return *type_;
}
inline void OfficialMessage_Video::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.Video.type)
}
inline void OfficialMessage_Video::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.OfficialMessage.Video.type)
}
inline void OfficialMessage_Video::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.OfficialMessage.Video.type)
}
inline ::std::string* OfficialMessage_Video::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.OfficialMessage.Video.type)
  return type_;
}
inline ::std::string* OfficialMessage_Video::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialMessage_Video::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.OfficialMessage.Video.type)
}

// required int32 size = 3;
inline bool OfficialMessage_Video::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OfficialMessage_Video::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OfficialMessage_Video::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OfficialMessage_Video::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 OfficialMessage_Video::size() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.Video.size)
  return size_;
}
inline void OfficialMessage_Video::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.Video.size)
}

// required int32 time = 4;
inline bool OfficialMessage_Video::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OfficialMessage_Video::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OfficialMessage_Video::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OfficialMessage_Video::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 OfficialMessage_Video::time() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.Video.time)
  return time_;
}
inline void OfficialMessage_Video::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.Video.time)
}

// required string image_name = 5;
inline bool OfficialMessage_Video::has_image_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OfficialMessage_Video::set_has_image_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OfficialMessage_Video::clear_has_image_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OfficialMessage_Video::clear_image_name() {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_->clear();
  }
  clear_has_image_name();
}
inline const ::std::string& OfficialMessage_Video::image_name() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.Video.image_name)
  return *image_name_;
}
inline void OfficialMessage_Video::set_image_name(const ::std::string& value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.Video.image_name)
}
inline void OfficialMessage_Video::set_image_name(const char* value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.OfficialMessage.Video.image_name)
}
inline void OfficialMessage_Video::set_image_name(const char* value, size_t size) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.OfficialMessage.Video.image_name)
}
inline ::std::string* OfficialMessage_Video::mutable_image_name() {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.OfficialMessage.Video.image_name)
  return image_name_;
}
inline ::std::string* OfficialMessage_Video::release_image_name() {
  clear_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = image_name_;
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialMessage_Video::set_allocated_image_name(::std::string* image_name) {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete image_name_;
  }
  if (image_name) {
    set_has_image_name();
    image_name_ = image_name;
  } else {
    clear_has_image_name();
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.OfficialMessage.Video.image_name)
}

// -------------------------------------------------------------------

// OfficialMessage_File

// required string name = 1;
inline bool OfficialMessage_File::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialMessage_File::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialMessage_File::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialMessage_File::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& OfficialMessage_File::name() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.File.name)
  return *name_;
}
inline void OfficialMessage_File::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.File.name)
}
inline void OfficialMessage_File::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.OfficialMessage.File.name)
}
inline void OfficialMessage_File::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.OfficialMessage.File.name)
}
inline ::std::string* OfficialMessage_File::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.OfficialMessage.File.name)
  return name_;
}
inline ::std::string* OfficialMessage_File::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialMessage_File::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.OfficialMessage.File.name)
}

// required string orginal_name = 2;
inline bool OfficialMessage_File::has_orginal_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfficialMessage_File::set_has_orginal_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfficialMessage_File::clear_has_orginal_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfficialMessage_File::clear_orginal_name() {
  if (orginal_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orginal_name_->clear();
  }
  clear_has_orginal_name();
}
inline const ::std::string& OfficialMessage_File::orginal_name() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.File.orginal_name)
  return *orginal_name_;
}
inline void OfficialMessage_File::set_orginal_name(const ::std::string& value) {
  set_has_orginal_name();
  if (orginal_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orginal_name_ = new ::std::string;
  }
  orginal_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.File.orginal_name)
}
inline void OfficialMessage_File::set_orginal_name(const char* value) {
  set_has_orginal_name();
  if (orginal_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orginal_name_ = new ::std::string;
  }
  orginal_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.OfficialMessage.File.orginal_name)
}
inline void OfficialMessage_File::set_orginal_name(const char* value, size_t size) {
  set_has_orginal_name();
  if (orginal_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orginal_name_ = new ::std::string;
  }
  orginal_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.OfficialMessage.File.orginal_name)
}
inline ::std::string* OfficialMessage_File::mutable_orginal_name() {
  set_has_orginal_name();
  if (orginal_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    orginal_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.OfficialMessage.File.orginal_name)
  return orginal_name_;
}
inline ::std::string* OfficialMessage_File::release_orginal_name() {
  clear_has_orginal_name();
  if (orginal_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = orginal_name_;
    orginal_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialMessage_File::set_allocated_orginal_name(::std::string* orginal_name) {
  if (orginal_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete orginal_name_;
  }
  if (orginal_name) {
    set_has_orginal_name();
    orginal_name_ = orginal_name;
  } else {
    clear_has_orginal_name();
    orginal_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.OfficialMessage.File.orginal_name)
}

// -------------------------------------------------------------------

// OfficialMessage_DiscoverItem

// required int64 item_id = 1;
inline bool OfficialMessage_DiscoverItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialMessage_DiscoverItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialMessage_DiscoverItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialMessage_DiscoverItem::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 OfficialMessage_DiscoverItem::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.DiscoverItem.item_id)
  return item_id_;
}
inline void OfficialMessage_DiscoverItem::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.DiscoverItem.item_id)
}

// -------------------------------------------------------------------

// OfficialMessage_CommunityPost

// required int32 post_id = 1;
inline bool OfficialMessage_CommunityPost::has_post_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialMessage_CommunityPost::set_has_post_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialMessage_CommunityPost::clear_has_post_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialMessage_CommunityPost::clear_post_id() {
  post_id_ = 0;
  clear_has_post_id();
}
inline ::google::protobuf::int32 OfficialMessage_CommunityPost::post_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.CommunityPost.post_id)
  return post_id_;
}
inline void OfficialMessage_CommunityPost::set_post_id(::google::protobuf::int32 value) {
  set_has_post_id();
  post_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.CommunityPost.post_id)
}

// optional string text = 2;
inline bool OfficialMessage_CommunityPost::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfficialMessage_CommunityPost::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfficialMessage_CommunityPost::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfficialMessage_CommunityPost::clear_text() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& OfficialMessage_CommunityPost::text() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.CommunityPost.text)
  return *text_;
}
inline void OfficialMessage_CommunityPost::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.CommunityPost.text)
}
inline void OfficialMessage_CommunityPost::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.OfficialMessage.CommunityPost.text)
}
inline void OfficialMessage_CommunityPost::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.OfficialMessage.CommunityPost.text)
}
inline ::std::string* OfficialMessage_CommunityPost::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.OfficialMessage.CommunityPost.text)
  return text_;
}
inline ::std::string* OfficialMessage_CommunityPost::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OfficialMessage_CommunityPost::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.OfficialMessage.CommunityPost.text)
}

// -------------------------------------------------------------------

// OfficialMessage

// required int64 msg_seq = 1;
inline bool OfficialMessage::has_msg_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialMessage::set_has_msg_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialMessage::clear_has_msg_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialMessage::clear_msg_seq() {
  msg_seq_ = GOOGLE_LONGLONG(0);
  clear_has_msg_seq();
}
inline ::google::protobuf::int64 OfficialMessage::msg_seq() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.msg_seq)
  return msg_seq_;
}
inline void OfficialMessage::set_msg_seq(::google::protobuf::int64 value) {
  set_has_msg_seq();
  msg_seq_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.msg_seq)
}

// required int32 msg_time = 2;
inline bool OfficialMessage::has_msg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfficialMessage::set_has_msg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfficialMessage::clear_has_msg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfficialMessage::clear_msg_time() {
  msg_time_ = 0;
  clear_has_msg_time();
}
inline ::google::protobuf::int32 OfficialMessage::msg_time() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.msg_time)
  return msg_time_;
}
inline void OfficialMessage::set_msg_time(::google::protobuf::int32 value) {
  set_has_msg_time();
  msg_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.msg_time)
}

// required bool is_from_user = 3;
inline bool OfficialMessage::has_is_from_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OfficialMessage::set_has_is_from_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OfficialMessage::clear_has_is_from_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OfficialMessage::clear_is_from_user() {
  is_from_user_ = false;
  clear_has_is_from_user();
}
inline bool OfficialMessage::is_from_user() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessage.is_from_user)
  return is_from_user_;
}
inline void OfficialMessage::set_is_from_user(bool value) {
  set_has_is_from_user();
  is_from_user_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessage.is_from_user)
}

// optional .weizhu.official.OfficialMessage.Text text = 5;
inline bool OfficialMessage::has_text() const {
  return msg_type_case() == kText;
}
inline void OfficialMessage::set_has_text() {
  _oneof_case_[0] = kText;
}
inline void OfficialMessage::clear_text() {
  if (has_text()) {
    delete msg_type_.text_;
    clear_has_msg_type();
  }
}
inline const ::weizhu::official::OfficialMessage_Text& OfficialMessage::text() const {
  return has_text() ? *msg_type_.text_
                      : ::weizhu::official::OfficialMessage_Text::default_instance();
}
inline ::weizhu::official::OfficialMessage_Text* OfficialMessage::mutable_text() {
  if (!has_text()) {
    clear_msg_type();
    set_has_text();
    msg_type_.text_ = new ::weizhu::official::OfficialMessage_Text;
  }
  return msg_type_.text_;
}
inline ::weizhu::official::OfficialMessage_Text* OfficialMessage::release_text() {
  if (has_text()) {
    clear_has_msg_type();
    ::weizhu::official::OfficialMessage_Text* temp = msg_type_.text_;
    msg_type_.text_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfficialMessage::set_allocated_text(::weizhu::official::OfficialMessage_Text* text) {
  clear_msg_type();
  if (text) {
    set_has_text();
    msg_type_.text_ = text;
  }
}

// optional .weizhu.official.OfficialMessage.Voice voice = 6;
inline bool OfficialMessage::has_voice() const {
  return msg_type_case() == kVoice;
}
inline void OfficialMessage::set_has_voice() {
  _oneof_case_[0] = kVoice;
}
inline void OfficialMessage::clear_voice() {
  if (has_voice()) {
    delete msg_type_.voice_;
    clear_has_msg_type();
  }
}
inline const ::weizhu::official::OfficialMessage_Voice& OfficialMessage::voice() const {
  return has_voice() ? *msg_type_.voice_
                      : ::weizhu::official::OfficialMessage_Voice::default_instance();
}
inline ::weizhu::official::OfficialMessage_Voice* OfficialMessage::mutable_voice() {
  if (!has_voice()) {
    clear_msg_type();
    set_has_voice();
    msg_type_.voice_ = new ::weizhu::official::OfficialMessage_Voice;
  }
  return msg_type_.voice_;
}
inline ::weizhu::official::OfficialMessage_Voice* OfficialMessage::release_voice() {
  if (has_voice()) {
    clear_has_msg_type();
    ::weizhu::official::OfficialMessage_Voice* temp = msg_type_.voice_;
    msg_type_.voice_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfficialMessage::set_allocated_voice(::weizhu::official::OfficialMessage_Voice* voice) {
  clear_msg_type();
  if (voice) {
    set_has_voice();
    msg_type_.voice_ = voice;
  }
}

// optional .weizhu.official.OfficialMessage.Image image = 7;
inline bool OfficialMessage::has_image() const {
  return msg_type_case() == kImage;
}
inline void OfficialMessage::set_has_image() {
  _oneof_case_[0] = kImage;
}
inline void OfficialMessage::clear_image() {
  if (has_image()) {
    delete msg_type_.image_;
    clear_has_msg_type();
  }
}
inline const ::weizhu::official::OfficialMessage_Image& OfficialMessage::image() const {
  return has_image() ? *msg_type_.image_
                      : ::weizhu::official::OfficialMessage_Image::default_instance();
}
inline ::weizhu::official::OfficialMessage_Image* OfficialMessage::mutable_image() {
  if (!has_image()) {
    clear_msg_type();
    set_has_image();
    msg_type_.image_ = new ::weizhu::official::OfficialMessage_Image;
  }
  return msg_type_.image_;
}
inline ::weizhu::official::OfficialMessage_Image* OfficialMessage::release_image() {
  if (has_image()) {
    clear_has_msg_type();
    ::weizhu::official::OfficialMessage_Image* temp = msg_type_.image_;
    msg_type_.image_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfficialMessage::set_allocated_image(::weizhu::official::OfficialMessage_Image* image) {
  clear_msg_type();
  if (image) {
    set_has_image();
    msg_type_.image_ = image;
  }
}

// optional .weizhu.official.OfficialMessage.User user = 8;
inline bool OfficialMessage::has_user() const {
  return msg_type_case() == kUser;
}
inline void OfficialMessage::set_has_user() {
  _oneof_case_[0] = kUser;
}
inline void OfficialMessage::clear_user() {
  if (has_user()) {
    delete msg_type_.user_;
    clear_has_msg_type();
  }
}
inline const ::weizhu::official::OfficialMessage_User& OfficialMessage::user() const {
  return has_user() ? *msg_type_.user_
                      : ::weizhu::official::OfficialMessage_User::default_instance();
}
inline ::weizhu::official::OfficialMessage_User* OfficialMessage::mutable_user() {
  if (!has_user()) {
    clear_msg_type();
    set_has_user();
    msg_type_.user_ = new ::weizhu::official::OfficialMessage_User;
  }
  return msg_type_.user_;
}
inline ::weizhu::official::OfficialMessage_User* OfficialMessage::release_user() {
  if (has_user()) {
    clear_has_msg_type();
    ::weizhu::official::OfficialMessage_User* temp = msg_type_.user_;
    msg_type_.user_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfficialMessage::set_allocated_user(::weizhu::official::OfficialMessage_User* user) {
  clear_msg_type();
  if (user) {
    set_has_user();
    msg_type_.user_ = user;
  }
}

// optional .weizhu.official.OfficialMessage.Video video = 9;
inline bool OfficialMessage::has_video() const {
  return msg_type_case() == kVideo;
}
inline void OfficialMessage::set_has_video() {
  _oneof_case_[0] = kVideo;
}
inline void OfficialMessage::clear_video() {
  if (has_video()) {
    delete msg_type_.video_;
    clear_has_msg_type();
  }
}
inline const ::weizhu::official::OfficialMessage_Video& OfficialMessage::video() const {
  return has_video() ? *msg_type_.video_
                      : ::weizhu::official::OfficialMessage_Video::default_instance();
}
inline ::weizhu::official::OfficialMessage_Video* OfficialMessage::mutable_video() {
  if (!has_video()) {
    clear_msg_type();
    set_has_video();
    msg_type_.video_ = new ::weizhu::official::OfficialMessage_Video;
  }
  return msg_type_.video_;
}
inline ::weizhu::official::OfficialMessage_Video* OfficialMessage::release_video() {
  if (has_video()) {
    clear_has_msg_type();
    ::weizhu::official::OfficialMessage_Video* temp = msg_type_.video_;
    msg_type_.video_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfficialMessage::set_allocated_video(::weizhu::official::OfficialMessage_Video* video) {
  clear_msg_type();
  if (video) {
    set_has_video();
    msg_type_.video_ = video;
  }
}

// optional .weizhu.official.OfficialMessage.File file = 10;
inline bool OfficialMessage::has_file() const {
  return msg_type_case() == kFile;
}
inline void OfficialMessage::set_has_file() {
  _oneof_case_[0] = kFile;
}
inline void OfficialMessage::clear_file() {
  if (has_file()) {
    delete msg_type_.file_;
    clear_has_msg_type();
  }
}
inline const ::weizhu::official::OfficialMessage_File& OfficialMessage::file() const {
  return has_file() ? *msg_type_.file_
                      : ::weizhu::official::OfficialMessage_File::default_instance();
}
inline ::weizhu::official::OfficialMessage_File* OfficialMessage::mutable_file() {
  if (!has_file()) {
    clear_msg_type();
    set_has_file();
    msg_type_.file_ = new ::weizhu::official::OfficialMessage_File;
  }
  return msg_type_.file_;
}
inline ::weizhu::official::OfficialMessage_File* OfficialMessage::release_file() {
  if (has_file()) {
    clear_has_msg_type();
    ::weizhu::official::OfficialMessage_File* temp = msg_type_.file_;
    msg_type_.file_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfficialMessage::set_allocated_file(::weizhu::official::OfficialMessage_File* file) {
  clear_msg_type();
  if (file) {
    set_has_file();
    msg_type_.file_ = file;
  }
}

// optional .weizhu.official.OfficialMessage.DiscoverItem discover_item = 12;
inline bool OfficialMessage::has_discover_item() const {
  return msg_type_case() == kDiscoverItem;
}
inline void OfficialMessage::set_has_discover_item() {
  _oneof_case_[0] = kDiscoverItem;
}
inline void OfficialMessage::clear_discover_item() {
  if (has_discover_item()) {
    delete msg_type_.discover_item_;
    clear_has_msg_type();
  }
}
inline const ::weizhu::official::OfficialMessage_DiscoverItem& OfficialMessage::discover_item() const {
  return has_discover_item() ? *msg_type_.discover_item_
                      : ::weizhu::official::OfficialMessage_DiscoverItem::default_instance();
}
inline ::weizhu::official::OfficialMessage_DiscoverItem* OfficialMessage::mutable_discover_item() {
  if (!has_discover_item()) {
    clear_msg_type();
    set_has_discover_item();
    msg_type_.discover_item_ = new ::weizhu::official::OfficialMessage_DiscoverItem;
  }
  return msg_type_.discover_item_;
}
inline ::weizhu::official::OfficialMessage_DiscoverItem* OfficialMessage::release_discover_item() {
  if (has_discover_item()) {
    clear_has_msg_type();
    ::weizhu::official::OfficialMessage_DiscoverItem* temp = msg_type_.discover_item_;
    msg_type_.discover_item_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfficialMessage::set_allocated_discover_item(::weizhu::official::OfficialMessage_DiscoverItem* discover_item) {
  clear_msg_type();
  if (discover_item) {
    set_has_discover_item();
    msg_type_.discover_item_ = discover_item;
  }
}

// optional .weizhu.official.OfficialMessage.CommunityPost community_post = 13;
inline bool OfficialMessage::has_community_post() const {
  return msg_type_case() == kCommunityPost;
}
inline void OfficialMessage::set_has_community_post() {
  _oneof_case_[0] = kCommunityPost;
}
inline void OfficialMessage::clear_community_post() {
  if (has_community_post()) {
    delete msg_type_.community_post_;
    clear_has_msg_type();
  }
}
inline const ::weizhu::official::OfficialMessage_CommunityPost& OfficialMessage::community_post() const {
  return has_community_post() ? *msg_type_.community_post_
                      : ::weizhu::official::OfficialMessage_CommunityPost::default_instance();
}
inline ::weizhu::official::OfficialMessage_CommunityPost* OfficialMessage::mutable_community_post() {
  if (!has_community_post()) {
    clear_msg_type();
    set_has_community_post();
    msg_type_.community_post_ = new ::weizhu::official::OfficialMessage_CommunityPost;
  }
  return msg_type_.community_post_;
}
inline ::weizhu::official::OfficialMessage_CommunityPost* OfficialMessage::release_community_post() {
  if (has_community_post()) {
    clear_has_msg_type();
    ::weizhu::official::OfficialMessage_CommunityPost* temp = msg_type_.community_post_;
    msg_type_.community_post_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfficialMessage::set_allocated_community_post(::weizhu::official::OfficialMessage_CommunityPost* community_post) {
  clear_msg_type();
  if (community_post) {
    set_has_community_post();
    msg_type_.community_post_ = community_post;
  }
}

inline bool OfficialMessage::has_msg_type() {
  return msg_type_case() != MSG_TYPE_NOT_SET;
}
inline void OfficialMessage::clear_has_msg_type() {
  _oneof_case_[0] = MSG_TYPE_NOT_SET;
}
inline OfficialMessage::MsgTypeCase OfficialMessage::msg_type_case() const {
  return OfficialMessage::MsgTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// OfficialMessagePush

// required int64 official_id = 1;
inline bool OfficialMessagePush::has_official_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfficialMessagePush::set_has_official_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfficialMessagePush::clear_has_official_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfficialMessagePush::clear_official_id() {
  official_id_ = GOOGLE_LONGLONG(0);
  clear_has_official_id();
}
inline ::google::protobuf::int64 OfficialMessagePush::official_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessagePush.official_id)
  return official_id_;
}
inline void OfficialMessagePush::set_official_id(::google::protobuf::int64 value) {
  set_has_official_id();
  official_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.OfficialMessagePush.official_id)
}

// required .weizhu.official.OfficialMessage msg = 2;
inline bool OfficialMessagePush::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OfficialMessagePush::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OfficialMessagePush::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OfficialMessagePush::clear_msg() {
  if (msg_ != NULL) msg_->::weizhu::official::OfficialMessage::Clear();
  clear_has_msg();
}
inline const ::weizhu::official::OfficialMessage& OfficialMessagePush::msg() const {
  // @@protoc_insertion_point(field_get:weizhu.official.OfficialMessagePush.msg)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msg_ != NULL ? *msg_ : *default_instance().msg_;
#else
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
#endif
}
inline ::weizhu::official::OfficialMessage* OfficialMessagePush::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::weizhu::official::OfficialMessage;
  // @@protoc_insertion_point(field_mutable:weizhu.official.OfficialMessagePush.msg)
  return msg_;
}
inline ::weizhu::official::OfficialMessage* OfficialMessagePush::release_msg() {
  clear_has_msg();
  ::weizhu::official::OfficialMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void OfficialMessagePush::set_allocated_msg(::weizhu::official::OfficialMessage* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.OfficialMessagePush.msg)
}

// -------------------------------------------------------------------

// GetOfficialByIdRequest

// repeated int64 official_id = 1;
inline int GetOfficialByIdRequest::official_id_size() const {
  return official_id_.size();
}
inline void GetOfficialByIdRequest::clear_official_id() {
  official_id_.Clear();
}
inline ::google::protobuf::int64 GetOfficialByIdRequest::official_id(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialByIdRequest.official_id)
  return official_id_.Get(index);
}
inline void GetOfficialByIdRequest::set_official_id(int index, ::google::protobuf::int64 value) {
  official_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:weizhu.official.GetOfficialByIdRequest.official_id)
}
inline void GetOfficialByIdRequest::add_official_id(::google::protobuf::int64 value) {
  official_id_.Add(value);
  // @@protoc_insertion_point(field_add:weizhu.official.GetOfficialByIdRequest.official_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetOfficialByIdRequest::official_id() const {
  // @@protoc_insertion_point(field_list:weizhu.official.GetOfficialByIdRequest.official_id)
  return official_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetOfficialByIdRequest::mutable_official_id() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.official.GetOfficialByIdRequest.official_id)
  return &official_id_;
}

// -------------------------------------------------------------------

// GetOfficialByIdResponse

// repeated .weizhu.official.Official official = 1;
inline int GetOfficialByIdResponse::official_size() const {
  return official_.size();
}
inline void GetOfficialByIdResponse::clear_official() {
  official_.Clear();
}
inline const ::weizhu::official::Official& GetOfficialByIdResponse::official(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialByIdResponse.official)
  return official_.Get(index);
}
inline ::weizhu::official::Official* GetOfficialByIdResponse::mutable_official(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.official.GetOfficialByIdResponse.official)
  return official_.Mutable(index);
}
inline ::weizhu::official::Official* GetOfficialByIdResponse::add_official() {
  // @@protoc_insertion_point(field_add:weizhu.official.GetOfficialByIdResponse.official)
  return official_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::official::Official >&
GetOfficialByIdResponse::official() const {
  // @@protoc_insertion_point(field_list:weizhu.official.GetOfficialByIdResponse.official)
  return official_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::official::Official >*
GetOfficialByIdResponse::mutable_official() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.official.GetOfficialByIdResponse.official)
  return &official_;
}

// -------------------------------------------------------------------

// GetOfficialListRequest

// optional int64 last_official_id = 1;
inline bool GetOfficialListRequest::has_last_official_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetOfficialListRequest::set_has_last_official_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetOfficialListRequest::clear_has_last_official_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetOfficialListRequest::clear_last_official_id() {
  last_official_id_ = GOOGLE_LONGLONG(0);
  clear_has_last_official_id();
}
inline ::google::protobuf::int64 GetOfficialListRequest::last_official_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialListRequest.last_official_id)
  return last_official_id_;
}
inline void GetOfficialListRequest::set_last_official_id(::google::protobuf::int64 value) {
  set_has_last_official_id();
  last_official_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.GetOfficialListRequest.last_official_id)
}

// optional int32 official_size = 2;
inline bool GetOfficialListRequest::has_official_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetOfficialListRequest::set_has_official_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetOfficialListRequest::clear_has_official_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetOfficialListRequest::clear_official_size() {
  official_size_ = 0;
  clear_has_official_size();
}
inline ::google::protobuf::int32 GetOfficialListRequest::official_size() const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialListRequest.official_size)
  return official_size_;
}
inline void GetOfficialListRequest::set_official_size(::google::protobuf::int32 value) {
  set_has_official_size();
  official_size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.GetOfficialListRequest.official_size)
}

// -------------------------------------------------------------------

// GetOfficialListResponse

// repeated .weizhu.official.Official official = 1;
inline int GetOfficialListResponse::official_size() const {
  return official_.size();
}
inline void GetOfficialListResponse::clear_official() {
  official_.Clear();
}
inline const ::weizhu::official::Official& GetOfficialListResponse::official(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialListResponse.official)
  return official_.Get(index);
}
inline ::weizhu::official::Official* GetOfficialListResponse::mutable_official(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.official.GetOfficialListResponse.official)
  return official_.Mutable(index);
}
inline ::weizhu::official::Official* GetOfficialListResponse::add_official() {
  // @@protoc_insertion_point(field_add:weizhu.official.GetOfficialListResponse.official)
  return official_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::official::Official >&
GetOfficialListResponse::official() const {
  // @@protoc_insertion_point(field_list:weizhu.official.GetOfficialListResponse.official)
  return official_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::official::Official >*
GetOfficialListResponse::mutable_official() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.official.GetOfficialListResponse.official)
  return &official_;
}

// required bool has_more = 2;
inline bool GetOfficialListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetOfficialListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetOfficialListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetOfficialListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetOfficialListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialListResponse.has_more)
  return has_more_;
}
inline void GetOfficialListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.GetOfficialListResponse.has_more)
}

// -------------------------------------------------------------------

// GetOfficialMessageRequest

// required int64 official_id = 1;
inline bool GetOfficialMessageRequest::has_official_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetOfficialMessageRequest::set_has_official_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetOfficialMessageRequest::clear_has_official_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetOfficialMessageRequest::clear_official_id() {
  official_id_ = GOOGLE_LONGLONG(0);
  clear_has_official_id();
}
inline ::google::protobuf::int64 GetOfficialMessageRequest::official_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialMessageRequest.official_id)
  return official_id_;
}
inline void GetOfficialMessageRequest::set_official_id(::google::protobuf::int64 value) {
  set_has_official_id();
  official_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.GetOfficialMessageRequest.official_id)
}

// optional int64 msg_seq_begin = 2;
inline bool GetOfficialMessageRequest::has_msg_seq_begin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetOfficialMessageRequest::set_has_msg_seq_begin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetOfficialMessageRequest::clear_has_msg_seq_begin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetOfficialMessageRequest::clear_msg_seq_begin() {
  msg_seq_begin_ = GOOGLE_LONGLONG(0);
  clear_has_msg_seq_begin();
}
inline ::google::protobuf::int64 GetOfficialMessageRequest::msg_seq_begin() const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialMessageRequest.msg_seq_begin)
  return msg_seq_begin_;
}
inline void GetOfficialMessageRequest::set_msg_seq_begin(::google::protobuf::int64 value) {
  set_has_msg_seq_begin();
  msg_seq_begin_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.GetOfficialMessageRequest.msg_seq_begin)
}

// optional int64 msg_seq_end = 3;
inline bool GetOfficialMessageRequest::has_msg_seq_end() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetOfficialMessageRequest::set_has_msg_seq_end() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetOfficialMessageRequest::clear_has_msg_seq_end() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetOfficialMessageRequest::clear_msg_seq_end() {
  msg_seq_end_ = GOOGLE_LONGLONG(0);
  clear_has_msg_seq_end();
}
inline ::google::protobuf::int64 GetOfficialMessageRequest::msg_seq_end() const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialMessageRequest.msg_seq_end)
  return msg_seq_end_;
}
inline void GetOfficialMessageRequest::set_msg_seq_end(::google::protobuf::int64 value) {
  set_has_msg_seq_end();
  msg_seq_end_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.GetOfficialMessageRequest.msg_seq_end)
}

// required int32 msg_size = 4;
inline bool GetOfficialMessageRequest::has_msg_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetOfficialMessageRequest::set_has_msg_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetOfficialMessageRequest::clear_has_msg_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetOfficialMessageRequest::clear_msg_size() {
  msg_size_ = 0;
  clear_has_msg_size();
}
inline ::google::protobuf::int32 GetOfficialMessageRequest::msg_size() const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialMessageRequest.msg_size)
  return msg_size_;
}
inline void GetOfficialMessageRequest::set_msg_size(::google::protobuf::int32 value) {
  set_has_msg_size();
  msg_size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.GetOfficialMessageRequest.msg_size)
}

// -------------------------------------------------------------------

// GetOfficialMessageResponse

// repeated .weizhu.official.OfficialMessage msg = 1;
inline int GetOfficialMessageResponse::msg_size() const {
  return msg_.size();
}
inline void GetOfficialMessageResponse::clear_msg() {
  msg_.Clear();
}
inline const ::weizhu::official::OfficialMessage& GetOfficialMessageResponse::msg(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialMessageResponse.msg)
  return msg_.Get(index);
}
inline ::weizhu::official::OfficialMessage* GetOfficialMessageResponse::mutable_msg(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.official.GetOfficialMessageResponse.msg)
  return msg_.Mutable(index);
}
inline ::weizhu::official::OfficialMessage* GetOfficialMessageResponse::add_msg() {
  // @@protoc_insertion_point(field_add:weizhu.official.GetOfficialMessageResponse.msg)
  return msg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::official::OfficialMessage >&
GetOfficialMessageResponse::msg() const {
  // @@protoc_insertion_point(field_list:weizhu.official.GetOfficialMessageResponse.msg)
  return msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::official::OfficialMessage >*
GetOfficialMessageResponse::mutable_msg() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.official.GetOfficialMessageResponse.msg)
  return &msg_;
}

// required bool has_more = 2;
inline bool GetOfficialMessageResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetOfficialMessageResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetOfficialMessageResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetOfficialMessageResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetOfficialMessageResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.official.GetOfficialMessageResponse.has_more)
  return has_more_;
}
inline void GetOfficialMessageResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.GetOfficialMessageResponse.has_more)
}

// -------------------------------------------------------------------

// SendOfficialMessageRequest

// required int64 official_id = 1;
inline bool SendOfficialMessageRequest::has_official_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendOfficialMessageRequest::set_has_official_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendOfficialMessageRequest::clear_has_official_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendOfficialMessageRequest::clear_official_id() {
  official_id_ = GOOGLE_LONGLONG(0);
  clear_has_official_id();
}
inline ::google::protobuf::int64 SendOfficialMessageRequest::official_id() const {
  // @@protoc_insertion_point(field_get:weizhu.official.SendOfficialMessageRequest.official_id)
  return official_id_;
}
inline void SendOfficialMessageRequest::set_official_id(::google::protobuf::int64 value) {
  set_has_official_id();
  official_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.SendOfficialMessageRequest.official_id)
}

// required .weizhu.official.OfficialMessage msg = 2;
inline bool SendOfficialMessageRequest::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendOfficialMessageRequest::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendOfficialMessageRequest::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendOfficialMessageRequest::clear_msg() {
  if (msg_ != NULL) msg_->::weizhu::official::OfficialMessage::Clear();
  clear_has_msg();
}
inline const ::weizhu::official::OfficialMessage& SendOfficialMessageRequest::msg() const {
  // @@protoc_insertion_point(field_get:weizhu.official.SendOfficialMessageRequest.msg)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msg_ != NULL ? *msg_ : *default_instance().msg_;
#else
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
#endif
}
inline ::weizhu::official::OfficialMessage* SendOfficialMessageRequest::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::weizhu::official::OfficialMessage;
  // @@protoc_insertion_point(field_mutable:weizhu.official.SendOfficialMessageRequest.msg)
  return msg_;
}
inline ::weizhu::official::OfficialMessage* SendOfficialMessageRequest::release_msg() {
  clear_has_msg();
  ::weizhu::official::OfficialMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void SendOfficialMessageRequest::set_allocated_msg(::weizhu::official::OfficialMessage* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.SendOfficialMessageRequest.msg)
}

// -------------------------------------------------------------------

// SendOfficialMessageResponse

// optional .weizhu.official.SendOfficialMessageResponse.Result result = 1 [default = FAIL_UNKNOWN];
inline bool SendOfficialMessageResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendOfficialMessageResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendOfficialMessageResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendOfficialMessageResponse::clear_result() {
  result_ = 99;
  clear_has_result();
}
inline ::weizhu::official::SendOfficialMessageResponse_Result SendOfficialMessageResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.official.SendOfficialMessageResponse.result)
  return static_cast< ::weizhu::official::SendOfficialMessageResponse_Result >(result_);
}
inline void SendOfficialMessageResponse::set_result(::weizhu::official::SendOfficialMessageResponse_Result value) {
  assert(::weizhu::official::SendOfficialMessageResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.SendOfficialMessageResponse.result)
}

// optional string fail_text = 2;
inline bool SendOfficialMessageResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendOfficialMessageResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendOfficialMessageResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendOfficialMessageResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& SendOfficialMessageResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.official.SendOfficialMessageResponse.fail_text)
  return *fail_text_;
}
inline void SendOfficialMessageResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.official.SendOfficialMessageResponse.fail_text)
}
inline void SendOfficialMessageResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.official.SendOfficialMessageResponse.fail_text)
}
inline void SendOfficialMessageResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.official.SendOfficialMessageResponse.fail_text)
}
inline ::std::string* SendOfficialMessageResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.official.SendOfficialMessageResponse.fail_text)
  return fail_text_;
}
inline ::std::string* SendOfficialMessageResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SendOfficialMessageResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.official.SendOfficialMessageResponse.fail_text)
}

// optional int64 msg_seq = 3;
inline bool SendOfficialMessageResponse::has_msg_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendOfficialMessageResponse::set_has_msg_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendOfficialMessageResponse::clear_has_msg_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendOfficialMessageResponse::clear_msg_seq() {
  msg_seq_ = GOOGLE_LONGLONG(0);
  clear_has_msg_seq();
}
inline ::google::protobuf::int64 SendOfficialMessageResponse::msg_seq() const {
  // @@protoc_insertion_point(field_get:weizhu.official.SendOfficialMessageResponse.msg_seq)
  return msg_seq_;
}
inline void SendOfficialMessageResponse::set_msg_seq(::google::protobuf::int64 value) {
  set_has_msg_seq();
  msg_seq_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.SendOfficialMessageResponse.msg_seq)
}

// optional int32 msg_time = 4;
inline bool SendOfficialMessageResponse::has_msg_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendOfficialMessageResponse::set_has_msg_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendOfficialMessageResponse::clear_has_msg_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendOfficialMessageResponse::clear_msg_time() {
  msg_time_ = 0;
  clear_has_msg_time();
}
inline ::google::protobuf::int32 SendOfficialMessageResponse::msg_time() const {
  // @@protoc_insertion_point(field_get:weizhu.official.SendOfficialMessageResponse.msg_time)
  return msg_time_;
}
inline void SendOfficialMessageResponse::set_msg_time(::google::protobuf::int32 value) {
  set_has_msg_time();
  msg_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.official.SendOfficialMessageResponse.msg_time)
}

// repeated .weizhu.official.OfficialMessage response_msg = 5;
inline int SendOfficialMessageResponse::response_msg_size() const {
  return response_msg_.size();
}
inline void SendOfficialMessageResponse::clear_response_msg() {
  response_msg_.Clear();
}
inline const ::weizhu::official::OfficialMessage& SendOfficialMessageResponse::response_msg(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.official.SendOfficialMessageResponse.response_msg)
  return response_msg_.Get(index);
}
inline ::weizhu::official::OfficialMessage* SendOfficialMessageResponse::mutable_response_msg(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.official.SendOfficialMessageResponse.response_msg)
  return response_msg_.Mutable(index);
}
inline ::weizhu::official::OfficialMessage* SendOfficialMessageResponse::add_response_msg() {
  // @@protoc_insertion_point(field_add:weizhu.official.SendOfficialMessageResponse.response_msg)
  return response_msg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::official::OfficialMessage >&
SendOfficialMessageResponse::response_msg() const {
  // @@protoc_insertion_point(field_list:weizhu.official.SendOfficialMessageResponse.response_msg)
  return response_msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::official::OfficialMessage >*
SendOfficialMessageResponse::mutable_response_msg() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.official.SendOfficialMessageResponse.response_msg)
  return &response_msg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace official
}  // namespace weizhu

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_official_2eproto__INCLUDED
