// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: discover_v2.proto

#ifndef PROTOBUF_discover_5fv2_2eproto__INCLUDED
#define PROTOBUF_discover_5fv2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "weizhu.pb.h"
// @@protoc_insertion_point(includes)

namespace weizhu {
namespace discover_v2 {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_discover_5fv2_2eproto();
void protobuf_AssignDesc_discover_5fv2_2eproto();
void protobuf_ShutdownFile_discover_5fv2_2eproto();

class WebUrl;
class Document;
class Video;
class Audio;
class AppUri;
class Banner;
class Module;
class Module_Category;
class Module_CategoryList;
class Item;
class Item_Base;
class Item_Count;
class Item_User;
class ItemLearn;
class ItemComment;
class ItemScore;
class ItemLike;
class ItemShare;
class GetDiscoverHomeRequest;
class GetDiscoverHomeResponse;
class GetModuleCategoryItemListRequest;
class GetModuleCategoryItemListResponse;
class GetModulePromptIndexRequest;
class GetModulePromptIndexResponse;
class GetItemByIdRequest;
class GetItemByIdResponse;
class GetItemLearnListRequest;
class GetItemLearnListResponse;
class GetUserLearnListRequest;
class GetUserLearnListResponse;
class GetItemCommentListRequest;
class GetItemCommentListResponse;
class GetUserCommentListRequest;
class GetUserCommentListResponse;
class GetItemScoreListRequest;
class GetItemScoreListResponse;
class GetUserScoreListRequest;
class GetUserScoreListResponse;
class GetItemLikeListRequest;
class GetItemLikeListResponse;
class GetUserLikeListRequest;
class GetUserLikeListResponse;
class GetItemShareListRequest;
class GetItemShareListResponse;
class GetUserShareListRequest;
class GetUserShareListResponse;
class GetUserDiscoverRequest;
class GetUserDiscoverResponse;
class SearchItemRequest;
class SearchItemResponse;
class GetItemListRequest;
class GetItemListResponse;
class LearnItemRequest;
class LearnItemResponse;
class ReportLearnItemRequest;
class CommentItemRequest;
class CommentItemResponse;
class DeleteCommentRequest;
class DeleteCommentResponse;
class ScoreItemRequest;
class ScoreItemResponse;
class LikeItemRequest;
class LikeItemResponse;
class ShareItemRequest;
class ShareItemResponse;
class ShareItemResponse_ItemShareContent;

enum LearnItemResponse_Result {
  LearnItemResponse_Result_SUCC = 0,
  LearnItemResponse_Result_FAIL_DURATION_INVALID = 1,
  LearnItemResponse_Result_FAIL_ITEM_NOT_EXSIT = 2,
  LearnItemResponse_Result_FAIL_UNKNOWN = 99
};
bool LearnItemResponse_Result_IsValid(int value);
const LearnItemResponse_Result LearnItemResponse_Result_Result_MIN = LearnItemResponse_Result_SUCC;
const LearnItemResponse_Result LearnItemResponse_Result_Result_MAX = LearnItemResponse_Result_FAIL_UNKNOWN;
const int LearnItemResponse_Result_Result_ARRAYSIZE = LearnItemResponse_Result_Result_MAX + 1;

enum CommentItemResponse_Result {
  CommentItemResponse_Result_SUCC = 0,
  CommentItemResponse_Result_FAIL_CONTENT_INVALID = 1,
  CommentItemResponse_Result_FAIL_ITEM_NOT_EXSIT = 2,
  CommentItemResponse_Result_FAIL_ITEM_DISABLE = 3,
  CommentItemResponse_Result_FAIL_UNKNOWN = 99
};
bool CommentItemResponse_Result_IsValid(int value);
const CommentItemResponse_Result CommentItemResponse_Result_Result_MIN = CommentItemResponse_Result_SUCC;
const CommentItemResponse_Result CommentItemResponse_Result_Result_MAX = CommentItemResponse_Result_FAIL_UNKNOWN;
const int CommentItemResponse_Result_Result_ARRAYSIZE = CommentItemResponse_Result_Result_MAX + 1;

enum DeleteCommentResponse_Result {
  DeleteCommentResponse_Result_SUCC = 0,
  DeleteCommentResponse_Result_FAIL_COMMENT_NOT_EXSIT = 1,
  DeleteCommentResponse_Result_FAIL_COMMENT_OTHER = 2,
  DeleteCommentResponse_Result_FAIL_UNKNOWN = 99
};
bool DeleteCommentResponse_Result_IsValid(int value);
const DeleteCommentResponse_Result DeleteCommentResponse_Result_Result_MIN = DeleteCommentResponse_Result_SUCC;
const DeleteCommentResponse_Result DeleteCommentResponse_Result_Result_MAX = DeleteCommentResponse_Result_FAIL_UNKNOWN;
const int DeleteCommentResponse_Result_Result_ARRAYSIZE = DeleteCommentResponse_Result_Result_MAX + 1;

enum ScoreItemResponse_Result {
  ScoreItemResponse_Result_SUCC = 0,
  ScoreItemResponse_Result_FAIL_SCORE_INVALID = 1,
  ScoreItemResponse_Result_FAIL_ITEM_NOT_EXSIT = 2,
  ScoreItemResponse_Result_FAIL_ITEM_DISABLE = 3,
  ScoreItemResponse_Result_FAIL_ITEM_IS_SCORED = 4,
  ScoreItemResponse_Result_FAIL_UNKNOWN = 99
};
bool ScoreItemResponse_Result_IsValid(int value);
const ScoreItemResponse_Result ScoreItemResponse_Result_Result_MIN = ScoreItemResponse_Result_SUCC;
const ScoreItemResponse_Result ScoreItemResponse_Result_Result_MAX = ScoreItemResponse_Result_FAIL_UNKNOWN;
const int ScoreItemResponse_Result_Result_ARRAYSIZE = ScoreItemResponse_Result_Result_MAX + 1;

enum LikeItemResponse_Result {
  LikeItemResponse_Result_SUCC = 0,
  LikeItemResponse_Result_FAIL_ITEM_NOT_EXSIT = 2,
  LikeItemResponse_Result_FAIL_ITEM_DISABLE = 3,
  LikeItemResponse_Result_FAIL_UNKNOWN = 99
};
bool LikeItemResponse_Result_IsValid(int value);
const LikeItemResponse_Result LikeItemResponse_Result_Result_MIN = LikeItemResponse_Result_SUCC;
const LikeItemResponse_Result LikeItemResponse_Result_Result_MAX = LikeItemResponse_Result_FAIL_UNKNOWN;
const int LikeItemResponse_Result_Result_ARRAYSIZE = LikeItemResponse_Result_Result_MAX + 1;

enum ShareItemResponse_Result {
  ShareItemResponse_Result_SUCC = 0,
  ShareItemResponse_Result_FAIL_PERMISSION_DENIED = 1,
  ShareItemResponse_Result_FAIL_ITEM_NOT_EXSIT = 2,
  ShareItemResponse_Result_FAIL_UNKNOWN = 99
};
bool ShareItemResponse_Result_IsValid(int value);
const ShareItemResponse_Result ShareItemResponse_Result_Result_MIN = ShareItemResponse_Result_SUCC;
const ShareItemResponse_Result ShareItemResponse_Result_Result_MAX = ShareItemResponse_Result_FAIL_UNKNOWN;
const int ShareItemResponse_Result_Result_ARRAYSIZE = ShareItemResponse_Result_Result_MAX + 1;

enum State {
  NORMAL = 0,
  DISABLE = 1,
  DELETE = 2
};
bool State_IsValid(int value);
const State State_MIN = NORMAL;
const State State_MAX = DELETE;
const int State_ARRAYSIZE = State_MAX + 1;

// ===================================================================

class WebUrl : public ::google::protobuf::MessageLite {
 public:
  WebUrl();
  virtual ~WebUrl();

  WebUrl(const WebUrl& from);

  inline WebUrl& operator=(const WebUrl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const WebUrl& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const WebUrl* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(WebUrl* other);

  // implements Message ----------------------------------------------

  WebUrl* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const WebUrl& from);
  void MergeFrom(const WebUrl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string web_url = 1;
  inline bool has_web_url() const;
  inline void clear_web_url();
  static const int kWebUrlFieldNumber = 1;
  inline const ::std::string& web_url() const;
  inline void set_web_url(const ::std::string& value);
  inline void set_web_url(const char* value);
  inline void set_web_url(const char* value, size_t size);
  inline ::std::string* mutable_web_url();
  inline ::std::string* release_web_url();
  inline void set_allocated_web_url(::std::string* web_url);

  // required bool is_weizhu = 2;
  inline bool has_is_weizhu() const;
  inline void clear_is_weizhu();
  static const int kIsWeizhuFieldNumber = 2;
  inline bool is_weizhu() const;
  inline void set_is_weizhu(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.WebUrl)
 private:
  inline void set_has_web_url();
  inline void clear_has_web_url();
  inline void set_has_is_weizhu();
  inline void clear_has_is_weizhu();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* web_url_;
  bool is_weizhu_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static WebUrl* default_instance_;
};
// -------------------------------------------------------------------

class Document : public ::google::protobuf::MessageLite {
 public:
  Document();
  virtual ~Document();

  Document(const Document& from);

  inline Document& operator=(const Document& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Document& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Document* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Document* other);

  // implements Message ----------------------------------------------

  Document* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Document& from);
  void MergeFrom(const Document& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string document_url = 1;
  inline bool has_document_url() const;
  inline void clear_document_url();
  static const int kDocumentUrlFieldNumber = 1;
  inline const ::std::string& document_url() const;
  inline void set_document_url(const ::std::string& value);
  inline void set_document_url(const char* value);
  inline void set_document_url(const char* value, size_t size);
  inline ::std::string* mutable_document_url();
  inline ::std::string* release_document_url();
  inline void set_allocated_document_url(::std::string* document_url);

  // required string document_type = 2;
  inline bool has_document_type() const;
  inline void clear_document_type();
  static const int kDocumentTypeFieldNumber = 2;
  inline const ::std::string& document_type() const;
  inline void set_document_type(const ::std::string& value);
  inline void set_document_type(const char* value);
  inline void set_document_type(const char* value, size_t size);
  inline ::std::string* mutable_document_type();
  inline ::std::string* release_document_type();
  inline void set_allocated_document_type(::std::string* document_type);

  // required int32 document_size = 3;
  inline bool has_document_size() const;
  inline void clear_document_size();
  static const int kDocumentSizeFieldNumber = 3;
  inline ::google::protobuf::int32 document_size() const;
  inline void set_document_size(::google::protobuf::int32 value);

  // optional string check_md5 = 4;
  inline bool has_check_md5() const;
  inline void clear_check_md5();
  static const int kCheckMd5FieldNumber = 4;
  inline const ::std::string& check_md5() const;
  inline void set_check_md5(const ::std::string& value);
  inline void set_check_md5(const char* value);
  inline void set_check_md5(const char* value, size_t size);
  inline ::std::string* mutable_check_md5();
  inline ::std::string* release_check_md5();
  inline void set_allocated_check_md5(::std::string* check_md5);

  // required bool is_download = 5;
  inline bool has_is_download() const;
  inline void clear_is_download();
  static const int kIsDownloadFieldNumber = 5;
  inline bool is_download() const;
  inline void set_is_download(bool value);

  // required bool is_auth_url = 6;
  inline bool has_is_auth_url() const;
  inline void clear_is_auth_url();
  static const int kIsAuthUrlFieldNumber = 6;
  inline bool is_auth_url() const;
  inline void set_is_auth_url(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Document)
 private:
  inline void set_has_document_url();
  inline void clear_has_document_url();
  inline void set_has_document_type();
  inline void clear_has_document_type();
  inline void set_has_document_size();
  inline void clear_has_document_size();
  inline void set_has_check_md5();
  inline void clear_has_check_md5();
  inline void set_has_is_download();
  inline void clear_has_is_download();
  inline void set_has_is_auth_url();
  inline void clear_has_is_auth_url();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* document_url_;
  ::std::string* document_type_;
  ::std::string* check_md5_;
  ::google::protobuf::int32 document_size_;
  bool is_download_;
  bool is_auth_url_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Document* default_instance_;
};
// -------------------------------------------------------------------

class Video : public ::google::protobuf::MessageLite {
 public:
  Video();
  virtual ~Video();

  Video(const Video& from);

  inline Video& operator=(const Video& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Video& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Video* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Video* other);

  // implements Message ----------------------------------------------

  Video* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Video& from);
  void MergeFrom(const Video& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string video_url = 1;
  inline bool has_video_url() const;
  inline void clear_video_url();
  static const int kVideoUrlFieldNumber = 1;
  inline const ::std::string& video_url() const;
  inline void set_video_url(const ::std::string& value);
  inline void set_video_url(const char* value);
  inline void set_video_url(const char* value, size_t size);
  inline ::std::string* mutable_video_url();
  inline ::std::string* release_video_url();
  inline void set_allocated_video_url(::std::string* video_url);

  // required string video_type = 2;
  inline bool has_video_type() const;
  inline void clear_video_type();
  static const int kVideoTypeFieldNumber = 2;
  inline const ::std::string& video_type() const;
  inline void set_video_type(const ::std::string& value);
  inline void set_video_type(const char* value);
  inline void set_video_type(const char* value, size_t size);
  inline ::std::string* mutable_video_type();
  inline ::std::string* release_video_type();
  inline void set_allocated_video_type(::std::string* video_type);

  // required int32 video_size = 3;
  inline bool has_video_size() const;
  inline void clear_video_size();
  static const int kVideoSizeFieldNumber = 3;
  inline ::google::protobuf::int32 video_size() const;
  inline void set_video_size(::google::protobuf::int32 value);

  // required int32 video_time = 4;
  inline bool has_video_time() const;
  inline void clear_video_time();
  static const int kVideoTimeFieldNumber = 4;
  inline ::google::protobuf::int32 video_time() const;
  inline void set_video_time(::google::protobuf::int32 value);

  // optional string check_md5 = 5;
  inline bool has_check_md5() const;
  inline void clear_check_md5();
  static const int kCheckMd5FieldNumber = 5;
  inline const ::std::string& check_md5() const;
  inline void set_check_md5(const ::std::string& value);
  inline void set_check_md5(const char* value);
  inline void set_check_md5(const char* value, size_t size);
  inline ::std::string* mutable_check_md5();
  inline ::std::string* release_check_md5();
  inline void set_allocated_check_md5(::std::string* check_md5);

  // required bool is_download = 6;
  inline bool has_is_download() const;
  inline void clear_is_download();
  static const int kIsDownloadFieldNumber = 6;
  inline bool is_download() const;
  inline void set_is_download(bool value);

  // required bool is_auth_url = 7;
  inline bool has_is_auth_url() const;
  inline void clear_is_auth_url();
  static const int kIsAuthUrlFieldNumber = 7;
  inline bool is_auth_url() const;
  inline void set_is_auth_url(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Video)
 private:
  inline void set_has_video_url();
  inline void clear_has_video_url();
  inline void set_has_video_type();
  inline void clear_has_video_type();
  inline void set_has_video_size();
  inline void clear_has_video_size();
  inline void set_has_video_time();
  inline void clear_has_video_time();
  inline void set_has_check_md5();
  inline void clear_has_check_md5();
  inline void set_has_is_download();
  inline void clear_has_is_download();
  inline void set_has_is_auth_url();
  inline void clear_has_is_auth_url();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* video_url_;
  ::std::string* video_type_;
  ::google::protobuf::int32 video_size_;
  ::google::protobuf::int32 video_time_;
  ::std::string* check_md5_;
  bool is_download_;
  bool is_auth_url_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Video* default_instance_;
};
// -------------------------------------------------------------------

class Audio : public ::google::protobuf::MessageLite {
 public:
  Audio();
  virtual ~Audio();

  Audio(const Audio& from);

  inline Audio& operator=(const Audio& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Audio& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Audio* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Audio* other);

  // implements Message ----------------------------------------------

  Audio* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Audio& from);
  void MergeFrom(const Audio& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string audio_url = 1;
  inline bool has_audio_url() const;
  inline void clear_audio_url();
  static const int kAudioUrlFieldNumber = 1;
  inline const ::std::string& audio_url() const;
  inline void set_audio_url(const ::std::string& value);
  inline void set_audio_url(const char* value);
  inline void set_audio_url(const char* value, size_t size);
  inline ::std::string* mutable_audio_url();
  inline ::std::string* release_audio_url();
  inline void set_allocated_audio_url(::std::string* audio_url);

  // required string audio_type = 2;
  inline bool has_audio_type() const;
  inline void clear_audio_type();
  static const int kAudioTypeFieldNumber = 2;
  inline const ::std::string& audio_type() const;
  inline void set_audio_type(const ::std::string& value);
  inline void set_audio_type(const char* value);
  inline void set_audio_type(const char* value, size_t size);
  inline ::std::string* mutable_audio_type();
  inline ::std::string* release_audio_type();
  inline void set_allocated_audio_type(::std::string* audio_type);

  // required int32 audio_size = 3;
  inline bool has_audio_size() const;
  inline void clear_audio_size();
  static const int kAudioSizeFieldNumber = 3;
  inline ::google::protobuf::int32 audio_size() const;
  inline void set_audio_size(::google::protobuf::int32 value);

  // required int32 audio_time = 4;
  inline bool has_audio_time() const;
  inline void clear_audio_time();
  static const int kAudioTimeFieldNumber = 4;
  inline ::google::protobuf::int32 audio_time() const;
  inline void set_audio_time(::google::protobuf::int32 value);

  // optional string check_md5 = 5;
  inline bool has_check_md5() const;
  inline void clear_check_md5();
  static const int kCheckMd5FieldNumber = 5;
  inline const ::std::string& check_md5() const;
  inline void set_check_md5(const ::std::string& value);
  inline void set_check_md5(const char* value);
  inline void set_check_md5(const char* value, size_t size);
  inline ::std::string* mutable_check_md5();
  inline ::std::string* release_check_md5();
  inline void set_allocated_check_md5(::std::string* check_md5);

  // required bool is_download = 6;
  inline bool has_is_download() const;
  inline void clear_is_download();
  static const int kIsDownloadFieldNumber = 6;
  inline bool is_download() const;
  inline void set_is_download(bool value);

  // required bool is_auth_url = 7;
  inline bool has_is_auth_url() const;
  inline void clear_is_auth_url();
  static const int kIsAuthUrlFieldNumber = 7;
  inline bool is_auth_url() const;
  inline void set_is_auth_url(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Audio)
 private:
  inline void set_has_audio_url();
  inline void clear_has_audio_url();
  inline void set_has_audio_type();
  inline void clear_has_audio_type();
  inline void set_has_audio_size();
  inline void clear_has_audio_size();
  inline void set_has_audio_time();
  inline void clear_has_audio_time();
  inline void set_has_check_md5();
  inline void clear_has_check_md5();
  inline void set_has_is_download();
  inline void clear_has_is_download();
  inline void set_has_is_auth_url();
  inline void clear_has_is_auth_url();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* audio_url_;
  ::std::string* audio_type_;
  ::google::protobuf::int32 audio_size_;
  ::google::protobuf::int32 audio_time_;
  ::std::string* check_md5_;
  bool is_download_;
  bool is_auth_url_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Audio* default_instance_;
};
// -------------------------------------------------------------------

class AppUri : public ::google::protobuf::MessageLite {
 public:
  AppUri();
  virtual ~AppUri();

  AppUri(const AppUri& from);

  inline AppUri& operator=(const AppUri& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AppUri& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AppUri* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AppUri* other);

  // implements Message ----------------------------------------------

  AppUri* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AppUri& from);
  void MergeFrom(const AppUri& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string app_uri = 1;
  inline bool has_app_uri() const;
  inline void clear_app_uri();
  static const int kAppUriFieldNumber = 1;
  inline const ::std::string& app_uri() const;
  inline void set_app_uri(const ::std::string& value);
  inline void set_app_uri(const char* value);
  inline void set_app_uri(const char* value, size_t size);
  inline ::std::string* mutable_app_uri();
  inline ::std::string* release_app_uri();
  inline void set_allocated_app_uri(::std::string* app_uri);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.AppUri)
 private:
  inline void set_has_app_uri();
  inline void clear_has_app_uri();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* app_uri_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static AppUri* default_instance_;
};
// -------------------------------------------------------------------

class Banner : public ::google::protobuf::MessageLite {
 public:
  Banner();
  virtual ~Banner();

  Banner(const Banner& from);

  inline Banner& operator=(const Banner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Banner& default_instance();

  enum ContentCase {
    kItemId = 5,
    kWebUrl = 6,
    kAppUri = 7,
    CONTENT_NOT_SET = 0,
  };

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Banner* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Banner* other);

  // implements Message ----------------------------------------------

  Banner* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Banner& from);
  void MergeFrom(const Banner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 banner_id = 1;
  inline bool has_banner_id() const;
  inline void clear_banner_id();
  static const int kBannerIdFieldNumber = 1;
  inline ::google::protobuf::int32 banner_id() const;
  inline void set_banner_id(::google::protobuf::int32 value);

  // required string banner_name = 2;
  inline bool has_banner_name() const;
  inline void clear_banner_name();
  static const int kBannerNameFieldNumber = 2;
  inline const ::std::string& banner_name() const;
  inline void set_banner_name(const ::std::string& value);
  inline void set_banner_name(const char* value);
  inline void set_banner_name(const char* value, size_t size);
  inline ::std::string* mutable_banner_name();
  inline ::std::string* release_banner_name();
  inline void set_allocated_banner_name(::std::string* banner_name);

  // required string image_name = 3;
  inline bool has_image_name() const;
  inline void clear_image_name();
  static const int kImageNameFieldNumber = 3;
  inline const ::std::string& image_name() const;
  inline void set_image_name(const ::std::string& value);
  inline void set_image_name(const char* value);
  inline void set_image_name(const char* value, size_t size);
  inline ::std::string* mutable_image_name();
  inline ::std::string* release_image_name();
  inline void set_allocated_image_name(::std::string* image_name);

  // optional int32 allow_model_id = 4;
  inline bool has_allow_model_id() const;
  inline void clear_allow_model_id();
  static const int kAllowModelIdFieldNumber = 4;
  inline ::google::protobuf::int32 allow_model_id() const;
  inline void set_allow_model_id(::google::protobuf::int32 value);

  // optional int64 item_id = 5;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 5;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // optional .weizhu.discover_v2.WebUrl web_url = 6;
  inline bool has_web_url() const;
  inline void clear_web_url();
  static const int kWebUrlFieldNumber = 6;
  inline const ::weizhu::discover_v2::WebUrl& web_url() const;
  inline ::weizhu::discover_v2::WebUrl* mutable_web_url();
  inline ::weizhu::discover_v2::WebUrl* release_web_url();
  inline void set_allocated_web_url(::weizhu::discover_v2::WebUrl* web_url);

  // optional .weizhu.discover_v2.AppUri app_uri = 7;
  inline bool has_app_uri() const;
  inline void clear_app_uri();
  static const int kAppUriFieldNumber = 7;
  inline const ::weizhu::discover_v2::AppUri& app_uri() const;
  inline ::weizhu::discover_v2::AppUri* mutable_app_uri();
  inline ::weizhu::discover_v2::AppUri* release_app_uri();
  inline void set_allocated_app_uri(::weizhu::discover_v2::AppUri* app_uri);

  // optional .weizhu.discover_v2.State state = 95 [default = NORMAL];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 95;
  inline ::weizhu::discover_v2::State state() const;
  inline void set_state(::weizhu::discover_v2::State value);

  // optional int64 create_admin_id = 96;
  inline bool has_create_admin_id() const;
  inline void clear_create_admin_id();
  static const int kCreateAdminIdFieldNumber = 96;
  inline ::google::protobuf::int64 create_admin_id() const;
  inline void set_create_admin_id(::google::protobuf::int64 value);

  // optional int32 create_time = 97;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 97;
  inline ::google::protobuf::int32 create_time() const;
  inline void set_create_time(::google::protobuf::int32 value);

  // optional int64 update_admin_id = 98;
  inline bool has_update_admin_id() const;
  inline void clear_update_admin_id();
  static const int kUpdateAdminIdFieldNumber = 98;
  inline ::google::protobuf::int64 update_admin_id() const;
  inline void set_update_admin_id(::google::protobuf::int64 value);

  // optional int32 update_time = 99;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 99;
  inline ::google::protobuf::int32 update_time() const;
  inline void set_update_time(::google::protobuf::int32 value);

  inline ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Banner)
 private:
  inline void set_has_banner_id();
  inline void clear_has_banner_id();
  inline void set_has_banner_name();
  inline void clear_has_banner_name();
  inline void set_has_image_name();
  inline void clear_has_image_name();
  inline void set_has_allow_model_id();
  inline void clear_has_allow_model_id();
  inline void set_has_item_id();
  inline void set_has_web_url();
  inline void set_has_app_uri();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_create_admin_id();
  inline void clear_has_create_admin_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_update_admin_id();
  inline void clear_has_update_admin_id();
  inline void set_has_update_time();
  inline void clear_has_update_time();

  inline bool has_content();
  void clear_content();
  inline void clear_has_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* banner_name_;
  ::google::protobuf::int32 banner_id_;
  ::google::protobuf::int32 allow_model_id_;
  ::std::string* image_name_;
  ::google::protobuf::int64 create_admin_id_;
  int state_;
  ::google::protobuf::int32 create_time_;
  ::google::protobuf::int64 update_admin_id_;
  ::google::protobuf::int32 update_time_;
  union ContentUnion {
    ::google::protobuf::int64 item_id_;
    ::weizhu::discover_v2::WebUrl* web_url_;
    ::weizhu::discover_v2::AppUri* app_uri_;
  } content_;
  ::google::protobuf::uint32 _oneof_case_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Banner* default_instance_;
};
// -------------------------------------------------------------------

class Module_Category : public ::google::protobuf::MessageLite {
 public:
  Module_Category();
  virtual ~Module_Category();

  Module_Category(const Module_Category& from);

  inline Module_Category& operator=(const Module_Category& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Module_Category& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Module_Category* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Module_Category* other);

  // implements Message ----------------------------------------------

  Module_Category* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Module_Category& from);
  void MergeFrom(const Module_Category& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 category_id = 1;
  inline bool has_category_id() const;
  inline void clear_category_id();
  static const int kCategoryIdFieldNumber = 1;
  inline ::google::protobuf::int32 category_id() const;
  inline void set_category_id(::google::protobuf::int32 value);

  // required string category_name = 2;
  inline bool has_category_name() const;
  inline void clear_category_name();
  static const int kCategoryNameFieldNumber = 2;
  inline const ::std::string& category_name() const;
  inline void set_category_name(const ::std::string& value);
  inline void set_category_name(const char* value);
  inline void set_category_name(const char* value, size_t size);
  inline ::std::string* mutable_category_name();
  inline ::std::string* release_category_name();
  inline void set_allocated_category_name(::std::string* category_name);

  // required int32 module_id = 3;
  inline bool has_module_id() const;
  inline void clear_module_id();
  static const int kModuleIdFieldNumber = 3;
  inline ::google::protobuf::int32 module_id() const;
  inline void set_module_id(::google::protobuf::int32 value);

  // optional int32 allow_model_id = 4;
  inline bool has_allow_model_id() const;
  inline void clear_allow_model_id();
  static const int kAllowModelIdFieldNumber = 4;
  inline ::google::protobuf::int32 allow_model_id() const;
  inline void set_allow_model_id(::google::protobuf::int32 value);

  // optional bool prompt_dot = 5;
  inline bool has_prompt_dot() const;
  inline void clear_prompt_dot();
  static const int kPromptDotFieldNumber = 5;
  inline bool prompt_dot() const;
  inline void set_prompt_dot(bool value);

  // optional int32 prompt_cnt = 6;
  inline bool has_prompt_cnt() const;
  inline void clear_prompt_cnt();
  static const int kPromptCntFieldNumber = 6;
  inline ::google::protobuf::int32 prompt_cnt() const;
  inline void set_prompt_cnt(::google::protobuf::int32 value);

  // optional .weizhu.discover_v2.State state = 95 [default = NORMAL];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 95;
  inline ::weizhu::discover_v2::State state() const;
  inline void set_state(::weizhu::discover_v2::State value);

  // optional int64 create_admin_id = 96;
  inline bool has_create_admin_id() const;
  inline void clear_create_admin_id();
  static const int kCreateAdminIdFieldNumber = 96;
  inline ::google::protobuf::int64 create_admin_id() const;
  inline void set_create_admin_id(::google::protobuf::int64 value);

  // optional int32 create_time = 97;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 97;
  inline ::google::protobuf::int32 create_time() const;
  inline void set_create_time(::google::protobuf::int32 value);

  // optional int64 update_admin_id = 98;
  inline bool has_update_admin_id() const;
  inline void clear_update_admin_id();
  static const int kUpdateAdminIdFieldNumber = 98;
  inline ::google::protobuf::int64 update_admin_id() const;
  inline void set_update_admin_id(::google::protobuf::int64 value);

  // optional int32 update_time = 99;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 99;
  inline ::google::protobuf::int32 update_time() const;
  inline void set_update_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Module.Category)
 private:
  inline void set_has_category_id();
  inline void clear_has_category_id();
  inline void set_has_category_name();
  inline void clear_has_category_name();
  inline void set_has_module_id();
  inline void clear_has_module_id();
  inline void set_has_allow_model_id();
  inline void clear_has_allow_model_id();
  inline void set_has_prompt_dot();
  inline void clear_has_prompt_dot();
  inline void set_has_prompt_cnt();
  inline void clear_has_prompt_cnt();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_create_admin_id();
  inline void clear_has_create_admin_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_update_admin_id();
  inline void clear_has_update_admin_id();
  inline void set_has_update_time();
  inline void clear_has_update_time();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* category_name_;
  ::google::protobuf::int32 category_id_;
  ::google::protobuf::int32 module_id_;
  ::google::protobuf::int32 allow_model_id_;
  bool prompt_dot_;
  ::google::protobuf::int32 prompt_cnt_;
  int state_;
  ::google::protobuf::int64 create_admin_id_;
  ::google::protobuf::int64 update_admin_id_;
  ::google::protobuf::int32 create_time_;
  ::google::protobuf::int32 update_time_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Module_Category* default_instance_;
};
// -------------------------------------------------------------------

class Module_CategoryList : public ::google::protobuf::MessageLite {
 public:
  Module_CategoryList();
  virtual ~Module_CategoryList();

  Module_CategoryList(const Module_CategoryList& from);

  inline Module_CategoryList& operator=(const Module_CategoryList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Module_CategoryList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Module_CategoryList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Module_CategoryList* other);

  // implements Message ----------------------------------------------

  Module_CategoryList* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Module_CategoryList& from);
  void MergeFrom(const Module_CategoryList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.Module.Category category = 1;
  inline int category_size() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 1;
  inline const ::weizhu::discover_v2::Module_Category& category(int index) const;
  inline ::weizhu::discover_v2::Module_Category* mutable_category(int index);
  inline ::weizhu::discover_v2::Module_Category* add_category();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Module_Category >&
      category() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Module_Category >*
      mutable_category();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Module.CategoryList)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Module_Category > category_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Module_CategoryList* default_instance_;
};
// -------------------------------------------------------------------

class Module : public ::google::protobuf::MessageLite {
 public:
  Module();
  virtual ~Module();

  Module(const Module& from);

  inline Module& operator=(const Module& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Module& default_instance();

  enum ContentCase {
    kCategoryList = 7,
    kWebUrl = 8,
    kAppUri = 9,
    CONTENT_NOT_SET = 0,
  };

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Module* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Module* other);

  // implements Message ----------------------------------------------

  Module* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Module& from);
  void MergeFrom(const Module& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef Module_Category Category;
  typedef Module_CategoryList CategoryList;

  // accessors -------------------------------------------------------

  // required int32 module_id = 1;
  inline bool has_module_id() const;
  inline void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  inline ::google::protobuf::int32 module_id() const;
  inline void set_module_id(::google::protobuf::int32 value);

  // required string module_name = 2;
  inline bool has_module_name() const;
  inline void clear_module_name();
  static const int kModuleNameFieldNumber = 2;
  inline const ::std::string& module_name() const;
  inline void set_module_name(const ::std::string& value);
  inline void set_module_name(const char* value);
  inline void set_module_name(const char* value, size_t size);
  inline ::std::string* mutable_module_name();
  inline ::std::string* release_module_name();
  inline void set_allocated_module_name(::std::string* module_name);

  // required string image_name = 3;
  inline bool has_image_name() const;
  inline void clear_image_name();
  static const int kImageNameFieldNumber = 3;
  inline const ::std::string& image_name() const;
  inline void set_image_name(const ::std::string& value);
  inline void set_image_name(const char* value);
  inline void set_image_name(const char* value, size_t size);
  inline ::std::string* mutable_image_name();
  inline ::std::string* release_image_name();
  inline void set_allocated_image_name(::std::string* image_name);

  // optional int32 allow_model_id = 4;
  inline bool has_allow_model_id() const;
  inline void clear_allow_model_id();
  static const int kAllowModelIdFieldNumber = 4;
  inline ::google::protobuf::int32 allow_model_id() const;
  inline void set_allow_model_id(::google::protobuf::int32 value);

  // optional bool prompt_dot = 5;
  inline bool has_prompt_dot() const;
  inline void clear_prompt_dot();
  static const int kPromptDotFieldNumber = 5;
  inline bool prompt_dot() const;
  inline void set_prompt_dot(bool value);

  // optional int32 prompt_cnt = 6;
  inline bool has_prompt_cnt() const;
  inline void clear_prompt_cnt();
  static const int kPromptCntFieldNumber = 6;
  inline ::google::protobuf::int32 prompt_cnt() const;
  inline void set_prompt_cnt(::google::protobuf::int32 value);

  // optional .weizhu.discover_v2.Module.CategoryList category_list = 7;
  inline bool has_category_list() const;
  inline void clear_category_list();
  static const int kCategoryListFieldNumber = 7;
  inline const ::weizhu::discover_v2::Module_CategoryList& category_list() const;
  inline ::weizhu::discover_v2::Module_CategoryList* mutable_category_list();
  inline ::weizhu::discover_v2::Module_CategoryList* release_category_list();
  inline void set_allocated_category_list(::weizhu::discover_v2::Module_CategoryList* category_list);

  // optional .weizhu.discover_v2.WebUrl web_url = 8;
  inline bool has_web_url() const;
  inline void clear_web_url();
  static const int kWebUrlFieldNumber = 8;
  inline const ::weizhu::discover_v2::WebUrl& web_url() const;
  inline ::weizhu::discover_v2::WebUrl* mutable_web_url();
  inline ::weizhu::discover_v2::WebUrl* release_web_url();
  inline void set_allocated_web_url(::weizhu::discover_v2::WebUrl* web_url);

  // optional .weizhu.discover_v2.AppUri app_uri = 9;
  inline bool has_app_uri() const;
  inline void clear_app_uri();
  static const int kAppUriFieldNumber = 9;
  inline const ::weizhu::discover_v2::AppUri& app_uri() const;
  inline ::weizhu::discover_v2::AppUri* mutable_app_uri();
  inline ::weizhu::discover_v2::AppUri* release_app_uri();
  inline void set_allocated_app_uri(::weizhu::discover_v2::AppUri* app_uri);

  // optional .weizhu.discover_v2.State state = 95 [default = NORMAL];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 95;
  inline ::weizhu::discover_v2::State state() const;
  inline void set_state(::weizhu::discover_v2::State value);

  // optional int64 create_admin_id = 96;
  inline bool has_create_admin_id() const;
  inline void clear_create_admin_id();
  static const int kCreateAdminIdFieldNumber = 96;
  inline ::google::protobuf::int64 create_admin_id() const;
  inline void set_create_admin_id(::google::protobuf::int64 value);

  // optional int32 create_time = 97;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 97;
  inline ::google::protobuf::int32 create_time() const;
  inline void set_create_time(::google::protobuf::int32 value);

  // optional int64 update_admin_id = 98;
  inline bool has_update_admin_id() const;
  inline void clear_update_admin_id();
  static const int kUpdateAdminIdFieldNumber = 98;
  inline ::google::protobuf::int64 update_admin_id() const;
  inline void set_update_admin_id(::google::protobuf::int64 value);

  // optional int32 update_time = 99;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 99;
  inline ::google::protobuf::int32 update_time() const;
  inline void set_update_time(::google::protobuf::int32 value);

  inline ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Module)
 private:
  inline void set_has_module_id();
  inline void clear_has_module_id();
  inline void set_has_module_name();
  inline void clear_has_module_name();
  inline void set_has_image_name();
  inline void clear_has_image_name();
  inline void set_has_allow_model_id();
  inline void clear_has_allow_model_id();
  inline void set_has_prompt_dot();
  inline void clear_has_prompt_dot();
  inline void set_has_prompt_cnt();
  inline void clear_has_prompt_cnt();
  inline void set_has_category_list();
  inline void set_has_web_url();
  inline void set_has_app_uri();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_create_admin_id();
  inline void clear_has_create_admin_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_update_admin_id();
  inline void clear_has_update_admin_id();
  inline void set_has_update_time();
  inline void clear_has_update_time();

  inline bool has_content();
  void clear_content();
  inline void clear_has_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* module_name_;
  ::google::protobuf::int32 module_id_;
  ::google::protobuf::int32 allow_model_id_;
  ::std::string* image_name_;
  bool prompt_dot_;
  ::google::protobuf::int32 prompt_cnt_;
  ::google::protobuf::int64 create_admin_id_;
  int state_;
  ::google::protobuf::int32 create_time_;
  ::google::protobuf::int64 update_admin_id_;
  ::google::protobuf::int32 update_time_;
  union ContentUnion {
    ::weizhu::discover_v2::Module_CategoryList* category_list_;
    ::weizhu::discover_v2::WebUrl* web_url_;
    ::weizhu::discover_v2::AppUri* app_uri_;
  } content_;
  ::google::protobuf::uint32 _oneof_case_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Module* default_instance_;
};
// -------------------------------------------------------------------

class Item_Base : public ::google::protobuf::MessageLite {
 public:
  Item_Base();
  virtual ~Item_Base();

  Item_Base(const Item_Base& from);

  inline Item_Base& operator=(const Item_Base& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Item_Base& default_instance();

  enum ContentCase {
    kWebUrl = 20,
    kDocument = 21,
    kVideo = 22,
    kAudio = 23,
    kAppUri = 24,
    CONTENT_NOT_SET = 0,
  };

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Item_Base* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Item_Base* other);

  // implements Message ----------------------------------------------

  Item_Base* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Item_Base& from);
  void MergeFrom(const Item_Base& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required string item_name = 2;
  inline bool has_item_name() const;
  inline void clear_item_name();
  static const int kItemNameFieldNumber = 2;
  inline const ::std::string& item_name() const;
  inline void set_item_name(const ::std::string& value);
  inline void set_item_name(const char* value);
  inline void set_item_name(const char* value, size_t size);
  inline ::std::string* mutable_item_name();
  inline ::std::string* release_item_name();
  inline void set_allocated_item_name(::std::string* item_name);

  // required string item_desc = 3;
  inline bool has_item_desc() const;
  inline void clear_item_desc();
  static const int kItemDescFieldNumber = 3;
  inline const ::std::string& item_desc() const;
  inline void set_item_desc(const ::std::string& value);
  inline void set_item_desc(const char* value);
  inline void set_item_desc(const char* value, size_t size);
  inline ::std::string* mutable_item_desc();
  inline ::std::string* release_item_desc();
  inline void set_allocated_item_desc(::std::string* item_desc);

  // required string image_name = 4;
  inline bool has_image_name() const;
  inline void clear_image_name();
  static const int kImageNameFieldNumber = 4;
  inline const ::std::string& image_name() const;
  inline void set_image_name(const ::std::string& value);
  inline void set_image_name(const char* value);
  inline void set_image_name(const char* value, size_t size);
  inline ::std::string* mutable_image_name();
  inline ::std::string* release_image_name();
  inline void set_allocated_image_name(::std::string* image_name);

  // optional int32 allow_model_id = 5;
  inline bool has_allow_model_id() const;
  inline void clear_allow_model_id();
  static const int kAllowModelIdFieldNumber = 5;
  inline ::google::protobuf::int32 allow_model_id() const;
  inline void set_allow_model_id(::google::protobuf::int32 value);

  // required bool enable_comment = 6;
  inline bool has_enable_comment() const;
  inline void clear_enable_comment();
  static const int kEnableCommentFieldNumber = 6;
  inline bool enable_comment() const;
  inline void set_enable_comment(bool value);

  // required bool enable_score = 7;
  inline bool has_enable_score() const;
  inline void clear_enable_score();
  static const int kEnableScoreFieldNumber = 7;
  inline bool enable_score() const;
  inline void set_enable_score(bool value);

  // required bool enable_remind = 8;
  inline bool has_enable_remind() const;
  inline void clear_enable_remind();
  static const int kEnableRemindFieldNumber = 8;
  inline bool enable_remind() const;
  inline void set_enable_remind(bool value);

  // required bool enable_like = 9;
  inline bool has_enable_like() const;
  inline void clear_enable_like();
  static const int kEnableLikeFieldNumber = 9;
  inline bool enable_like() const;
  inline void set_enable_like(bool value);

  // required bool enable_share = 10;
  inline bool has_enable_share() const;
  inline void clear_enable_share();
  static const int kEnableShareFieldNumber = 10;
  inline bool enable_share() const;
  inline void set_enable_share(bool value);

  // optional bool enable_external_share = 11;
  inline bool has_enable_external_share() const;
  inline void clear_enable_external_share();
  static const int kEnableExternalShareFieldNumber = 11;
  inline bool enable_external_share() const;
  inline void set_enable_external_share(bool value);

  // optional .weizhu.discover_v2.WebUrl web_url = 20;
  inline bool has_web_url() const;
  inline void clear_web_url();
  static const int kWebUrlFieldNumber = 20;
  inline const ::weizhu::discover_v2::WebUrl& web_url() const;
  inline ::weizhu::discover_v2::WebUrl* mutable_web_url();
  inline ::weizhu::discover_v2::WebUrl* release_web_url();
  inline void set_allocated_web_url(::weizhu::discover_v2::WebUrl* web_url);

  // optional .weizhu.discover_v2.Document document = 21;
  inline bool has_document() const;
  inline void clear_document();
  static const int kDocumentFieldNumber = 21;
  inline const ::weizhu::discover_v2::Document& document() const;
  inline ::weizhu::discover_v2::Document* mutable_document();
  inline ::weizhu::discover_v2::Document* release_document();
  inline void set_allocated_document(::weizhu::discover_v2::Document* document);

  // optional .weizhu.discover_v2.Video video = 22;
  inline bool has_video() const;
  inline void clear_video();
  static const int kVideoFieldNumber = 22;
  inline const ::weizhu::discover_v2::Video& video() const;
  inline ::weizhu::discover_v2::Video* mutable_video();
  inline ::weizhu::discover_v2::Video* release_video();
  inline void set_allocated_video(::weizhu::discover_v2::Video* video);

  // optional .weizhu.discover_v2.Audio audio = 23;
  inline bool has_audio() const;
  inline void clear_audio();
  static const int kAudioFieldNumber = 23;
  inline const ::weizhu::discover_v2::Audio& audio() const;
  inline ::weizhu::discover_v2::Audio* mutable_audio();
  inline ::weizhu::discover_v2::Audio* release_audio();
  inline void set_allocated_audio(::weizhu::discover_v2::Audio* audio);

  // optional .weizhu.discover_v2.AppUri app_uri = 24;
  inline bool has_app_uri() const;
  inline void clear_app_uri();
  static const int kAppUriFieldNumber = 24;
  inline const ::weizhu::discover_v2::AppUri& app_uri() const;
  inline ::weizhu::discover_v2::AppUri* mutable_app_uri();
  inline ::weizhu::discover_v2::AppUri* release_app_uri();
  inline void set_allocated_app_uri(::weizhu::discover_v2::AppUri* app_uri);

  // optional .weizhu.discover_v2.State state = 95 [default = NORMAL];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 95;
  inline ::weizhu::discover_v2::State state() const;
  inline void set_state(::weizhu::discover_v2::State value);

  // optional int64 create_admin_id = 96;
  inline bool has_create_admin_id() const;
  inline void clear_create_admin_id();
  static const int kCreateAdminIdFieldNumber = 96;
  inline ::google::protobuf::int64 create_admin_id() const;
  inline void set_create_admin_id(::google::protobuf::int64 value);

  // optional int32 create_time = 97;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 97;
  inline ::google::protobuf::int32 create_time() const;
  inline void set_create_time(::google::protobuf::int32 value);

  // optional int64 update_admin_id = 98;
  inline bool has_update_admin_id() const;
  inline void clear_update_admin_id();
  static const int kUpdateAdminIdFieldNumber = 98;
  inline ::google::protobuf::int64 update_admin_id() const;
  inline void set_update_admin_id(::google::protobuf::int64 value);

  // optional int32 update_time = 99;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 99;
  inline ::google::protobuf::int32 update_time() const;
  inline void set_update_time(::google::protobuf::int32 value);

  inline ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Item.Base)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_name();
  inline void clear_has_item_name();
  inline void set_has_item_desc();
  inline void clear_has_item_desc();
  inline void set_has_image_name();
  inline void clear_has_image_name();
  inline void set_has_allow_model_id();
  inline void clear_has_allow_model_id();
  inline void set_has_enable_comment();
  inline void clear_has_enable_comment();
  inline void set_has_enable_score();
  inline void clear_has_enable_score();
  inline void set_has_enable_remind();
  inline void clear_has_enable_remind();
  inline void set_has_enable_like();
  inline void clear_has_enable_like();
  inline void set_has_enable_share();
  inline void clear_has_enable_share();
  inline void set_has_enable_external_share();
  inline void clear_has_enable_external_share();
  inline void set_has_web_url();
  inline void set_has_document();
  inline void set_has_video();
  inline void set_has_audio();
  inline void set_has_app_uri();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_create_admin_id();
  inline void clear_has_create_admin_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_update_admin_id();
  inline void clear_has_update_admin_id();
  inline void set_has_update_time();
  inline void clear_has_update_time();

  inline bool has_content();
  void clear_content();
  inline void clear_has_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::std::string* item_name_;
  ::std::string* item_desc_;
  ::std::string* image_name_;
  ::google::protobuf::int32 allow_model_id_;
  bool enable_comment_;
  bool enable_score_;
  bool enable_remind_;
  bool enable_like_;
  bool enable_share_;
  bool enable_external_share_;
  int state_;
  ::google::protobuf::int64 create_admin_id_;
  ::google::protobuf::int64 update_admin_id_;
  ::google::protobuf::int32 create_time_;
  ::google::protobuf::int32 update_time_;
  union ContentUnion {
    ::weizhu::discover_v2::WebUrl* web_url_;
    ::weizhu::discover_v2::Document* document_;
    ::weizhu::discover_v2::Video* video_;
    ::weizhu::discover_v2::Audio* audio_;
    ::weizhu::discover_v2::AppUri* app_uri_;
  } content_;
  ::google::protobuf::uint32 _oneof_case_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Item_Base* default_instance_;
};
// -------------------------------------------------------------------

class Item_Count : public ::google::protobuf::MessageLite {
 public:
  Item_Count();
  virtual ~Item_Count();

  Item_Count(const Item_Count& from);

  inline Item_Count& operator=(const Item_Count& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Item_Count& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Item_Count* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Item_Count* other);

  // implements Message ----------------------------------------------

  Item_Count* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Item_Count& from);
  void MergeFrom(const Item_Count& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 learn_cnt = 1;
  inline bool has_learn_cnt() const;
  inline void clear_learn_cnt();
  static const int kLearnCntFieldNumber = 1;
  inline ::google::protobuf::int32 learn_cnt() const;
  inline void set_learn_cnt(::google::protobuf::int32 value);

  // required int32 learn_user_cnt = 2;
  inline bool has_learn_user_cnt() const;
  inline void clear_learn_user_cnt();
  static const int kLearnUserCntFieldNumber = 2;
  inline ::google::protobuf::int32 learn_user_cnt() const;
  inline void set_learn_user_cnt(::google::protobuf::int32 value);

  // required int32 comment_cnt = 3;
  inline bool has_comment_cnt() const;
  inline void clear_comment_cnt();
  static const int kCommentCntFieldNumber = 3;
  inline ::google::protobuf::int32 comment_cnt() const;
  inline void set_comment_cnt(::google::protobuf::int32 value);

  // required int32 comment_user_cnt = 4;
  inline bool has_comment_user_cnt() const;
  inline void clear_comment_user_cnt();
  static const int kCommentUserCntFieldNumber = 4;
  inline ::google::protobuf::int32 comment_user_cnt() const;
  inline void set_comment_user_cnt(::google::protobuf::int32 value);

  // required int32 score_number = 5;
  inline bool has_score_number() const;
  inline void clear_score_number();
  static const int kScoreNumberFieldNumber = 5;
  inline ::google::protobuf::int32 score_number() const;
  inline void set_score_number(::google::protobuf::int32 value);

  // required int32 score_user_cnt = 6;
  inline bool has_score_user_cnt() const;
  inline void clear_score_user_cnt();
  static const int kScoreUserCntFieldNumber = 6;
  inline ::google::protobuf::int32 score_user_cnt() const;
  inline void set_score_user_cnt(::google::protobuf::int32 value);

  // required int32 like_cnt = 7;
  inline bool has_like_cnt() const;
  inline void clear_like_cnt();
  static const int kLikeCntFieldNumber = 7;
  inline ::google::protobuf::int32 like_cnt() const;
  inline void set_like_cnt(::google::protobuf::int32 value);

  // required int32 share_cnt = 8;
  inline bool has_share_cnt() const;
  inline void clear_share_cnt();
  static const int kShareCntFieldNumber = 8;
  inline ::google::protobuf::int32 share_cnt() const;
  inline void set_share_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Item.Count)
 private:
  inline void set_has_learn_cnt();
  inline void clear_has_learn_cnt();
  inline void set_has_learn_user_cnt();
  inline void clear_has_learn_user_cnt();
  inline void set_has_comment_cnt();
  inline void clear_has_comment_cnt();
  inline void set_has_comment_user_cnt();
  inline void clear_has_comment_user_cnt();
  inline void set_has_score_number();
  inline void clear_has_score_number();
  inline void set_has_score_user_cnt();
  inline void clear_has_score_user_cnt();
  inline void set_has_like_cnt();
  inline void clear_has_like_cnt();
  inline void set_has_share_cnt();
  inline void clear_has_share_cnt();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 learn_cnt_;
  ::google::protobuf::int32 learn_user_cnt_;
  ::google::protobuf::int32 comment_cnt_;
  ::google::protobuf::int32 comment_user_cnt_;
  ::google::protobuf::int32 score_number_;
  ::google::protobuf::int32 score_user_cnt_;
  ::google::protobuf::int32 like_cnt_;
  ::google::protobuf::int32 share_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Item_Count* default_instance_;
};
// -------------------------------------------------------------------

class Item_User : public ::google::protobuf::MessageLite {
 public:
  Item_User();
  virtual ~Item_User();

  Item_User(const Item_User& from);

  inline Item_User& operator=(const Item_User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Item_User& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Item_User* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Item_User* other);

  // implements Message ----------------------------------------------

  Item_User* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Item_User& from);
  void MergeFrom(const Item_User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // optional bool is_learn = 2;
  inline bool has_is_learn() const;
  inline void clear_is_learn();
  static const int kIsLearnFieldNumber = 2;
  inline bool is_learn() const;
  inline void set_is_learn(bool value);

  // optional bool is_comment = 3;
  inline bool has_is_comment() const;
  inline void clear_is_comment();
  static const int kIsCommentFieldNumber = 3;
  inline bool is_comment() const;
  inline void set_is_comment(bool value);

  // optional bool is_score = 4;
  inline bool has_is_score() const;
  inline void clear_is_score();
  static const int kIsScoreFieldNumber = 4;
  inline bool is_score() const;
  inline void set_is_score(bool value);

  // optional bool is_like = 5;
  inline bool has_is_like() const;
  inline void clear_is_like();
  static const int kIsLikeFieldNumber = 5;
  inline bool is_like() const;
  inline void set_is_like(bool value);

  // optional bool is_share = 6;
  inline bool has_is_share() const;
  inline void clear_is_share();
  static const int kIsShareFieldNumber = 6;
  inline bool is_share() const;
  inline void set_is_share(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Item.User)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_is_learn();
  inline void clear_has_is_learn();
  inline void set_has_is_comment();
  inline void clear_has_is_comment();
  inline void set_has_is_score();
  inline void clear_has_is_score();
  inline void set_has_is_like();
  inline void clear_has_is_like();
  inline void set_has_is_share();
  inline void clear_has_is_share();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  bool is_learn_;
  bool is_comment_;
  bool is_score_;
  bool is_like_;
  bool is_share_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Item_User* default_instance_;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::MessageLite {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Item& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Item* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef Item_Base Base;
  typedef Item_Count Count;
  typedef Item_User User;

  // accessors -------------------------------------------------------

  // required .weizhu.discover_v2.Item.Base base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::weizhu::discover_v2::Item_Base& base() const;
  inline ::weizhu::discover_v2::Item_Base* mutable_base();
  inline ::weizhu::discover_v2::Item_Base* release_base();
  inline void set_allocated_base(::weizhu::discover_v2::Item_Base* base);

  // required .weizhu.discover_v2.Item.Count count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline const ::weizhu::discover_v2::Item_Count& count() const;
  inline ::weizhu::discover_v2::Item_Count* mutable_count();
  inline ::weizhu::discover_v2::Item_Count* release_count();
  inline void set_allocated_count(::weizhu::discover_v2::Item_Count* count);

  // optional .weizhu.discover_v2.Item.User user = 3;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 3;
  inline const ::weizhu::discover_v2::Item_User& user() const;
  inline ::weizhu::discover_v2::Item_User* mutable_user();
  inline ::weizhu::discover_v2::Item_User* release_user();
  inline void set_allocated_user(::weizhu::discover_v2::Item_User* user);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.Item)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_user();
  inline void clear_has_user();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::weizhu::discover_v2::Item_Base* base_;
  ::weizhu::discover_v2::Item_Count* count_;
  ::weizhu::discover_v2::Item_User* user_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class ItemLearn : public ::google::protobuf::MessageLite {
 public:
  ItemLearn();
  virtual ~ItemLearn();

  ItemLearn(const ItemLearn& from);

  inline ItemLearn& operator=(const ItemLearn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ItemLearn& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ItemLearn* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ItemLearn* other);

  // implements Message ----------------------------------------------

  ItemLearn* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ItemLearn& from);
  void MergeFrom(const ItemLearn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 learn_time = 3;
  inline bool has_learn_time() const;
  inline void clear_learn_time();
  static const int kLearnTimeFieldNumber = 3;
  inline ::google::protobuf::int32 learn_time() const;
  inline void set_learn_time(::google::protobuf::int32 value);

  // required int32 learn_duration = 4;
  inline bool has_learn_duration() const;
  inline void clear_learn_duration();
  static const int kLearnDurationFieldNumber = 4;
  inline ::google::protobuf::int32 learn_duration() const;
  inline void set_learn_duration(::google::protobuf::int32 value);

  // required int32 learn_cnt = 5;
  inline bool has_learn_cnt() const;
  inline void clear_learn_cnt();
  static const int kLearnCntFieldNumber = 5;
  inline ::google::protobuf::int32 learn_cnt() const;
  inline void set_learn_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ItemLearn)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_learn_time();
  inline void clear_has_learn_time();
  inline void set_has_learn_duration();
  inline void clear_has_learn_duration();
  inline void set_has_learn_cnt();
  inline void clear_has_learn_cnt();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 learn_time_;
  ::google::protobuf::int32 learn_duration_;
  ::google::protobuf::int32 learn_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ItemLearn* default_instance_;
};
// -------------------------------------------------------------------

class ItemComment : public ::google::protobuf::MessageLite {
 public:
  ItemComment();
  virtual ~ItemComment();

  ItemComment(const ItemComment& from);

  inline ItemComment& operator=(const ItemComment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ItemComment& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ItemComment* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ItemComment* other);

  // implements Message ----------------------------------------------

  ItemComment* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ItemComment& from);
  void MergeFrom(const ItemComment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 comment_id = 1;
  inline bool has_comment_id() const;
  inline void clear_comment_id();
  static const int kCommentIdFieldNumber = 1;
  inline ::google::protobuf::int64 comment_id() const;
  inline void set_comment_id(::google::protobuf::int64 value);

  // required int64 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int64 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 comment_time = 4;
  inline bool has_comment_time() const;
  inline void clear_comment_time();
  static const int kCommentTimeFieldNumber = 4;
  inline ::google::protobuf::int32 comment_time() const;
  inline void set_comment_time(::google::protobuf::int32 value);

  // required string comment_text = 5;
  inline bool has_comment_text() const;
  inline void clear_comment_text();
  static const int kCommentTextFieldNumber = 5;
  inline const ::std::string& comment_text() const;
  inline void set_comment_text(const ::std::string& value);
  inline void set_comment_text(const char* value);
  inline void set_comment_text(const char* value, size_t size);
  inline ::std::string* mutable_comment_text();
  inline ::std::string* release_comment_text();
  inline void set_allocated_comment_text(::std::string* comment_text);

  // required bool is_delete = 6;
  inline bool has_is_delete() const;
  inline void clear_is_delete();
  static const int kIsDeleteFieldNumber = 6;
  inline bool is_delete() const;
  inline void set_is_delete(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ItemComment)
 private:
  inline void set_has_comment_id();
  inline void clear_has_comment_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_comment_time();
  inline void clear_has_comment_time();
  inline void set_has_comment_text();
  inline void clear_has_comment_text();
  inline void set_has_is_delete();
  inline void clear_has_is_delete();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 comment_id_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int64 user_id_;
  ::std::string* comment_text_;
  ::google::protobuf::int32 comment_time_;
  bool is_delete_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ItemComment* default_instance_;
};
// -------------------------------------------------------------------

class ItemScore : public ::google::protobuf::MessageLite {
 public:
  ItemScore();
  virtual ~ItemScore();

  ItemScore(const ItemScore& from);

  inline ItemScore& operator=(const ItemScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ItemScore& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ItemScore* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ItemScore* other);

  // implements Message ----------------------------------------------

  ItemScore* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ItemScore& from);
  void MergeFrom(const ItemScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 score_time = 3;
  inline bool has_score_time() const;
  inline void clear_score_time();
  static const int kScoreTimeFieldNumber = 3;
  inline ::google::protobuf::int32 score_time() const;
  inline void set_score_time(::google::protobuf::int32 value);

  // required int32 score_number = 4;
  inline bool has_score_number() const;
  inline void clear_score_number();
  static const int kScoreNumberFieldNumber = 4;
  inline ::google::protobuf::int32 score_number() const;
  inline void set_score_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ItemScore)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_score_time();
  inline void clear_has_score_time();
  inline void set_has_score_number();
  inline void clear_has_score_number();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 score_time_;
  ::google::protobuf::int32 score_number_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ItemScore* default_instance_;
};
// -------------------------------------------------------------------

class ItemLike : public ::google::protobuf::MessageLite {
 public:
  ItemLike();
  virtual ~ItemLike();

  ItemLike(const ItemLike& from);

  inline ItemLike& operator=(const ItemLike& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ItemLike& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ItemLike* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ItemLike* other);

  // implements Message ----------------------------------------------

  ItemLike* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ItemLike& from);
  void MergeFrom(const ItemLike& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 like_time = 3;
  inline bool has_like_time() const;
  inline void clear_like_time();
  static const int kLikeTimeFieldNumber = 3;
  inline ::google::protobuf::int32 like_time() const;
  inline void set_like_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ItemLike)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_like_time();
  inline void clear_has_like_time();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 like_time_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ItemLike* default_instance_;
};
// -------------------------------------------------------------------

class ItemShare : public ::google::protobuf::MessageLite {
 public:
  ItemShare();
  virtual ~ItemShare();

  ItemShare(const ItemShare& from);

  inline ItemShare& operator=(const ItemShare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ItemShare& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ItemShare* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ItemShare* other);

  // implements Message ----------------------------------------------

  ItemShare* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ItemShare& from);
  void MergeFrom(const ItemShare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 share_time = 3;
  inline bool has_share_time() const;
  inline void clear_share_time();
  static const int kShareTimeFieldNumber = 3;
  inline ::google::protobuf::int32 share_time() const;
  inline void set_share_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ItemShare)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_share_time();
  inline void clear_has_share_time();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 share_time_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ItemShare* default_instance_;
};
// -------------------------------------------------------------------

class GetDiscoverHomeRequest : public ::google::protobuf::MessageLite {
 public:
  GetDiscoverHomeRequest();
  virtual ~GetDiscoverHomeRequest();

  GetDiscoverHomeRequest(const GetDiscoverHomeRequest& from);

  inline GetDiscoverHomeRequest& operator=(const GetDiscoverHomeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetDiscoverHomeRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetDiscoverHomeRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetDiscoverHomeRequest* other);

  // implements Message ----------------------------------------------

  GetDiscoverHomeRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetDiscoverHomeRequest& from);
  void MergeFrom(const GetDiscoverHomeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes prompt_index = 1;
  inline int prompt_index_size() const;
  inline void clear_prompt_index();
  static const int kPromptIndexFieldNumber = 1;
  inline const ::std::string& prompt_index(int index) const;
  inline ::std::string* mutable_prompt_index(int index);
  inline void set_prompt_index(int index, const ::std::string& value);
  inline void set_prompt_index(int index, const char* value);
  inline void set_prompt_index(int index, const void* value, size_t size);
  inline ::std::string* add_prompt_index();
  inline void add_prompt_index(const ::std::string& value);
  inline void add_prompt_index(const char* value);
  inline void add_prompt_index(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& prompt_index() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_prompt_index();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetDiscoverHomeRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> prompt_index_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetDiscoverHomeRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetDiscoverHomeResponse : public ::google::protobuf::MessageLite {
 public:
  GetDiscoverHomeResponse();
  virtual ~GetDiscoverHomeResponse();

  GetDiscoverHomeResponse(const GetDiscoverHomeResponse& from);

  inline GetDiscoverHomeResponse& operator=(const GetDiscoverHomeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetDiscoverHomeResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetDiscoverHomeResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetDiscoverHomeResponse* other);

  // implements Message ----------------------------------------------

  GetDiscoverHomeResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetDiscoverHomeResponse& from);
  void MergeFrom(const GetDiscoverHomeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.Banner banner = 1;
  inline int banner_size() const;
  inline void clear_banner();
  static const int kBannerFieldNumber = 1;
  inline const ::weizhu::discover_v2::Banner& banner(int index) const;
  inline ::weizhu::discover_v2::Banner* mutable_banner(int index);
  inline ::weizhu::discover_v2::Banner* add_banner();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Banner >&
      banner() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Banner >*
      mutable_banner();

  // repeated .weizhu.discover_v2.Module module = 2;
  inline int module_size() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 2;
  inline const ::weizhu::discover_v2::Module& module(int index) const;
  inline ::weizhu::discover_v2::Module* mutable_module(int index);
  inline ::weizhu::discover_v2::Module* add_module();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Module >&
      module() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Module >*
      mutable_module();

  // repeated .weizhu.discover_v2.Item ref_item = 3;
  inline int ref_item_size() const;
  inline void clear_ref_item();
  static const int kRefItemFieldNumber = 3;
  inline const ::weizhu::discover_v2::Item& ref_item(int index) const;
  inline ::weizhu::discover_v2::Item* mutable_ref_item(int index);
  inline ::weizhu::discover_v2::Item* add_ref_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
      ref_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
      mutable_ref_item();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetDiscoverHomeResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Banner > banner_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Module > module_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item > ref_item_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetDiscoverHomeResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetModuleCategoryItemListRequest : public ::google::protobuf::MessageLite {
 public:
  GetModuleCategoryItemListRequest();
  virtual ~GetModuleCategoryItemListRequest();

  GetModuleCategoryItemListRequest(const GetModuleCategoryItemListRequest& from);

  inline GetModuleCategoryItemListRequest& operator=(const GetModuleCategoryItemListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetModuleCategoryItemListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetModuleCategoryItemListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetModuleCategoryItemListRequest* other);

  // implements Message ----------------------------------------------

  GetModuleCategoryItemListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetModuleCategoryItemListRequest& from);
  void MergeFrom(const GetModuleCategoryItemListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 module_id = 1;
  inline bool has_module_id() const;
  inline void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  inline ::google::protobuf::int32 module_id() const;
  inline void set_module_id(::google::protobuf::int32 value);

  // required int32 category_id = 2;
  inline bool has_category_id() const;
  inline void clear_category_id();
  static const int kCategoryIdFieldNumber = 2;
  inline ::google::protobuf::int32 category_id() const;
  inline void set_category_id(::google::protobuf::int32 value);

  // required int32 item_size = 3;
  inline bool has_item_size() const;
  inline void clear_item_size();
  static const int kItemSizeFieldNumber = 3;
  inline ::google::protobuf::int32 item_size() const;
  inline void set_item_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 4;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 4;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetModuleCategoryItemListRequest)
 private:
  inline void set_has_module_id();
  inline void clear_has_module_id();
  inline void set_has_category_id();
  inline void clear_has_category_id();
  inline void set_has_item_size();
  inline void clear_has_item_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 module_id_;
  ::google::protobuf::int32 category_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 item_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetModuleCategoryItemListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetModuleCategoryItemListResponse : public ::google::protobuf::MessageLite {
 public:
  GetModuleCategoryItemListResponse();
  virtual ~GetModuleCategoryItemListResponse();

  GetModuleCategoryItemListResponse(const GetModuleCategoryItemListResponse& from);

  inline GetModuleCategoryItemListResponse& operator=(const GetModuleCategoryItemListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetModuleCategoryItemListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetModuleCategoryItemListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetModuleCategoryItemListResponse* other);

  // implements Message ----------------------------------------------

  GetModuleCategoryItemListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetModuleCategoryItemListResponse& from);
  void MergeFrom(const GetModuleCategoryItemListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.Item item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::weizhu::discover_v2::Item& item(int index) const;
  inline ::weizhu::discover_v2::Item* mutable_item(int index);
  inline ::weizhu::discover_v2::Item* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
      mutable_item();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // optional bytes prompt_index = 4;
  inline bool has_prompt_index() const;
  inline void clear_prompt_index();
  static const int kPromptIndexFieldNumber = 4;
  inline const ::std::string& prompt_index() const;
  inline void set_prompt_index(const ::std::string& value);
  inline void set_prompt_index(const char* value);
  inline void set_prompt_index(const void* value, size_t size);
  inline ::std::string* mutable_prompt_index();
  inline ::std::string* release_prompt_index();
  inline void set_allocated_prompt_index(::std::string* prompt_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetModuleCategoryItemListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();
  inline void set_has_prompt_index();
  inline void clear_has_prompt_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item > item_;
  ::std::string* offset_index_;
  ::std::string* prompt_index_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetModuleCategoryItemListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetModulePromptIndexRequest : public ::google::protobuf::MessageLite {
 public:
  GetModulePromptIndexRequest();
  virtual ~GetModulePromptIndexRequest();

  GetModulePromptIndexRequest(const GetModulePromptIndexRequest& from);

  inline GetModulePromptIndexRequest& operator=(const GetModulePromptIndexRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetModulePromptIndexRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetModulePromptIndexRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetModulePromptIndexRequest* other);

  // implements Message ----------------------------------------------

  GetModulePromptIndexRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetModulePromptIndexRequest& from);
  void MergeFrom(const GetModulePromptIndexRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 module_id = 1;
  inline bool has_module_id() const;
  inline void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  inline ::google::protobuf::int32 module_id() const;
  inline void set_module_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetModulePromptIndexRequest)
 private:
  inline void set_has_module_id();
  inline void clear_has_module_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 module_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetModulePromptIndexRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetModulePromptIndexResponse : public ::google::protobuf::MessageLite {
 public:
  GetModulePromptIndexResponse();
  virtual ~GetModulePromptIndexResponse();

  GetModulePromptIndexResponse(const GetModulePromptIndexResponse& from);

  inline GetModulePromptIndexResponse& operator=(const GetModulePromptIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetModulePromptIndexResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetModulePromptIndexResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetModulePromptIndexResponse* other);

  // implements Message ----------------------------------------------

  GetModulePromptIndexResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetModulePromptIndexResponse& from);
  void MergeFrom(const GetModulePromptIndexResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes prompt_index = 1;
  inline bool has_prompt_index() const;
  inline void clear_prompt_index();
  static const int kPromptIndexFieldNumber = 1;
  inline const ::std::string& prompt_index() const;
  inline void set_prompt_index(const ::std::string& value);
  inline void set_prompt_index(const char* value);
  inline void set_prompt_index(const void* value, size_t size);
  inline ::std::string* mutable_prompt_index();
  inline ::std::string* release_prompt_index();
  inline void set_allocated_prompt_index(::std::string* prompt_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetModulePromptIndexResponse)
 private:
  inline void set_has_prompt_index();
  inline void clear_has_prompt_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* prompt_index_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetModulePromptIndexResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemByIdRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemByIdRequest();
  virtual ~GetItemByIdRequest();

  GetItemByIdRequest(const GetItemByIdRequest& from);

  inline GetItemByIdRequest& operator=(const GetItemByIdRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemByIdRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemByIdRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemByIdRequest* other);

  // implements Message ----------------------------------------------

  GetItemByIdRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemByIdRequest& from);
  void MergeFrom(const GetItemByIdRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 item_id = 1;
  inline int item_id_size() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id(int index) const;
  inline void set_item_id(int index, ::google::protobuf::int64 value);
  inline void add_item_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      item_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_item_id();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemByIdRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > item_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemByIdRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemByIdResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemByIdResponse();
  virtual ~GetItemByIdResponse();

  GetItemByIdResponse(const GetItemByIdResponse& from);

  inline GetItemByIdResponse& operator=(const GetItemByIdResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemByIdResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemByIdResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemByIdResponse* other);

  // implements Message ----------------------------------------------

  GetItemByIdResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemByIdResponse& from);
  void MergeFrom(const GetItemByIdResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.Item item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::weizhu::discover_v2::Item& item(int index) const;
  inline ::weizhu::discover_v2::Item* mutable_item(int index);
  inline ::weizhu::discover_v2::Item* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemByIdResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item > item_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemByIdResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemLearnListRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemLearnListRequest();
  virtual ~GetItemLearnListRequest();

  GetItemLearnListRequest(const GetItemLearnListRequest& from);

  inline GetItemLearnListRequest& operator=(const GetItemLearnListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemLearnListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemLearnListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemLearnListRequest* other);

  // implements Message ----------------------------------------------

  GetItemLearnListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemLearnListRequest& from);
  void MergeFrom(const GetItemLearnListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemLearnListRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemLearnListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemLearnListResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemLearnListResponse();
  virtual ~GetItemLearnListResponse();

  GetItemLearnListResponse(const GetItemLearnListResponse& from);

  inline GetItemLearnListResponse& operator=(const GetItemLearnListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemLearnListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemLearnListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemLearnListResponse* other);

  // implements Message ----------------------------------------------

  GetItemLearnListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemLearnListResponse& from);
  void MergeFrom(const GetItemLearnListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemLearn item_learn = 1;
  inline int item_learn_size() const;
  inline void clear_item_learn();
  static const int kItemLearnFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemLearn& item_learn(int index) const;
  inline ::weizhu::discover_v2::ItemLearn* mutable_item_learn(int index);
  inline ::weizhu::discover_v2::ItemLearn* add_item_learn();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >&
      item_learn() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >*
      mutable_item_learn();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // optional int32 item_learn_cnt = 4;
  inline bool has_item_learn_cnt() const;
  inline void clear_item_learn_cnt();
  static const int kItemLearnCntFieldNumber = 4;
  inline ::google::protobuf::int32 item_learn_cnt() const;
  inline void set_item_learn_cnt(::google::protobuf::int32 value);

  // optional int32 item_learn_user_cnt = 5;
  inline bool has_item_learn_user_cnt() const;
  inline void clear_item_learn_user_cnt();
  static const int kItemLearnUserCntFieldNumber = 5;
  inline ::google::protobuf::int32 item_learn_user_cnt() const;
  inline void set_item_learn_user_cnt(::google::protobuf::int32 value);

  // optional .weizhu.discover_v2.ItemLearn user_item_learn = 6;
  inline bool has_user_item_learn() const;
  inline void clear_user_item_learn();
  static const int kUserItemLearnFieldNumber = 6;
  inline const ::weizhu::discover_v2::ItemLearn& user_item_learn() const;
  inline ::weizhu::discover_v2::ItemLearn* mutable_user_item_learn();
  inline ::weizhu::discover_v2::ItemLearn* release_user_item_learn();
  inline void set_allocated_user_item_learn(::weizhu::discover_v2::ItemLearn* user_item_learn);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemLearnListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();
  inline void set_has_item_learn_cnt();
  inline void clear_has_item_learn_cnt();
  inline void set_has_item_learn_user_cnt();
  inline void clear_has_item_learn_user_cnt();
  inline void set_has_user_item_learn();
  inline void clear_has_user_item_learn();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn > item_learn_;
  ::std::string* offset_index_;
  bool has_more_;
  ::google::protobuf::int32 item_learn_cnt_;
  ::weizhu::discover_v2::ItemLearn* user_item_learn_;
  ::google::protobuf::int32 item_learn_user_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemLearnListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserLearnListRequest : public ::google::protobuf::MessageLite {
 public:
  GetUserLearnListRequest();
  virtual ~GetUserLearnListRequest();

  GetUserLearnListRequest(const GetUserLearnListRequest& from);

  inline GetUserLearnListRequest& operator=(const GetUserLearnListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserLearnListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserLearnListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserLearnListRequest* other);

  // implements Message ----------------------------------------------

  GetUserLearnListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserLearnListRequest& from);
  void MergeFrom(const GetUserLearnListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserLearnListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserLearnListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserLearnListResponse : public ::google::protobuf::MessageLite {
 public:
  GetUserLearnListResponse();
  virtual ~GetUserLearnListResponse();

  GetUserLearnListResponse(const GetUserLearnListResponse& from);

  inline GetUserLearnListResponse& operator=(const GetUserLearnListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserLearnListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserLearnListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserLearnListResponse* other);

  // implements Message ----------------------------------------------

  GetUserLearnListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserLearnListResponse& from);
  void MergeFrom(const GetUserLearnListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemLearn item_learn = 1;
  inline int item_learn_size() const;
  inline void clear_item_learn();
  static const int kItemLearnFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemLearn& item_learn(int index) const;
  inline ::weizhu::discover_v2::ItemLearn* mutable_item_learn(int index);
  inline ::weizhu::discover_v2::ItemLearn* add_item_learn();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >&
      item_learn() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >*
      mutable_item_learn();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // repeated .weizhu.discover_v2.Item ref_item = 4;
  inline int ref_item_size() const;
  inline void clear_ref_item();
  static const int kRefItemFieldNumber = 4;
  inline const ::weizhu::discover_v2::Item& ref_item(int index) const;
  inline ::weizhu::discover_v2::Item* mutable_ref_item(int index);
  inline ::weizhu::discover_v2::Item* add_ref_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
      ref_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
      mutable_ref_item();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserLearnListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn > item_learn_;
  ::std::string* offset_index_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item > ref_item_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserLearnListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemCommentListRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemCommentListRequest();
  virtual ~GetItemCommentListRequest();

  GetItemCommentListRequest(const GetItemCommentListRequest& from);

  inline GetItemCommentListRequest& operator=(const GetItemCommentListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemCommentListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemCommentListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemCommentListRequest* other);

  // implements Message ----------------------------------------------

  GetItemCommentListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemCommentListRequest& from);
  void MergeFrom(const GetItemCommentListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemCommentListRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemCommentListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemCommentListResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemCommentListResponse();
  virtual ~GetItemCommentListResponse();

  GetItemCommentListResponse(const GetItemCommentListResponse& from);

  inline GetItemCommentListResponse& operator=(const GetItemCommentListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemCommentListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemCommentListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemCommentListResponse* other);

  // implements Message ----------------------------------------------

  GetItemCommentListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemCommentListResponse& from);
  void MergeFrom(const GetItemCommentListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemComment item_comment = 1;
  inline int item_comment_size() const;
  inline void clear_item_comment();
  static const int kItemCommentFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemComment& item_comment(int index) const;
  inline ::weizhu::discover_v2::ItemComment* mutable_item_comment(int index);
  inline ::weizhu::discover_v2::ItemComment* add_item_comment();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemComment >&
      item_comment() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemComment >*
      mutable_item_comment();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // optional int32 item_comment_cnt = 4;
  inline bool has_item_comment_cnt() const;
  inline void clear_item_comment_cnt();
  static const int kItemCommentCntFieldNumber = 4;
  inline ::google::protobuf::int32 item_comment_cnt() const;
  inline void set_item_comment_cnt(::google::protobuf::int32 value);

  // optional int32 item_comment_user_cnt = 5;
  inline bool has_item_comment_user_cnt() const;
  inline void clear_item_comment_user_cnt();
  static const int kItemCommentUserCntFieldNumber = 5;
  inline ::google::protobuf::int32 item_comment_user_cnt() const;
  inline void set_item_comment_user_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemCommentListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();
  inline void set_has_item_comment_cnt();
  inline void clear_has_item_comment_cnt();
  inline void set_has_item_comment_user_cnt();
  inline void clear_has_item_comment_user_cnt();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemComment > item_comment_;
  ::std::string* offset_index_;
  bool has_more_;
  ::google::protobuf::int32 item_comment_cnt_;
  ::google::protobuf::int32 item_comment_user_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemCommentListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserCommentListRequest : public ::google::protobuf::MessageLite {
 public:
  GetUserCommentListRequest();
  virtual ~GetUserCommentListRequest();

  GetUserCommentListRequest(const GetUserCommentListRequest& from);

  inline GetUserCommentListRequest& operator=(const GetUserCommentListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserCommentListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserCommentListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserCommentListRequest* other);

  // implements Message ----------------------------------------------

  GetUserCommentListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserCommentListRequest& from);
  void MergeFrom(const GetUserCommentListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserCommentListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserCommentListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserCommentListResponse : public ::google::protobuf::MessageLite {
 public:
  GetUserCommentListResponse();
  virtual ~GetUserCommentListResponse();

  GetUserCommentListResponse(const GetUserCommentListResponse& from);

  inline GetUserCommentListResponse& operator=(const GetUserCommentListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserCommentListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserCommentListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserCommentListResponse* other);

  // implements Message ----------------------------------------------

  GetUserCommentListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserCommentListResponse& from);
  void MergeFrom(const GetUserCommentListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemComment item_comment = 1;
  inline int item_comment_size() const;
  inline void clear_item_comment();
  static const int kItemCommentFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemComment& item_comment(int index) const;
  inline ::weizhu::discover_v2::ItemComment* mutable_item_comment(int index);
  inline ::weizhu::discover_v2::ItemComment* add_item_comment();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemComment >&
      item_comment() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemComment >*
      mutable_item_comment();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // repeated .weizhu.discover_v2.Item ref_item = 4;
  inline int ref_item_size() const;
  inline void clear_ref_item();
  static const int kRefItemFieldNumber = 4;
  inline const ::weizhu::discover_v2::Item& ref_item(int index) const;
  inline ::weizhu::discover_v2::Item* mutable_ref_item(int index);
  inline ::weizhu::discover_v2::Item* add_ref_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
      ref_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
      mutable_ref_item();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserCommentListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemComment > item_comment_;
  ::std::string* offset_index_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item > ref_item_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserCommentListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemScoreListRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemScoreListRequest();
  virtual ~GetItemScoreListRequest();

  GetItemScoreListRequest(const GetItemScoreListRequest& from);

  inline GetItemScoreListRequest& operator=(const GetItemScoreListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemScoreListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemScoreListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemScoreListRequest* other);

  // implements Message ----------------------------------------------

  GetItemScoreListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemScoreListRequest& from);
  void MergeFrom(const GetItemScoreListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemScoreListRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemScoreListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemScoreListResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemScoreListResponse();
  virtual ~GetItemScoreListResponse();

  GetItemScoreListResponse(const GetItemScoreListResponse& from);

  inline GetItemScoreListResponse& operator=(const GetItemScoreListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemScoreListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemScoreListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemScoreListResponse* other);

  // implements Message ----------------------------------------------

  GetItemScoreListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemScoreListResponse& from);
  void MergeFrom(const GetItemScoreListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemScore item_score = 1;
  inline int item_score_size() const;
  inline void clear_item_score();
  static const int kItemScoreFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemScore& item_score(int index) const;
  inline ::weizhu::discover_v2::ItemScore* mutable_item_score(int index);
  inline ::weizhu::discover_v2::ItemScore* add_item_score();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemScore >&
      item_score() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemScore >*
      mutable_item_score();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // optional int32 item_score_number = 4;
  inline bool has_item_score_number() const;
  inline void clear_item_score_number();
  static const int kItemScoreNumberFieldNumber = 4;
  inline ::google::protobuf::int32 item_score_number() const;
  inline void set_item_score_number(::google::protobuf::int32 value);

  // optional int32 item_score_user_cnt = 5;
  inline bool has_item_score_user_cnt() const;
  inline void clear_item_score_user_cnt();
  static const int kItemScoreUserCntFieldNumber = 5;
  inline ::google::protobuf::int32 item_score_user_cnt() const;
  inline void set_item_score_user_cnt(::google::protobuf::int32 value);

  // optional .weizhu.discover_v2.ItemScore user_item_score = 6;
  inline bool has_user_item_score() const;
  inline void clear_user_item_score();
  static const int kUserItemScoreFieldNumber = 6;
  inline const ::weizhu::discover_v2::ItemScore& user_item_score() const;
  inline ::weizhu::discover_v2::ItemScore* mutable_user_item_score();
  inline ::weizhu::discover_v2::ItemScore* release_user_item_score();
  inline void set_allocated_user_item_score(::weizhu::discover_v2::ItemScore* user_item_score);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemScoreListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();
  inline void set_has_item_score_number();
  inline void clear_has_item_score_number();
  inline void set_has_item_score_user_cnt();
  inline void clear_has_item_score_user_cnt();
  inline void set_has_user_item_score();
  inline void clear_has_user_item_score();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemScore > item_score_;
  ::std::string* offset_index_;
  bool has_more_;
  ::google::protobuf::int32 item_score_number_;
  ::weizhu::discover_v2::ItemScore* user_item_score_;
  ::google::protobuf::int32 item_score_user_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemScoreListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserScoreListRequest : public ::google::protobuf::MessageLite {
 public:
  GetUserScoreListRequest();
  virtual ~GetUserScoreListRequest();

  GetUserScoreListRequest(const GetUserScoreListRequest& from);

  inline GetUserScoreListRequest& operator=(const GetUserScoreListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserScoreListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserScoreListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserScoreListRequest* other);

  // implements Message ----------------------------------------------

  GetUserScoreListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserScoreListRequest& from);
  void MergeFrom(const GetUserScoreListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserScoreListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserScoreListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserScoreListResponse : public ::google::protobuf::MessageLite {
 public:
  GetUserScoreListResponse();
  virtual ~GetUserScoreListResponse();

  GetUserScoreListResponse(const GetUserScoreListResponse& from);

  inline GetUserScoreListResponse& operator=(const GetUserScoreListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserScoreListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserScoreListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserScoreListResponse* other);

  // implements Message ----------------------------------------------

  GetUserScoreListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserScoreListResponse& from);
  void MergeFrom(const GetUserScoreListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemScore item_score = 1;
  inline int item_score_size() const;
  inline void clear_item_score();
  static const int kItemScoreFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemScore& item_score(int index) const;
  inline ::weizhu::discover_v2::ItemScore* mutable_item_score(int index);
  inline ::weizhu::discover_v2::ItemScore* add_item_score();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemScore >&
      item_score() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemScore >*
      mutable_item_score();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // repeated .weizhu.discover_v2.Item ref_item = 4;
  inline int ref_item_size() const;
  inline void clear_ref_item();
  static const int kRefItemFieldNumber = 4;
  inline const ::weizhu::discover_v2::Item& ref_item(int index) const;
  inline ::weizhu::discover_v2::Item* mutable_ref_item(int index);
  inline ::weizhu::discover_v2::Item* add_ref_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
      ref_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
      mutable_ref_item();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserScoreListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemScore > item_score_;
  ::std::string* offset_index_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item > ref_item_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserScoreListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemLikeListRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemLikeListRequest();
  virtual ~GetItemLikeListRequest();

  GetItemLikeListRequest(const GetItemLikeListRequest& from);

  inline GetItemLikeListRequest& operator=(const GetItemLikeListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemLikeListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemLikeListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemLikeListRequest* other);

  // implements Message ----------------------------------------------

  GetItemLikeListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemLikeListRequest& from);
  void MergeFrom(const GetItemLikeListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemLikeListRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemLikeListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemLikeListResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemLikeListResponse();
  virtual ~GetItemLikeListResponse();

  GetItemLikeListResponse(const GetItemLikeListResponse& from);

  inline GetItemLikeListResponse& operator=(const GetItemLikeListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemLikeListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemLikeListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemLikeListResponse* other);

  // implements Message ----------------------------------------------

  GetItemLikeListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemLikeListResponse& from);
  void MergeFrom(const GetItemLikeListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemLike item_like = 1;
  inline int item_like_size() const;
  inline void clear_item_like();
  static const int kItemLikeFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemLike& item_like(int index) const;
  inline ::weizhu::discover_v2::ItemLike* mutable_item_like(int index);
  inline ::weizhu::discover_v2::ItemLike* add_item_like();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLike >&
      item_like() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLike >*
      mutable_item_like();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // optional int32 item_like_cnt = 4;
  inline bool has_item_like_cnt() const;
  inline void clear_item_like_cnt();
  static const int kItemLikeCntFieldNumber = 4;
  inline ::google::protobuf::int32 item_like_cnt() const;
  inline void set_item_like_cnt(::google::protobuf::int32 value);

  // optional .weizhu.discover_v2.ItemLike user_item_like = 5;
  inline bool has_user_item_like() const;
  inline void clear_user_item_like();
  static const int kUserItemLikeFieldNumber = 5;
  inline const ::weizhu::discover_v2::ItemLike& user_item_like() const;
  inline ::weizhu::discover_v2::ItemLike* mutable_user_item_like();
  inline ::weizhu::discover_v2::ItemLike* release_user_item_like();
  inline void set_allocated_user_item_like(::weizhu::discover_v2::ItemLike* user_item_like);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemLikeListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();
  inline void set_has_item_like_cnt();
  inline void clear_has_item_like_cnt();
  inline void set_has_user_item_like();
  inline void clear_has_user_item_like();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLike > item_like_;
  ::std::string* offset_index_;
  bool has_more_;
  ::google::protobuf::int32 item_like_cnt_;
  ::weizhu::discover_v2::ItemLike* user_item_like_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemLikeListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserLikeListRequest : public ::google::protobuf::MessageLite {
 public:
  GetUserLikeListRequest();
  virtual ~GetUserLikeListRequest();

  GetUserLikeListRequest(const GetUserLikeListRequest& from);

  inline GetUserLikeListRequest& operator=(const GetUserLikeListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserLikeListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserLikeListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserLikeListRequest* other);

  // implements Message ----------------------------------------------

  GetUserLikeListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserLikeListRequest& from);
  void MergeFrom(const GetUserLikeListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserLikeListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserLikeListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserLikeListResponse : public ::google::protobuf::MessageLite {
 public:
  GetUserLikeListResponse();
  virtual ~GetUserLikeListResponse();

  GetUserLikeListResponse(const GetUserLikeListResponse& from);

  inline GetUserLikeListResponse& operator=(const GetUserLikeListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserLikeListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserLikeListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserLikeListResponse* other);

  // implements Message ----------------------------------------------

  GetUserLikeListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserLikeListResponse& from);
  void MergeFrom(const GetUserLikeListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemLike item_like = 1;
  inline int item_like_size() const;
  inline void clear_item_like();
  static const int kItemLikeFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemLike& item_like(int index) const;
  inline ::weizhu::discover_v2::ItemLike* mutable_item_like(int index);
  inline ::weizhu::discover_v2::ItemLike* add_item_like();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLike >&
      item_like() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLike >*
      mutable_item_like();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // repeated .weizhu.discover_v2.Item ref_item = 4;
  inline int ref_item_size() const;
  inline void clear_ref_item();
  static const int kRefItemFieldNumber = 4;
  inline const ::weizhu::discover_v2::Item& ref_item(int index) const;
  inline ::weizhu::discover_v2::Item* mutable_ref_item(int index);
  inline ::weizhu::discover_v2::Item* add_ref_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
      ref_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
      mutable_ref_item();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserLikeListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLike > item_like_;
  ::std::string* offset_index_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item > ref_item_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserLikeListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemShareListRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemShareListRequest();
  virtual ~GetItemShareListRequest();

  GetItemShareListRequest(const GetItemShareListRequest& from);

  inline GetItemShareListRequest& operator=(const GetItemShareListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemShareListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemShareListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemShareListRequest* other);

  // implements Message ----------------------------------------------

  GetItemShareListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemShareListRequest& from);
  void MergeFrom(const GetItemShareListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemShareListRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemShareListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemShareListResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemShareListResponse();
  virtual ~GetItemShareListResponse();

  GetItemShareListResponse(const GetItemShareListResponse& from);

  inline GetItemShareListResponse& operator=(const GetItemShareListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemShareListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemShareListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemShareListResponse* other);

  // implements Message ----------------------------------------------

  GetItemShareListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemShareListResponse& from);
  void MergeFrom(const GetItemShareListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemShare item_share = 1;
  inline int item_share_size() const;
  inline void clear_item_share();
  static const int kItemShareFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemShare& item_share(int index) const;
  inline ::weizhu::discover_v2::ItemShare* mutable_item_share(int index);
  inline ::weizhu::discover_v2::ItemShare* add_item_share();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemShare >&
      item_share() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemShare >*
      mutable_item_share();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // optional int32 item_share_cnt = 4;
  inline bool has_item_share_cnt() const;
  inline void clear_item_share_cnt();
  static const int kItemShareCntFieldNumber = 4;
  inline ::google::protobuf::int32 item_share_cnt() const;
  inline void set_item_share_cnt(::google::protobuf::int32 value);

  // optional .weizhu.discover_v2.ItemShare user_item_share = 5;
  inline bool has_user_item_share() const;
  inline void clear_user_item_share();
  static const int kUserItemShareFieldNumber = 5;
  inline const ::weizhu::discover_v2::ItemShare& user_item_share() const;
  inline ::weizhu::discover_v2::ItemShare* mutable_user_item_share();
  inline ::weizhu::discover_v2::ItemShare* release_user_item_share();
  inline void set_allocated_user_item_share(::weizhu::discover_v2::ItemShare* user_item_share);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemShareListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();
  inline void set_has_item_share_cnt();
  inline void clear_has_item_share_cnt();
  inline void set_has_user_item_share();
  inline void clear_has_user_item_share();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemShare > item_share_;
  ::std::string* offset_index_;
  bool has_more_;
  ::google::protobuf::int32 item_share_cnt_;
  ::weizhu::discover_v2::ItemShare* user_item_share_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemShareListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserShareListRequest : public ::google::protobuf::MessageLite {
 public:
  GetUserShareListRequest();
  virtual ~GetUserShareListRequest();

  GetUserShareListRequest(const GetUserShareListRequest& from);

  inline GetUserShareListRequest& operator=(const GetUserShareListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserShareListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserShareListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserShareListRequest* other);

  // implements Message ----------------------------------------------

  GetUserShareListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserShareListRequest& from);
  void MergeFrom(const GetUserShareListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserShareListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserShareListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserShareListResponse : public ::google::protobuf::MessageLite {
 public:
  GetUserShareListResponse();
  virtual ~GetUserShareListResponse();

  GetUserShareListResponse(const GetUserShareListResponse& from);

  inline GetUserShareListResponse& operator=(const GetUserShareListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserShareListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserShareListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserShareListResponse* other);

  // implements Message ----------------------------------------------

  GetUserShareListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserShareListResponse& from);
  void MergeFrom(const GetUserShareListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemShare item_share = 1;
  inline int item_share_size() const;
  inline void clear_item_share();
  static const int kItemShareFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemShare& item_share(int index) const;
  inline ::weizhu::discover_v2::ItemShare* mutable_item_share(int index);
  inline ::weizhu::discover_v2::ItemShare* add_item_share();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemShare >&
      item_share() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemShare >*
      mutable_item_share();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // repeated .weizhu.discover_v2.Item ref_item = 4;
  inline int ref_item_size() const;
  inline void clear_ref_item();
  static const int kRefItemFieldNumber = 4;
  inline const ::weizhu::discover_v2::Item& ref_item(int index) const;
  inline ::weizhu::discover_v2::Item* mutable_ref_item(int index);
  inline ::weizhu::discover_v2::Item* add_ref_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
      ref_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
      mutable_ref_item();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserShareListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemShare > item_share_;
  ::std::string* offset_index_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item > ref_item_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserShareListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserDiscoverRequest : public ::google::protobuf::MessageLite {
 public:
  GetUserDiscoverRequest();
  virtual ~GetUserDiscoverRequest();

  GetUserDiscoverRequest(const GetUserDiscoverRequest& from);

  inline GetUserDiscoverRequest& operator=(const GetUserDiscoverRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserDiscoverRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserDiscoverRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserDiscoverRequest* other);

  // implements Message ----------------------------------------------

  GetUserDiscoverRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserDiscoverRequest& from);
  void MergeFrom(const GetUserDiscoverRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserDiscoverRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserDiscoverRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserDiscoverResponse : public ::google::protobuf::MessageLite {
 public:
  GetUserDiscoverResponse();
  virtual ~GetUserDiscoverResponse();

  GetUserDiscoverResponse(const GetUserDiscoverResponse& from);

  inline GetUserDiscoverResponse& operator=(const GetUserDiscoverResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetUserDiscoverResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUserDiscoverResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUserDiscoverResponse* other);

  // implements Message ----------------------------------------------

  GetUserDiscoverResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetUserDiscoverResponse& from);
  void MergeFrom(const GetUserDiscoverResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 week_learn_cnt = 1;
  inline bool has_week_learn_cnt() const;
  inline void clear_week_learn_cnt();
  static const int kWeekLearnCntFieldNumber = 1;
  inline ::google::protobuf::int32 week_learn_cnt() const;
  inline void set_week_learn_cnt(::google::protobuf::int32 value);

  // required int32 week_learn_duration = 2;
  inline bool has_week_learn_duration() const;
  inline void clear_week_learn_duration();
  static const int kWeekLearnDurationFieldNumber = 2;
  inline ::google::protobuf::int32 week_learn_duration() const;
  inline void set_week_learn_duration(::google::protobuf::int32 value);

  // required int32 week_learn_item_cnt = 3;
  inline bool has_week_learn_item_cnt() const;
  inline void clear_week_learn_item_cnt();
  static const int kWeekLearnItemCntFieldNumber = 3;
  inline ::google::protobuf::int32 week_learn_item_cnt() const;
  inline void set_week_learn_item_cnt(::google::protobuf::int32 value);

  // required int32 week_comment_cnt = 4;
  inline bool has_week_comment_cnt() const;
  inline void clear_week_comment_cnt();
  static const int kWeekCommentCntFieldNumber = 4;
  inline ::google::protobuf::int32 week_comment_cnt() const;
  inline void set_week_comment_cnt(::google::protobuf::int32 value);

  // required int32 week_comment_item_cnt = 5;
  inline bool has_week_comment_item_cnt() const;
  inline void clear_week_comment_item_cnt();
  static const int kWeekCommentItemCntFieldNumber = 5;
  inline ::google::protobuf::int32 week_comment_item_cnt() const;
  inline void set_week_comment_item_cnt(::google::protobuf::int32 value);

  // required int32 week_score_item_cnt = 6;
  inline bool has_week_score_item_cnt() const;
  inline void clear_week_score_item_cnt();
  static const int kWeekScoreItemCntFieldNumber = 6;
  inline ::google::protobuf::int32 week_score_item_cnt() const;
  inline void set_week_score_item_cnt(::google::protobuf::int32 value);

  // required int32 week_like_item_cnt = 7;
  inline bool has_week_like_item_cnt() const;
  inline void clear_week_like_item_cnt();
  static const int kWeekLikeItemCntFieldNumber = 7;
  inline ::google::protobuf::int32 week_like_item_cnt() const;
  inline void set_week_like_item_cnt(::google::protobuf::int32 value);

  // required int32 week_share_item_cnt = 8;
  inline bool has_week_share_item_cnt() const;
  inline void clear_week_share_item_cnt();
  static const int kWeekShareItemCntFieldNumber = 8;
  inline ::google::protobuf::int32 week_share_item_cnt() const;
  inline void set_week_share_item_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetUserDiscoverResponse)
 private:
  inline void set_has_week_learn_cnt();
  inline void clear_has_week_learn_cnt();
  inline void set_has_week_learn_duration();
  inline void clear_has_week_learn_duration();
  inline void set_has_week_learn_item_cnt();
  inline void clear_has_week_learn_item_cnt();
  inline void set_has_week_comment_cnt();
  inline void clear_has_week_comment_cnt();
  inline void set_has_week_comment_item_cnt();
  inline void clear_has_week_comment_item_cnt();
  inline void set_has_week_score_item_cnt();
  inline void clear_has_week_score_item_cnt();
  inline void set_has_week_like_item_cnt();
  inline void clear_has_week_like_item_cnt();
  inline void set_has_week_share_item_cnt();
  inline void clear_has_week_share_item_cnt();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 week_learn_cnt_;
  ::google::protobuf::int32 week_learn_duration_;
  ::google::protobuf::int32 week_learn_item_cnt_;
  ::google::protobuf::int32 week_comment_cnt_;
  ::google::protobuf::int32 week_comment_item_cnt_;
  ::google::protobuf::int32 week_score_item_cnt_;
  ::google::protobuf::int32 week_like_item_cnt_;
  ::google::protobuf::int32 week_share_item_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetUserDiscoverResponse* default_instance_;
};
// -------------------------------------------------------------------

class SearchItemRequest : public ::google::protobuf::MessageLite {
 public:
  SearchItemRequest();
  virtual ~SearchItemRequest();

  SearchItemRequest(const SearchItemRequest& from);

  inline SearchItemRequest& operator=(const SearchItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SearchItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SearchItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SearchItemRequest* other);

  // implements Message ----------------------------------------------

  SearchItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SearchItemRequest& from);
  void MergeFrom(const SearchItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string keyword = 1;
  inline bool has_keyword() const;
  inline void clear_keyword();
  static const int kKeywordFieldNumber = 1;
  inline const ::std::string& keyword() const;
  inline void set_keyword(const ::std::string& value);
  inline void set_keyword(const char* value);
  inline void set_keyword(const char* value, size_t size);
  inline ::std::string* mutable_keyword();
  inline ::std::string* release_keyword();
  inline void set_allocated_keyword(::std::string* keyword);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.SearchItemRequest)
 private:
  inline void set_has_keyword();
  inline void clear_has_keyword();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* keyword_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static SearchItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class SearchItemResponse : public ::google::protobuf::MessageLite {
 public:
  SearchItemResponse();
  virtual ~SearchItemResponse();

  SearchItemResponse(const SearchItemResponse& from);

  inline SearchItemResponse& operator=(const SearchItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SearchItemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SearchItemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SearchItemResponse* other);

  // implements Message ----------------------------------------------

  SearchItemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SearchItemResponse& from);
  void MergeFrom(const SearchItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.Item item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::weizhu::discover_v2::Item& item(int index) const;
  inline ::weizhu::discover_v2::Item* mutable_item(int index);
  inline ::weizhu::discover_v2::Item* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.SearchItemResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item > item_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static SearchItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetItemListRequest : public ::google::protobuf::MessageLite {
 public:
  GetItemListRequest();
  virtual ~GetItemListRequest();

  GetItemListRequest(const GetItemListRequest& from);

  inline GetItemListRequest& operator=(const GetItemListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemListRequest* other);

  // implements Message ----------------------------------------------

  GetItemListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemListRequest& from);
  void MergeFrom(const GetItemListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 item_size = 1;
  inline bool has_item_size() const;
  inline void clear_item_size();
  static const int kItemSizeFieldNumber = 1;
  inline ::google::protobuf::int32 item_size() const;
  inline void set_item_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 2;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 2;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemListRequest)
 private:
  inline void set_has_item_size();
  inline void clear_has_item_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* offset_index_;
  ::google::protobuf::int32 item_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetItemListResponse : public ::google::protobuf::MessageLite {
 public:
  GetItemListResponse();
  virtual ~GetItemListResponse();

  GetItemListResponse(const GetItemListResponse& from);

  inline GetItemListResponse& operator=(const GetItemListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetItemListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetItemListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetItemListResponse* other);

  // implements Message ----------------------------------------------

  GetItemListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetItemListResponse& from);
  void MergeFrom(const GetItemListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.Item item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::weizhu::discover_v2::Item& item(int index) const;
  inline ::weizhu::discover_v2::Item* mutable_item(int index);
  inline ::weizhu::discover_v2::Item* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
      mutable_item();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // required bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.GetItemListResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item > item_;
  ::std::string* offset_index_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static GetItemListResponse* default_instance_;
};
// -------------------------------------------------------------------

class LearnItemRequest : public ::google::protobuf::MessageLite {
 public:
  LearnItemRequest();
  virtual ~LearnItemRequest();

  LearnItemRequest(const LearnItemRequest& from);

  inline LearnItemRequest& operator=(const LearnItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const LearnItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LearnItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LearnItemRequest* other);

  // implements Message ----------------------------------------------

  LearnItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LearnItemRequest& from);
  void MergeFrom(const LearnItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int32 learn_duration = 2;
  inline bool has_learn_duration() const;
  inline void clear_learn_duration();
  static const int kLearnDurationFieldNumber = 2;
  inline ::google::protobuf::int32 learn_duration() const;
  inline void set_learn_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.LearnItemRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_learn_duration();
  inline void clear_has_learn_duration();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int32 learn_duration_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static LearnItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class LearnItemResponse : public ::google::protobuf::MessageLite {
 public:
  LearnItemResponse();
  virtual ~LearnItemResponse();

  LearnItemResponse(const LearnItemResponse& from);

  inline LearnItemResponse& operator=(const LearnItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const LearnItemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LearnItemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LearnItemResponse* other);

  // implements Message ----------------------------------------------

  LearnItemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LearnItemResponse& from);
  void MergeFrom(const LearnItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef LearnItemResponse_Result Result;
  static const Result SUCC = LearnItemResponse_Result_SUCC;
  static const Result FAIL_DURATION_INVALID = LearnItemResponse_Result_FAIL_DURATION_INVALID;
  static const Result FAIL_ITEM_NOT_EXSIT = LearnItemResponse_Result_FAIL_ITEM_NOT_EXSIT;
  static const Result FAIL_UNKNOWN = LearnItemResponse_Result_FAIL_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return LearnItemResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    LearnItemResponse_Result_Result_MIN;
  static const Result Result_MAX =
    LearnItemResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    LearnItemResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .weizhu.discover_v2.LearnItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::discover_v2::LearnItemResponse_Result result() const;
  inline void set_result(::weizhu::discover_v2::LearnItemResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.LearnItemResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  int result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static LearnItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class ReportLearnItemRequest : public ::google::protobuf::MessageLite {
 public:
  ReportLearnItemRequest();
  virtual ~ReportLearnItemRequest();

  ReportLearnItemRequest(const ReportLearnItemRequest& from);

  inline ReportLearnItemRequest& operator=(const ReportLearnItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ReportLearnItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ReportLearnItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ReportLearnItemRequest* other);

  // implements Message ----------------------------------------------

  ReportLearnItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ReportLearnItemRequest& from);
  void MergeFrom(const ReportLearnItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.discover_v2.ItemLearn item_learn = 1;
  inline int item_learn_size() const;
  inline void clear_item_learn();
  static const int kItemLearnFieldNumber = 1;
  inline const ::weizhu::discover_v2::ItemLearn& item_learn(int index) const;
  inline ::weizhu::discover_v2::ItemLearn* mutable_item_learn(int index);
  inline ::weizhu::discover_v2::ItemLearn* add_item_learn();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >&
      item_learn() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >*
      mutable_item_learn();

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ReportLearnItemRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn > item_learn_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ReportLearnItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class CommentItemRequest : public ::google::protobuf::MessageLite {
 public:
  CommentItemRequest();
  virtual ~CommentItemRequest();

  CommentItemRequest(const CommentItemRequest& from);

  inline CommentItemRequest& operator=(const CommentItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CommentItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CommentItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CommentItemRequest* other);

  // implements Message ----------------------------------------------

  CommentItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CommentItemRequest& from);
  void MergeFrom(const CommentItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required string comment_text = 2;
  inline bool has_comment_text() const;
  inline void clear_comment_text();
  static const int kCommentTextFieldNumber = 2;
  inline const ::std::string& comment_text() const;
  inline void set_comment_text(const ::std::string& value);
  inline void set_comment_text(const char* value);
  inline void set_comment_text(const char* value, size_t size);
  inline ::std::string* mutable_comment_text();
  inline ::std::string* release_comment_text();
  inline void set_allocated_comment_text(::std::string* comment_text);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.CommentItemRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_comment_text();
  inline void clear_has_comment_text();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::std::string* comment_text_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static CommentItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class CommentItemResponse : public ::google::protobuf::MessageLite {
 public:
  CommentItemResponse();
  virtual ~CommentItemResponse();

  CommentItemResponse(const CommentItemResponse& from);

  inline CommentItemResponse& operator=(const CommentItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CommentItemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CommentItemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CommentItemResponse* other);

  // implements Message ----------------------------------------------

  CommentItemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CommentItemResponse& from);
  void MergeFrom(const CommentItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef CommentItemResponse_Result Result;
  static const Result SUCC = CommentItemResponse_Result_SUCC;
  static const Result FAIL_CONTENT_INVALID = CommentItemResponse_Result_FAIL_CONTENT_INVALID;
  static const Result FAIL_ITEM_NOT_EXSIT = CommentItemResponse_Result_FAIL_ITEM_NOT_EXSIT;
  static const Result FAIL_ITEM_DISABLE = CommentItemResponse_Result_FAIL_ITEM_DISABLE;
  static const Result FAIL_UNKNOWN = CommentItemResponse_Result_FAIL_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return CommentItemResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CommentItemResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CommentItemResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CommentItemResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .weizhu.discover_v2.CommentItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::discover_v2::CommentItemResponse_Result result() const;
  inline void set_result(::weizhu::discover_v2::CommentItemResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // optional int64 comment_id = 3;
  inline bool has_comment_id() const;
  inline void clear_comment_id();
  static const int kCommentIdFieldNumber = 3;
  inline ::google::protobuf::int64 comment_id() const;
  inline void set_comment_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.CommentItemResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();
  inline void set_has_comment_id();
  inline void clear_has_comment_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  ::google::protobuf::int64 comment_id_;
  int result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static CommentItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteCommentRequest : public ::google::protobuf::MessageLite {
 public:
  DeleteCommentRequest();
  virtual ~DeleteCommentRequest();

  DeleteCommentRequest(const DeleteCommentRequest& from);

  inline DeleteCommentRequest& operator=(const DeleteCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteCommentRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteCommentRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteCommentRequest* other);

  // implements Message ----------------------------------------------

  DeleteCommentRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteCommentRequest& from);
  void MergeFrom(const DeleteCommentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int64 comment_id = 2;
  inline bool has_comment_id() const;
  inline void clear_comment_id();
  static const int kCommentIdFieldNumber = 2;
  inline ::google::protobuf::int64 comment_id() const;
  inline void set_comment_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.DeleteCommentRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_comment_id();
  inline void clear_has_comment_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int64 comment_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static DeleteCommentRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteCommentResponse : public ::google::protobuf::MessageLite {
 public:
  DeleteCommentResponse();
  virtual ~DeleteCommentResponse();

  DeleteCommentResponse(const DeleteCommentResponse& from);

  inline DeleteCommentResponse& operator=(const DeleteCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteCommentResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteCommentResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteCommentResponse* other);

  // implements Message ----------------------------------------------

  DeleteCommentResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteCommentResponse& from);
  void MergeFrom(const DeleteCommentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef DeleteCommentResponse_Result Result;
  static const Result SUCC = DeleteCommentResponse_Result_SUCC;
  static const Result FAIL_COMMENT_NOT_EXSIT = DeleteCommentResponse_Result_FAIL_COMMENT_NOT_EXSIT;
  static const Result FAIL_COMMENT_OTHER = DeleteCommentResponse_Result_FAIL_COMMENT_OTHER;
  static const Result FAIL_UNKNOWN = DeleteCommentResponse_Result_FAIL_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return DeleteCommentResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    DeleteCommentResponse_Result_Result_MIN;
  static const Result Result_MAX =
    DeleteCommentResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    DeleteCommentResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .weizhu.discover_v2.DeleteCommentResponse.Result result = 1 [default = FAIL_UNKNOWN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::discover_v2::DeleteCommentResponse_Result result() const;
  inline void set_result(::weizhu::discover_v2::DeleteCommentResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.DeleteCommentResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  int result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static DeleteCommentResponse* default_instance_;
};
// -------------------------------------------------------------------

class ScoreItemRequest : public ::google::protobuf::MessageLite {
 public:
  ScoreItemRequest();
  virtual ~ScoreItemRequest();

  ScoreItemRequest(const ScoreItemRequest& from);

  inline ScoreItemRequest& operator=(const ScoreItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ScoreItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ScoreItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ScoreItemRequest* other);

  // implements Message ----------------------------------------------

  ScoreItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ScoreItemRequest& from);
  void MergeFrom(const ScoreItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ScoreItemRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  ::google::protobuf::int32 score_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ScoreItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class ScoreItemResponse : public ::google::protobuf::MessageLite {
 public:
  ScoreItemResponse();
  virtual ~ScoreItemResponse();

  ScoreItemResponse(const ScoreItemResponse& from);

  inline ScoreItemResponse& operator=(const ScoreItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ScoreItemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ScoreItemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ScoreItemResponse* other);

  // implements Message ----------------------------------------------

  ScoreItemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ScoreItemResponse& from);
  void MergeFrom(const ScoreItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef ScoreItemResponse_Result Result;
  static const Result SUCC = ScoreItemResponse_Result_SUCC;
  static const Result FAIL_SCORE_INVALID = ScoreItemResponse_Result_FAIL_SCORE_INVALID;
  static const Result FAIL_ITEM_NOT_EXSIT = ScoreItemResponse_Result_FAIL_ITEM_NOT_EXSIT;
  static const Result FAIL_ITEM_DISABLE = ScoreItemResponse_Result_FAIL_ITEM_DISABLE;
  static const Result FAIL_ITEM_IS_SCORED = ScoreItemResponse_Result_FAIL_ITEM_IS_SCORED;
  static const Result FAIL_UNKNOWN = ScoreItemResponse_Result_FAIL_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return ScoreItemResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    ScoreItemResponse_Result_Result_MIN;
  static const Result Result_MAX =
    ScoreItemResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    ScoreItemResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .weizhu.discover_v2.ScoreItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::discover_v2::ScoreItemResponse_Result result() const;
  inline void set_result(::weizhu::discover_v2::ScoreItemResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ScoreItemResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  int result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ScoreItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class LikeItemRequest : public ::google::protobuf::MessageLite {
 public:
  LikeItemRequest();
  virtual ~LikeItemRequest();

  LikeItemRequest(const LikeItemRequest& from);

  inline LikeItemRequest& operator=(const LikeItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const LikeItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LikeItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LikeItemRequest* other);

  // implements Message ----------------------------------------------

  LikeItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LikeItemRequest& from);
  void MergeFrom(const LikeItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // required bool is_like = 2;
  inline bool has_is_like() const;
  inline void clear_is_like();
  static const int kIsLikeFieldNumber = 2;
  inline bool is_like() const;
  inline void set_is_like(bool value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.LikeItemRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_is_like();
  inline void clear_has_is_like();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  bool is_like_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static LikeItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class LikeItemResponse : public ::google::protobuf::MessageLite {
 public:
  LikeItemResponse();
  virtual ~LikeItemResponse();

  LikeItemResponse(const LikeItemResponse& from);

  inline LikeItemResponse& operator=(const LikeItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const LikeItemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LikeItemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LikeItemResponse* other);

  // implements Message ----------------------------------------------

  LikeItemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LikeItemResponse& from);
  void MergeFrom(const LikeItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef LikeItemResponse_Result Result;
  static const Result SUCC = LikeItemResponse_Result_SUCC;
  static const Result FAIL_ITEM_NOT_EXSIT = LikeItemResponse_Result_FAIL_ITEM_NOT_EXSIT;
  static const Result FAIL_ITEM_DISABLE = LikeItemResponse_Result_FAIL_ITEM_DISABLE;
  static const Result FAIL_UNKNOWN = LikeItemResponse_Result_FAIL_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return LikeItemResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    LikeItemResponse_Result_Result_MIN;
  static const Result Result_MAX =
    LikeItemResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    LikeItemResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .weizhu.discover_v2.LikeItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::discover_v2::LikeItemResponse_Result result() const;
  inline void set_result(::weizhu::discover_v2::LikeItemResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.LikeItemResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  int result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static LikeItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class ShareItemRequest : public ::google::protobuf::MessageLite {
 public:
  ShareItemRequest();
  virtual ~ShareItemRequest();

  ShareItemRequest(const ShareItemRequest& from);

  inline ShareItemRequest& operator=(const ShareItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ShareItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ShareItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ShareItemRequest* other);

  // implements Message ----------------------------------------------

  ShareItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ShareItemRequest& from);
  void MergeFrom(const ShareItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ShareItemRequest)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 item_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ShareItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class ShareItemResponse_ItemShareContent : public ::google::protobuf::MessageLite {
 public:
  ShareItemResponse_ItemShareContent();
  virtual ~ShareItemResponse_ItemShareContent();

  ShareItemResponse_ItemShareContent(const ShareItemResponse_ItemShareContent& from);

  inline ShareItemResponse_ItemShareContent& operator=(const ShareItemResponse_ItemShareContent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ShareItemResponse_ItemShareContent& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ShareItemResponse_ItemShareContent* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ShareItemResponse_ItemShareContent* other);

  // implements Message ----------------------------------------------

  ShareItemResponse_ItemShareContent* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ShareItemResponse_ItemShareContent& from);
  void MergeFrom(const ShareItemResponse_ItemShareContent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string item_name = 1;
  inline bool has_item_name() const;
  inline void clear_item_name();
  static const int kItemNameFieldNumber = 1;
  inline const ::std::string& item_name() const;
  inline void set_item_name(const ::std::string& value);
  inline void set_item_name(const char* value);
  inline void set_item_name(const char* value, size_t size);
  inline ::std::string* mutable_item_name();
  inline ::std::string* release_item_name();
  inline void set_allocated_item_name(::std::string* item_name);

  // required string item_desc = 2;
  inline bool has_item_desc() const;
  inline void clear_item_desc();
  static const int kItemDescFieldNumber = 2;
  inline const ::std::string& item_desc() const;
  inline void set_item_desc(const ::std::string& value);
  inline void set_item_desc(const char* value);
  inline void set_item_desc(const char* value, size_t size);
  inline ::std::string* mutable_item_desc();
  inline ::std::string* release_item_desc();
  inline void set_allocated_item_desc(::std::string* item_desc);

  // required string image_name = 3;
  inline bool has_image_name() const;
  inline void clear_image_name();
  static const int kImageNameFieldNumber = 3;
  inline const ::std::string& image_name() const;
  inline void set_image_name(const ::std::string& value);
  inline void set_image_name(const char* value);
  inline void set_image_name(const char* value, size_t size);
  inline ::std::string* mutable_image_name();
  inline ::std::string* release_image_name();
  inline void set_allocated_image_name(::std::string* image_name);

  // required string web_url = 4;
  inline bool has_web_url() const;
  inline void clear_web_url();
  static const int kWebUrlFieldNumber = 4;
  inline const ::std::string& web_url() const;
  inline void set_web_url(const ::std::string& value);
  inline void set_web_url(const char* value);
  inline void set_web_url(const char* value, size_t size);
  inline ::std::string* mutable_web_url();
  inline ::std::string* release_web_url();
  inline void set_allocated_web_url(::std::string* web_url);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ShareItemResponse.ItemShareContent)
 private:
  inline void set_has_item_name();
  inline void clear_has_item_name();
  inline void set_has_item_desc();
  inline void clear_has_item_desc();
  inline void set_has_image_name();
  inline void clear_has_image_name();
  inline void set_has_web_url();
  inline void clear_has_web_url();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* item_name_;
  ::std::string* item_desc_;
  ::std::string* image_name_;
  ::std::string* web_url_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ShareItemResponse_ItemShareContent* default_instance_;
};
// -------------------------------------------------------------------

class ShareItemResponse : public ::google::protobuf::MessageLite {
 public:
  ShareItemResponse();
  virtual ~ShareItemResponse();

  ShareItemResponse(const ShareItemResponse& from);

  inline ShareItemResponse& operator=(const ShareItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ShareItemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ShareItemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ShareItemResponse* other);

  // implements Message ----------------------------------------------

  ShareItemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ShareItemResponse& from);
  void MergeFrom(const ShareItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef ShareItemResponse_ItemShareContent ItemShareContent;

  typedef ShareItemResponse_Result Result;
  static const Result SUCC = ShareItemResponse_Result_SUCC;
  static const Result FAIL_PERMISSION_DENIED = ShareItemResponse_Result_FAIL_PERMISSION_DENIED;
  static const Result FAIL_ITEM_NOT_EXSIT = ShareItemResponse_Result_FAIL_ITEM_NOT_EXSIT;
  static const Result FAIL_UNKNOWN = ShareItemResponse_Result_FAIL_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return ShareItemResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    ShareItemResponse_Result_Result_MIN;
  static const Result Result_MAX =
    ShareItemResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    ShareItemResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .weizhu.discover_v2.ShareItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::discover_v2::ShareItemResponse_Result result() const;
  inline void set_result(::weizhu::discover_v2::ShareItemResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // optional .weizhu.discover_v2.ShareItemResponse.ItemShareContent itemShareContent = 3;
  inline bool has_itemsharecontent() const;
  inline void clear_itemsharecontent();
  static const int kItemShareContentFieldNumber = 3;
  inline const ::weizhu::discover_v2::ShareItemResponse_ItemShareContent& itemsharecontent() const;
  inline ::weizhu::discover_v2::ShareItemResponse_ItemShareContent* mutable_itemsharecontent();
  inline ::weizhu::discover_v2::ShareItemResponse_ItemShareContent* release_itemsharecontent();
  inline void set_allocated_itemsharecontent(::weizhu::discover_v2::ShareItemResponse_ItemShareContent* itemsharecontent);

  // @@protoc_insertion_point(class_scope:weizhu.discover_v2.ShareItemResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();
  inline void set_has_itemsharecontent();
  inline void clear_has_itemsharecontent();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  ::weizhu::discover_v2::ShareItemResponse_ItemShareContent* itemsharecontent_;
  int result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_discover_5fv2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_discover_5fv2_2eproto();
  #endif
  friend void protobuf_AssignDesc_discover_5fv2_2eproto();
  friend void protobuf_ShutdownFile_discover_5fv2_2eproto();

  void InitAsDefaultInstance();
  static ShareItemResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// WebUrl

// required string web_url = 1;
inline bool WebUrl::has_web_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebUrl::set_has_web_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebUrl::clear_has_web_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebUrl::clear_web_url() {
  if (web_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_->clear();
  }
  clear_has_web_url();
}
inline const ::std::string& WebUrl::web_url() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.WebUrl.web_url)
  return *web_url_;
}
inline void WebUrl::set_web_url(const ::std::string& value) {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  web_url_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.WebUrl.web_url)
}
inline void WebUrl::set_web_url(const char* value) {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  web_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.WebUrl.web_url)
}
inline void WebUrl::set_web_url(const char* value, size_t size) {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  web_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.WebUrl.web_url)
}
inline ::std::string* WebUrl::mutable_web_url() {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.WebUrl.web_url)
  return web_url_;
}
inline ::std::string* WebUrl::release_web_url() {
  clear_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = web_url_;
    web_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WebUrl::set_allocated_web_url(::std::string* web_url) {
  if (web_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete web_url_;
  }
  if (web_url) {
    set_has_web_url();
    web_url_ = web_url;
  } else {
    clear_has_web_url();
    web_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.WebUrl.web_url)
}

// required bool is_weizhu = 2;
inline bool WebUrl::has_is_weizhu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebUrl::set_has_is_weizhu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebUrl::clear_has_is_weizhu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebUrl::clear_is_weizhu() {
  is_weizhu_ = false;
  clear_has_is_weizhu();
}
inline bool WebUrl::is_weizhu() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.WebUrl.is_weizhu)
  return is_weizhu_;
}
inline void WebUrl::set_is_weizhu(bool value) {
  set_has_is_weizhu();
  is_weizhu_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.WebUrl.is_weizhu)
}

// -------------------------------------------------------------------

// Document

// required string document_url = 1;
inline bool Document::has_document_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Document::set_has_document_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Document::clear_has_document_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Document::clear_document_url() {
  if (document_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    document_url_->clear();
  }
  clear_has_document_url();
}
inline const ::std::string& Document::document_url() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Document.document_url)
  return *document_url_;
}
inline void Document::set_document_url(const ::std::string& value) {
  set_has_document_url();
  if (document_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    document_url_ = new ::std::string;
  }
  document_url_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Document.document_url)
}
inline void Document::set_document_url(const char* value) {
  set_has_document_url();
  if (document_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    document_url_ = new ::std::string;
  }
  document_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Document.document_url)
}
inline void Document::set_document_url(const char* value, size_t size) {
  set_has_document_url();
  if (document_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    document_url_ = new ::std::string;
  }
  document_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Document.document_url)
}
inline ::std::string* Document::mutable_document_url() {
  set_has_document_url();
  if (document_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    document_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Document.document_url)
  return document_url_;
}
inline ::std::string* Document::release_document_url() {
  clear_has_document_url();
  if (document_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = document_url_;
    document_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Document::set_allocated_document_url(::std::string* document_url) {
  if (document_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete document_url_;
  }
  if (document_url) {
    set_has_document_url();
    document_url_ = document_url;
  } else {
    clear_has_document_url();
    document_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Document.document_url)
}

// required string document_type = 2;
inline bool Document::has_document_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Document::set_has_document_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Document::clear_has_document_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Document::clear_document_type() {
  if (document_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    document_type_->clear();
  }
  clear_has_document_type();
}
inline const ::std::string& Document::document_type() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Document.document_type)
  return *document_type_;
}
inline void Document::set_document_type(const ::std::string& value) {
  set_has_document_type();
  if (document_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    document_type_ = new ::std::string;
  }
  document_type_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Document.document_type)
}
inline void Document::set_document_type(const char* value) {
  set_has_document_type();
  if (document_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    document_type_ = new ::std::string;
  }
  document_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Document.document_type)
}
inline void Document::set_document_type(const char* value, size_t size) {
  set_has_document_type();
  if (document_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    document_type_ = new ::std::string;
  }
  document_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Document.document_type)
}
inline ::std::string* Document::mutable_document_type() {
  set_has_document_type();
  if (document_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    document_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Document.document_type)
  return document_type_;
}
inline ::std::string* Document::release_document_type() {
  clear_has_document_type();
  if (document_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = document_type_;
    document_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Document::set_allocated_document_type(::std::string* document_type) {
  if (document_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete document_type_;
  }
  if (document_type) {
    set_has_document_type();
    document_type_ = document_type;
  } else {
    clear_has_document_type();
    document_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Document.document_type)
}

// required int32 document_size = 3;
inline bool Document::has_document_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Document::set_has_document_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Document::clear_has_document_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Document::clear_document_size() {
  document_size_ = 0;
  clear_has_document_size();
}
inline ::google::protobuf::int32 Document::document_size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Document.document_size)
  return document_size_;
}
inline void Document::set_document_size(::google::protobuf::int32 value) {
  set_has_document_size();
  document_size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Document.document_size)
}

// optional string check_md5 = 4;
inline bool Document::has_check_md5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Document::set_has_check_md5() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Document::clear_has_check_md5() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Document::clear_check_md5() {
  if (check_md5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_->clear();
  }
  clear_has_check_md5();
}
inline const ::std::string& Document::check_md5() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Document.check_md5)
  return *check_md5_;
}
inline void Document::set_check_md5(const ::std::string& value) {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  check_md5_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Document.check_md5)
}
inline void Document::set_check_md5(const char* value) {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  check_md5_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Document.check_md5)
}
inline void Document::set_check_md5(const char* value, size_t size) {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  check_md5_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Document.check_md5)
}
inline ::std::string* Document::mutable_check_md5() {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Document.check_md5)
  return check_md5_;
}
inline ::std::string* Document::release_check_md5() {
  clear_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = check_md5_;
    check_md5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Document::set_allocated_check_md5(::std::string* check_md5) {
  if (check_md5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete check_md5_;
  }
  if (check_md5) {
    set_has_check_md5();
    check_md5_ = check_md5;
  } else {
    clear_has_check_md5();
    check_md5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Document.check_md5)
}

// required bool is_download = 5;
inline bool Document::has_is_download() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Document::set_has_is_download() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Document::clear_has_is_download() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Document::clear_is_download() {
  is_download_ = false;
  clear_has_is_download();
}
inline bool Document::is_download() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Document.is_download)
  return is_download_;
}
inline void Document::set_is_download(bool value) {
  set_has_is_download();
  is_download_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Document.is_download)
}

// required bool is_auth_url = 6;
inline bool Document::has_is_auth_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Document::set_has_is_auth_url() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Document::clear_has_is_auth_url() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Document::clear_is_auth_url() {
  is_auth_url_ = false;
  clear_has_is_auth_url();
}
inline bool Document::is_auth_url() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Document.is_auth_url)
  return is_auth_url_;
}
inline void Document::set_is_auth_url(bool value) {
  set_has_is_auth_url();
  is_auth_url_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Document.is_auth_url)
}

// -------------------------------------------------------------------

// Video

// required string video_url = 1;
inline bool Video::has_video_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Video::set_has_video_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Video::clear_has_video_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Video::clear_video_url() {
  if (video_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    video_url_->clear();
  }
  clear_has_video_url();
}
inline const ::std::string& Video::video_url() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Video.video_url)
  return *video_url_;
}
inline void Video::set_video_url(const ::std::string& value) {
  set_has_video_url();
  if (video_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    video_url_ = new ::std::string;
  }
  video_url_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Video.video_url)
}
inline void Video::set_video_url(const char* value) {
  set_has_video_url();
  if (video_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    video_url_ = new ::std::string;
  }
  video_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Video.video_url)
}
inline void Video::set_video_url(const char* value, size_t size) {
  set_has_video_url();
  if (video_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    video_url_ = new ::std::string;
  }
  video_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Video.video_url)
}
inline ::std::string* Video::mutable_video_url() {
  set_has_video_url();
  if (video_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    video_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Video.video_url)
  return video_url_;
}
inline ::std::string* Video::release_video_url() {
  clear_has_video_url();
  if (video_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = video_url_;
    video_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Video::set_allocated_video_url(::std::string* video_url) {
  if (video_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete video_url_;
  }
  if (video_url) {
    set_has_video_url();
    video_url_ = video_url;
  } else {
    clear_has_video_url();
    video_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Video.video_url)
}

// required string video_type = 2;
inline bool Video::has_video_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Video::set_has_video_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Video::clear_has_video_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Video::clear_video_type() {
  if (video_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    video_type_->clear();
  }
  clear_has_video_type();
}
inline const ::std::string& Video::video_type() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Video.video_type)
  return *video_type_;
}
inline void Video::set_video_type(const ::std::string& value) {
  set_has_video_type();
  if (video_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    video_type_ = new ::std::string;
  }
  video_type_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Video.video_type)
}
inline void Video::set_video_type(const char* value) {
  set_has_video_type();
  if (video_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    video_type_ = new ::std::string;
  }
  video_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Video.video_type)
}
inline void Video::set_video_type(const char* value, size_t size) {
  set_has_video_type();
  if (video_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    video_type_ = new ::std::string;
  }
  video_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Video.video_type)
}
inline ::std::string* Video::mutable_video_type() {
  set_has_video_type();
  if (video_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    video_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Video.video_type)
  return video_type_;
}
inline ::std::string* Video::release_video_type() {
  clear_has_video_type();
  if (video_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = video_type_;
    video_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Video::set_allocated_video_type(::std::string* video_type) {
  if (video_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete video_type_;
  }
  if (video_type) {
    set_has_video_type();
    video_type_ = video_type;
  } else {
    clear_has_video_type();
    video_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Video.video_type)
}

// required int32 video_size = 3;
inline bool Video::has_video_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Video::set_has_video_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Video::clear_has_video_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Video::clear_video_size() {
  video_size_ = 0;
  clear_has_video_size();
}
inline ::google::protobuf::int32 Video::video_size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Video.video_size)
  return video_size_;
}
inline void Video::set_video_size(::google::protobuf::int32 value) {
  set_has_video_size();
  video_size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Video.video_size)
}

// required int32 video_time = 4;
inline bool Video::has_video_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Video::set_has_video_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Video::clear_has_video_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Video::clear_video_time() {
  video_time_ = 0;
  clear_has_video_time();
}
inline ::google::protobuf::int32 Video::video_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Video.video_time)
  return video_time_;
}
inline void Video::set_video_time(::google::protobuf::int32 value) {
  set_has_video_time();
  video_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Video.video_time)
}

// optional string check_md5 = 5;
inline bool Video::has_check_md5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Video::set_has_check_md5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Video::clear_has_check_md5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Video::clear_check_md5() {
  if (check_md5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_->clear();
  }
  clear_has_check_md5();
}
inline const ::std::string& Video::check_md5() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Video.check_md5)
  return *check_md5_;
}
inline void Video::set_check_md5(const ::std::string& value) {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  check_md5_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Video.check_md5)
}
inline void Video::set_check_md5(const char* value) {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  check_md5_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Video.check_md5)
}
inline void Video::set_check_md5(const char* value, size_t size) {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  check_md5_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Video.check_md5)
}
inline ::std::string* Video::mutable_check_md5() {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Video.check_md5)
  return check_md5_;
}
inline ::std::string* Video::release_check_md5() {
  clear_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = check_md5_;
    check_md5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Video::set_allocated_check_md5(::std::string* check_md5) {
  if (check_md5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete check_md5_;
  }
  if (check_md5) {
    set_has_check_md5();
    check_md5_ = check_md5;
  } else {
    clear_has_check_md5();
    check_md5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Video.check_md5)
}

// required bool is_download = 6;
inline bool Video::has_is_download() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Video::set_has_is_download() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Video::clear_has_is_download() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Video::clear_is_download() {
  is_download_ = false;
  clear_has_is_download();
}
inline bool Video::is_download() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Video.is_download)
  return is_download_;
}
inline void Video::set_is_download(bool value) {
  set_has_is_download();
  is_download_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Video.is_download)
}

// required bool is_auth_url = 7;
inline bool Video::has_is_auth_url() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Video::set_has_is_auth_url() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Video::clear_has_is_auth_url() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Video::clear_is_auth_url() {
  is_auth_url_ = false;
  clear_has_is_auth_url();
}
inline bool Video::is_auth_url() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Video.is_auth_url)
  return is_auth_url_;
}
inline void Video::set_is_auth_url(bool value) {
  set_has_is_auth_url();
  is_auth_url_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Video.is_auth_url)
}

// -------------------------------------------------------------------

// Audio

// required string audio_url = 1;
inline bool Audio::has_audio_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Audio::set_has_audio_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Audio::clear_has_audio_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Audio::clear_audio_url() {
  if (audio_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    audio_url_->clear();
  }
  clear_has_audio_url();
}
inline const ::std::string& Audio::audio_url() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Audio.audio_url)
  return *audio_url_;
}
inline void Audio::set_audio_url(const ::std::string& value) {
  set_has_audio_url();
  if (audio_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    audio_url_ = new ::std::string;
  }
  audio_url_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Audio.audio_url)
}
inline void Audio::set_audio_url(const char* value) {
  set_has_audio_url();
  if (audio_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    audio_url_ = new ::std::string;
  }
  audio_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Audio.audio_url)
}
inline void Audio::set_audio_url(const char* value, size_t size) {
  set_has_audio_url();
  if (audio_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    audio_url_ = new ::std::string;
  }
  audio_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Audio.audio_url)
}
inline ::std::string* Audio::mutable_audio_url() {
  set_has_audio_url();
  if (audio_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    audio_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Audio.audio_url)
  return audio_url_;
}
inline ::std::string* Audio::release_audio_url() {
  clear_has_audio_url();
  if (audio_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = audio_url_;
    audio_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Audio::set_allocated_audio_url(::std::string* audio_url) {
  if (audio_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete audio_url_;
  }
  if (audio_url) {
    set_has_audio_url();
    audio_url_ = audio_url;
  } else {
    clear_has_audio_url();
    audio_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Audio.audio_url)
}

// required string audio_type = 2;
inline bool Audio::has_audio_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Audio::set_has_audio_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Audio::clear_has_audio_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Audio::clear_audio_type() {
  if (audio_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    audio_type_->clear();
  }
  clear_has_audio_type();
}
inline const ::std::string& Audio::audio_type() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Audio.audio_type)
  return *audio_type_;
}
inline void Audio::set_audio_type(const ::std::string& value) {
  set_has_audio_type();
  if (audio_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    audio_type_ = new ::std::string;
  }
  audio_type_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Audio.audio_type)
}
inline void Audio::set_audio_type(const char* value) {
  set_has_audio_type();
  if (audio_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    audio_type_ = new ::std::string;
  }
  audio_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Audio.audio_type)
}
inline void Audio::set_audio_type(const char* value, size_t size) {
  set_has_audio_type();
  if (audio_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    audio_type_ = new ::std::string;
  }
  audio_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Audio.audio_type)
}
inline ::std::string* Audio::mutable_audio_type() {
  set_has_audio_type();
  if (audio_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    audio_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Audio.audio_type)
  return audio_type_;
}
inline ::std::string* Audio::release_audio_type() {
  clear_has_audio_type();
  if (audio_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = audio_type_;
    audio_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Audio::set_allocated_audio_type(::std::string* audio_type) {
  if (audio_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete audio_type_;
  }
  if (audio_type) {
    set_has_audio_type();
    audio_type_ = audio_type;
  } else {
    clear_has_audio_type();
    audio_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Audio.audio_type)
}

// required int32 audio_size = 3;
inline bool Audio::has_audio_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Audio::set_has_audio_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Audio::clear_has_audio_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Audio::clear_audio_size() {
  audio_size_ = 0;
  clear_has_audio_size();
}
inline ::google::protobuf::int32 Audio::audio_size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Audio.audio_size)
  return audio_size_;
}
inline void Audio::set_audio_size(::google::protobuf::int32 value) {
  set_has_audio_size();
  audio_size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Audio.audio_size)
}

// required int32 audio_time = 4;
inline bool Audio::has_audio_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Audio::set_has_audio_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Audio::clear_has_audio_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Audio::clear_audio_time() {
  audio_time_ = 0;
  clear_has_audio_time();
}
inline ::google::protobuf::int32 Audio::audio_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Audio.audio_time)
  return audio_time_;
}
inline void Audio::set_audio_time(::google::protobuf::int32 value) {
  set_has_audio_time();
  audio_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Audio.audio_time)
}

// optional string check_md5 = 5;
inline bool Audio::has_check_md5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Audio::set_has_check_md5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Audio::clear_has_check_md5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Audio::clear_check_md5() {
  if (check_md5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_->clear();
  }
  clear_has_check_md5();
}
inline const ::std::string& Audio::check_md5() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Audio.check_md5)
  return *check_md5_;
}
inline void Audio::set_check_md5(const ::std::string& value) {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  check_md5_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Audio.check_md5)
}
inline void Audio::set_check_md5(const char* value) {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  check_md5_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Audio.check_md5)
}
inline void Audio::set_check_md5(const char* value, size_t size) {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  check_md5_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Audio.check_md5)
}
inline ::std::string* Audio::mutable_check_md5() {
  set_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    check_md5_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Audio.check_md5)
  return check_md5_;
}
inline ::std::string* Audio::release_check_md5() {
  clear_has_check_md5();
  if (check_md5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = check_md5_;
    check_md5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Audio::set_allocated_check_md5(::std::string* check_md5) {
  if (check_md5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete check_md5_;
  }
  if (check_md5) {
    set_has_check_md5();
    check_md5_ = check_md5;
  } else {
    clear_has_check_md5();
    check_md5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Audio.check_md5)
}

// required bool is_download = 6;
inline bool Audio::has_is_download() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Audio::set_has_is_download() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Audio::clear_has_is_download() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Audio::clear_is_download() {
  is_download_ = false;
  clear_has_is_download();
}
inline bool Audio::is_download() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Audio.is_download)
  return is_download_;
}
inline void Audio::set_is_download(bool value) {
  set_has_is_download();
  is_download_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Audio.is_download)
}

// required bool is_auth_url = 7;
inline bool Audio::has_is_auth_url() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Audio::set_has_is_auth_url() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Audio::clear_has_is_auth_url() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Audio::clear_is_auth_url() {
  is_auth_url_ = false;
  clear_has_is_auth_url();
}
inline bool Audio::is_auth_url() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Audio.is_auth_url)
  return is_auth_url_;
}
inline void Audio::set_is_auth_url(bool value) {
  set_has_is_auth_url();
  is_auth_url_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Audio.is_auth_url)
}

// -------------------------------------------------------------------

// AppUri

// required string app_uri = 1;
inline bool AppUri::has_app_uri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppUri::set_has_app_uri() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppUri::clear_has_app_uri() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppUri::clear_app_uri() {
  if (app_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_uri_->clear();
  }
  clear_has_app_uri();
}
inline const ::std::string& AppUri::app_uri() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.AppUri.app_uri)
  return *app_uri_;
}
inline void AppUri::set_app_uri(const ::std::string& value) {
  set_has_app_uri();
  if (app_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_uri_ = new ::std::string;
  }
  app_uri_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.AppUri.app_uri)
}
inline void AppUri::set_app_uri(const char* value) {
  set_has_app_uri();
  if (app_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_uri_ = new ::std::string;
  }
  app_uri_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.AppUri.app_uri)
}
inline void AppUri::set_app_uri(const char* value, size_t size) {
  set_has_app_uri();
  if (app_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_uri_ = new ::std::string;
  }
  app_uri_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.AppUri.app_uri)
}
inline ::std::string* AppUri::mutable_app_uri() {
  set_has_app_uri();
  if (app_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_uri_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.AppUri.app_uri)
  return app_uri_;
}
inline ::std::string* AppUri::release_app_uri() {
  clear_has_app_uri();
  if (app_uri_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = app_uri_;
    app_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AppUri::set_allocated_app_uri(::std::string* app_uri) {
  if (app_uri_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete app_uri_;
  }
  if (app_uri) {
    set_has_app_uri();
    app_uri_ = app_uri;
  } else {
    clear_has_app_uri();
    app_uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.AppUri.app_uri)
}

// -------------------------------------------------------------------

// Banner

// required int32 banner_id = 1;
inline bool Banner::has_banner_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Banner::set_has_banner_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Banner::clear_has_banner_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Banner::clear_banner_id() {
  banner_id_ = 0;
  clear_has_banner_id();
}
inline ::google::protobuf::int32 Banner::banner_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Banner.banner_id)
  return banner_id_;
}
inline void Banner::set_banner_id(::google::protobuf::int32 value) {
  set_has_banner_id();
  banner_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Banner.banner_id)
}

// required string banner_name = 2;
inline bool Banner::has_banner_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Banner::set_has_banner_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Banner::clear_has_banner_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Banner::clear_banner_name() {
  if (banner_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_->clear();
  }
  clear_has_banner_name();
}
inline const ::std::string& Banner::banner_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Banner.banner_name)
  return *banner_name_;
}
inline void Banner::set_banner_name(const ::std::string& value) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Banner.banner_name)
}
inline void Banner::set_banner_name(const char* value) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Banner.banner_name)
}
inline void Banner::set_banner_name(const char* value, size_t size) {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  banner_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Banner.banner_name)
}
inline ::std::string* Banner::mutable_banner_name() {
  set_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Banner.banner_name)
  return banner_name_;
}
inline ::std::string* Banner::release_banner_name() {
  clear_has_banner_name();
  if (banner_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = banner_name_;
    banner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Banner::set_allocated_banner_name(::std::string* banner_name) {
  if (banner_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete banner_name_;
  }
  if (banner_name) {
    set_has_banner_name();
    banner_name_ = banner_name;
  } else {
    clear_has_banner_name();
    banner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Banner.banner_name)
}

// required string image_name = 3;
inline bool Banner::has_image_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Banner::set_has_image_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Banner::clear_has_image_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Banner::clear_image_name() {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_->clear();
  }
  clear_has_image_name();
}
inline const ::std::string& Banner::image_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Banner.image_name)
  return *image_name_;
}
inline void Banner::set_image_name(const ::std::string& value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Banner.image_name)
}
inline void Banner::set_image_name(const char* value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Banner.image_name)
}
inline void Banner::set_image_name(const char* value, size_t size) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Banner.image_name)
}
inline ::std::string* Banner::mutable_image_name() {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Banner.image_name)
  return image_name_;
}
inline ::std::string* Banner::release_image_name() {
  clear_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = image_name_;
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Banner::set_allocated_image_name(::std::string* image_name) {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete image_name_;
  }
  if (image_name) {
    set_has_image_name();
    image_name_ = image_name;
  } else {
    clear_has_image_name();
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Banner.image_name)
}

// optional int32 allow_model_id = 4;
inline bool Banner::has_allow_model_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Banner::set_has_allow_model_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Banner::clear_has_allow_model_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Banner::clear_allow_model_id() {
  allow_model_id_ = 0;
  clear_has_allow_model_id();
}
inline ::google::protobuf::int32 Banner::allow_model_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Banner.allow_model_id)
  return allow_model_id_;
}
inline void Banner::set_allow_model_id(::google::protobuf::int32 value) {
  set_has_allow_model_id();
  allow_model_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Banner.allow_model_id)
}

// optional int64 item_id = 5;
inline bool Banner::has_item_id() const {
  return content_case() == kItemId;
}
inline void Banner::set_has_item_id() {
  _oneof_case_[0] = kItemId;
}
inline void Banner::clear_item_id() {
  if (has_item_id()) {
    content_.item_id_ = GOOGLE_LONGLONG(0);
    clear_has_content();
  }
}
inline ::google::protobuf::int64 Banner::item_id() const {
  if (has_item_id()) {
    return content_.item_id_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Banner::set_item_id(::google::protobuf::int64 value) {
  if (!has_item_id()) {
    clear_content();
    set_has_item_id();
  }
  content_.item_id_ = value;
}

// optional .weizhu.discover_v2.WebUrl web_url = 6;
inline bool Banner::has_web_url() const {
  return content_case() == kWebUrl;
}
inline void Banner::set_has_web_url() {
  _oneof_case_[0] = kWebUrl;
}
inline void Banner::clear_web_url() {
  if (has_web_url()) {
    delete content_.web_url_;
    clear_has_content();
  }
}
inline const ::weizhu::discover_v2::WebUrl& Banner::web_url() const {
  return has_web_url() ? *content_.web_url_
                      : ::weizhu::discover_v2::WebUrl::default_instance();
}
inline ::weizhu::discover_v2::WebUrl* Banner::mutable_web_url() {
  if (!has_web_url()) {
    clear_content();
    set_has_web_url();
    content_.web_url_ = new ::weizhu::discover_v2::WebUrl;
  }
  return content_.web_url_;
}
inline ::weizhu::discover_v2::WebUrl* Banner::release_web_url() {
  if (has_web_url()) {
    clear_has_content();
    ::weizhu::discover_v2::WebUrl* temp = content_.web_url_;
    content_.web_url_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Banner::set_allocated_web_url(::weizhu::discover_v2::WebUrl* web_url) {
  clear_content();
  if (web_url) {
    set_has_web_url();
    content_.web_url_ = web_url;
  }
}

// optional .weizhu.discover_v2.AppUri app_uri = 7;
inline bool Banner::has_app_uri() const {
  return content_case() == kAppUri;
}
inline void Banner::set_has_app_uri() {
  _oneof_case_[0] = kAppUri;
}
inline void Banner::clear_app_uri() {
  if (has_app_uri()) {
    delete content_.app_uri_;
    clear_has_content();
  }
}
inline const ::weizhu::discover_v2::AppUri& Banner::app_uri() const {
  return has_app_uri() ? *content_.app_uri_
                      : ::weizhu::discover_v2::AppUri::default_instance();
}
inline ::weizhu::discover_v2::AppUri* Banner::mutable_app_uri() {
  if (!has_app_uri()) {
    clear_content();
    set_has_app_uri();
    content_.app_uri_ = new ::weizhu::discover_v2::AppUri;
  }
  return content_.app_uri_;
}
inline ::weizhu::discover_v2::AppUri* Banner::release_app_uri() {
  if (has_app_uri()) {
    clear_has_content();
    ::weizhu::discover_v2::AppUri* temp = content_.app_uri_;
    content_.app_uri_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Banner::set_allocated_app_uri(::weizhu::discover_v2::AppUri* app_uri) {
  clear_content();
  if (app_uri) {
    set_has_app_uri();
    content_.app_uri_ = app_uri;
  }
}

// optional .weizhu.discover_v2.State state = 95 [default = NORMAL];
inline bool Banner::has_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Banner::set_has_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Banner::clear_has_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Banner::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::weizhu::discover_v2::State Banner::state() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Banner.state)
  return static_cast< ::weizhu::discover_v2::State >(state_);
}
inline void Banner::set_state(::weizhu::discover_v2::State value) {
  assert(::weizhu::discover_v2::State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Banner.state)
}

// optional int64 create_admin_id = 96;
inline bool Banner::has_create_admin_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Banner::set_has_create_admin_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Banner::clear_has_create_admin_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Banner::clear_create_admin_id() {
  create_admin_id_ = GOOGLE_LONGLONG(0);
  clear_has_create_admin_id();
}
inline ::google::protobuf::int64 Banner::create_admin_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Banner.create_admin_id)
  return create_admin_id_;
}
inline void Banner::set_create_admin_id(::google::protobuf::int64 value) {
  set_has_create_admin_id();
  create_admin_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Banner.create_admin_id)
}

// optional int32 create_time = 97;
inline bool Banner::has_create_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Banner::set_has_create_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Banner::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Banner::clear_create_time() {
  create_time_ = 0;
  clear_has_create_time();
}
inline ::google::protobuf::int32 Banner::create_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Banner.create_time)
  return create_time_;
}
inline void Banner::set_create_time(::google::protobuf::int32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Banner.create_time)
}

// optional int64 update_admin_id = 98;
inline bool Banner::has_update_admin_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Banner::set_has_update_admin_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Banner::clear_has_update_admin_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Banner::clear_update_admin_id() {
  update_admin_id_ = GOOGLE_LONGLONG(0);
  clear_has_update_admin_id();
}
inline ::google::protobuf::int64 Banner::update_admin_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Banner.update_admin_id)
  return update_admin_id_;
}
inline void Banner::set_update_admin_id(::google::protobuf::int64 value) {
  set_has_update_admin_id();
  update_admin_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Banner.update_admin_id)
}

// optional int32 update_time = 99;
inline bool Banner::has_update_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Banner::set_has_update_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Banner::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Banner::clear_update_time() {
  update_time_ = 0;
  clear_has_update_time();
}
inline ::google::protobuf::int32 Banner::update_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Banner.update_time)
  return update_time_;
}
inline void Banner::set_update_time(::google::protobuf::int32 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Banner.update_time)
}

inline bool Banner::has_content() {
  return content_case() != CONTENT_NOT_SET;
}
inline void Banner::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline Banner::ContentCase Banner::content_case() const {
  return Banner::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Module_Category

// required int32 category_id = 1;
inline bool Module_Category::has_category_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Module_Category::set_has_category_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Module_Category::clear_has_category_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Module_Category::clear_category_id() {
  category_id_ = 0;
  clear_has_category_id();
}
inline ::google::protobuf::int32 Module_Category::category_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.category_id)
  return category_id_;
}
inline void Module_Category::set_category_id(::google::protobuf::int32 value) {
  set_has_category_id();
  category_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.category_id)
}

// required string category_name = 2;
inline bool Module_Category::has_category_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Module_Category::set_has_category_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Module_Category::clear_has_category_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Module_Category::clear_category_name() {
  if (category_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    category_name_->clear();
  }
  clear_has_category_name();
}
inline const ::std::string& Module_Category::category_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.category_name)
  return *category_name_;
}
inline void Module_Category::set_category_name(const ::std::string& value) {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    category_name_ = new ::std::string;
  }
  category_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.category_name)
}
inline void Module_Category::set_category_name(const char* value) {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    category_name_ = new ::std::string;
  }
  category_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Module.Category.category_name)
}
inline void Module_Category::set_category_name(const char* value, size_t size) {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    category_name_ = new ::std::string;
  }
  category_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Module.Category.category_name)
}
inline ::std::string* Module_Category::mutable_category_name() {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    category_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Module.Category.category_name)
  return category_name_;
}
inline ::std::string* Module_Category::release_category_name() {
  clear_has_category_name();
  if (category_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = category_name_;
    category_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Module_Category::set_allocated_category_name(::std::string* category_name) {
  if (category_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete category_name_;
  }
  if (category_name) {
    set_has_category_name();
    category_name_ = category_name;
  } else {
    clear_has_category_name();
    category_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Module.Category.category_name)
}

// required int32 module_id = 3;
inline bool Module_Category::has_module_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Module_Category::set_has_module_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Module_Category::clear_has_module_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Module_Category::clear_module_id() {
  module_id_ = 0;
  clear_has_module_id();
}
inline ::google::protobuf::int32 Module_Category::module_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.module_id)
  return module_id_;
}
inline void Module_Category::set_module_id(::google::protobuf::int32 value) {
  set_has_module_id();
  module_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.module_id)
}

// optional int32 allow_model_id = 4;
inline bool Module_Category::has_allow_model_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Module_Category::set_has_allow_model_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Module_Category::clear_has_allow_model_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Module_Category::clear_allow_model_id() {
  allow_model_id_ = 0;
  clear_has_allow_model_id();
}
inline ::google::protobuf::int32 Module_Category::allow_model_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.allow_model_id)
  return allow_model_id_;
}
inline void Module_Category::set_allow_model_id(::google::protobuf::int32 value) {
  set_has_allow_model_id();
  allow_model_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.allow_model_id)
}

// optional bool prompt_dot = 5;
inline bool Module_Category::has_prompt_dot() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Module_Category::set_has_prompt_dot() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Module_Category::clear_has_prompt_dot() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Module_Category::clear_prompt_dot() {
  prompt_dot_ = false;
  clear_has_prompt_dot();
}
inline bool Module_Category::prompt_dot() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.prompt_dot)
  return prompt_dot_;
}
inline void Module_Category::set_prompt_dot(bool value) {
  set_has_prompt_dot();
  prompt_dot_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.prompt_dot)
}

// optional int32 prompt_cnt = 6;
inline bool Module_Category::has_prompt_cnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Module_Category::set_has_prompt_cnt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Module_Category::clear_has_prompt_cnt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Module_Category::clear_prompt_cnt() {
  prompt_cnt_ = 0;
  clear_has_prompt_cnt();
}
inline ::google::protobuf::int32 Module_Category::prompt_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.prompt_cnt)
  return prompt_cnt_;
}
inline void Module_Category::set_prompt_cnt(::google::protobuf::int32 value) {
  set_has_prompt_cnt();
  prompt_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.prompt_cnt)
}

// optional .weizhu.discover_v2.State state = 95 [default = NORMAL];
inline bool Module_Category::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Module_Category::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Module_Category::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Module_Category::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::weizhu::discover_v2::State Module_Category::state() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.state)
  return static_cast< ::weizhu::discover_v2::State >(state_);
}
inline void Module_Category::set_state(::weizhu::discover_v2::State value) {
  assert(::weizhu::discover_v2::State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.state)
}

// optional int64 create_admin_id = 96;
inline bool Module_Category::has_create_admin_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Module_Category::set_has_create_admin_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Module_Category::clear_has_create_admin_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Module_Category::clear_create_admin_id() {
  create_admin_id_ = GOOGLE_LONGLONG(0);
  clear_has_create_admin_id();
}
inline ::google::protobuf::int64 Module_Category::create_admin_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.create_admin_id)
  return create_admin_id_;
}
inline void Module_Category::set_create_admin_id(::google::protobuf::int64 value) {
  set_has_create_admin_id();
  create_admin_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.create_admin_id)
}

// optional int32 create_time = 97;
inline bool Module_Category::has_create_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Module_Category::set_has_create_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Module_Category::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Module_Category::clear_create_time() {
  create_time_ = 0;
  clear_has_create_time();
}
inline ::google::protobuf::int32 Module_Category::create_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.create_time)
  return create_time_;
}
inline void Module_Category::set_create_time(::google::protobuf::int32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.create_time)
}

// optional int64 update_admin_id = 98;
inline bool Module_Category::has_update_admin_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Module_Category::set_has_update_admin_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Module_Category::clear_has_update_admin_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Module_Category::clear_update_admin_id() {
  update_admin_id_ = GOOGLE_LONGLONG(0);
  clear_has_update_admin_id();
}
inline ::google::protobuf::int64 Module_Category::update_admin_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.update_admin_id)
  return update_admin_id_;
}
inline void Module_Category::set_update_admin_id(::google::protobuf::int64 value) {
  set_has_update_admin_id();
  update_admin_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.update_admin_id)
}

// optional int32 update_time = 99;
inline bool Module_Category::has_update_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Module_Category::set_has_update_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Module_Category::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Module_Category::clear_update_time() {
  update_time_ = 0;
  clear_has_update_time();
}
inline ::google::protobuf::int32 Module_Category::update_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.Category.update_time)
  return update_time_;
}
inline void Module_Category::set_update_time(::google::protobuf::int32 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.Category.update_time)
}

// -------------------------------------------------------------------

// Module_CategoryList

// repeated .weizhu.discover_v2.Module.Category category = 1;
inline int Module_CategoryList::category_size() const {
  return category_.size();
}
inline void Module_CategoryList::clear_category() {
  category_.Clear();
}
inline const ::weizhu::discover_v2::Module_Category& Module_CategoryList::category(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.CategoryList.category)
  return category_.Get(index);
}
inline ::weizhu::discover_v2::Module_Category* Module_CategoryList::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Module.CategoryList.category)
  return category_.Mutable(index);
}
inline ::weizhu::discover_v2::Module_Category* Module_CategoryList::add_category() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.Module.CategoryList.category)
  return category_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Module_Category >&
Module_CategoryList::category() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.Module.CategoryList.category)
  return category_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Module_Category >*
Module_CategoryList::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.Module.CategoryList.category)
  return &category_;
}

// -------------------------------------------------------------------

// Module

// required int32 module_id = 1;
inline bool Module::has_module_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Module::set_has_module_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Module::clear_has_module_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Module::clear_module_id() {
  module_id_ = 0;
  clear_has_module_id();
}
inline ::google::protobuf::int32 Module::module_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.module_id)
  return module_id_;
}
inline void Module::set_module_id(::google::protobuf::int32 value) {
  set_has_module_id();
  module_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.module_id)
}

// required string module_name = 2;
inline bool Module::has_module_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Module::set_has_module_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Module::clear_has_module_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Module::clear_module_name() {
  if (module_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_name_->clear();
  }
  clear_has_module_name();
}
inline const ::std::string& Module::module_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.module_name)
  return *module_name_;
}
inline void Module::set_module_name(const ::std::string& value) {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_name_ = new ::std::string;
  }
  module_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.module_name)
}
inline void Module::set_module_name(const char* value) {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_name_ = new ::std::string;
  }
  module_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Module.module_name)
}
inline void Module::set_module_name(const char* value, size_t size) {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_name_ = new ::std::string;
  }
  module_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Module.module_name)
}
inline ::std::string* Module::mutable_module_name() {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Module.module_name)
  return module_name_;
}
inline ::std::string* Module::release_module_name() {
  clear_has_module_name();
  if (module_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = module_name_;
    module_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Module::set_allocated_module_name(::std::string* module_name) {
  if (module_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete module_name_;
  }
  if (module_name) {
    set_has_module_name();
    module_name_ = module_name;
  } else {
    clear_has_module_name();
    module_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Module.module_name)
}

// required string image_name = 3;
inline bool Module::has_image_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Module::set_has_image_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Module::clear_has_image_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Module::clear_image_name() {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_->clear();
  }
  clear_has_image_name();
}
inline const ::std::string& Module::image_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.image_name)
  return *image_name_;
}
inline void Module::set_image_name(const ::std::string& value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.image_name)
}
inline void Module::set_image_name(const char* value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Module.image_name)
}
inline void Module::set_image_name(const char* value, size_t size) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Module.image_name)
}
inline ::std::string* Module::mutable_image_name() {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Module.image_name)
  return image_name_;
}
inline ::std::string* Module::release_image_name() {
  clear_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = image_name_;
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Module::set_allocated_image_name(::std::string* image_name) {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete image_name_;
  }
  if (image_name) {
    set_has_image_name();
    image_name_ = image_name;
  } else {
    clear_has_image_name();
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Module.image_name)
}

// optional int32 allow_model_id = 4;
inline bool Module::has_allow_model_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Module::set_has_allow_model_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Module::clear_has_allow_model_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Module::clear_allow_model_id() {
  allow_model_id_ = 0;
  clear_has_allow_model_id();
}
inline ::google::protobuf::int32 Module::allow_model_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.allow_model_id)
  return allow_model_id_;
}
inline void Module::set_allow_model_id(::google::protobuf::int32 value) {
  set_has_allow_model_id();
  allow_model_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.allow_model_id)
}

// optional bool prompt_dot = 5;
inline bool Module::has_prompt_dot() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Module::set_has_prompt_dot() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Module::clear_has_prompt_dot() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Module::clear_prompt_dot() {
  prompt_dot_ = false;
  clear_has_prompt_dot();
}
inline bool Module::prompt_dot() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.prompt_dot)
  return prompt_dot_;
}
inline void Module::set_prompt_dot(bool value) {
  set_has_prompt_dot();
  prompt_dot_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.prompt_dot)
}

// optional int32 prompt_cnt = 6;
inline bool Module::has_prompt_cnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Module::set_has_prompt_cnt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Module::clear_has_prompt_cnt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Module::clear_prompt_cnt() {
  prompt_cnt_ = 0;
  clear_has_prompt_cnt();
}
inline ::google::protobuf::int32 Module::prompt_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.prompt_cnt)
  return prompt_cnt_;
}
inline void Module::set_prompt_cnt(::google::protobuf::int32 value) {
  set_has_prompt_cnt();
  prompt_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.prompt_cnt)
}

// optional .weizhu.discover_v2.Module.CategoryList category_list = 7;
inline bool Module::has_category_list() const {
  return content_case() == kCategoryList;
}
inline void Module::set_has_category_list() {
  _oneof_case_[0] = kCategoryList;
}
inline void Module::clear_category_list() {
  if (has_category_list()) {
    delete content_.category_list_;
    clear_has_content();
  }
}
inline const ::weizhu::discover_v2::Module_CategoryList& Module::category_list() const {
  return has_category_list() ? *content_.category_list_
                      : ::weizhu::discover_v2::Module_CategoryList::default_instance();
}
inline ::weizhu::discover_v2::Module_CategoryList* Module::mutable_category_list() {
  if (!has_category_list()) {
    clear_content();
    set_has_category_list();
    content_.category_list_ = new ::weizhu::discover_v2::Module_CategoryList;
  }
  return content_.category_list_;
}
inline ::weizhu::discover_v2::Module_CategoryList* Module::release_category_list() {
  if (has_category_list()) {
    clear_has_content();
    ::weizhu::discover_v2::Module_CategoryList* temp = content_.category_list_;
    content_.category_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Module::set_allocated_category_list(::weizhu::discover_v2::Module_CategoryList* category_list) {
  clear_content();
  if (category_list) {
    set_has_category_list();
    content_.category_list_ = category_list;
  }
}

// optional .weizhu.discover_v2.WebUrl web_url = 8;
inline bool Module::has_web_url() const {
  return content_case() == kWebUrl;
}
inline void Module::set_has_web_url() {
  _oneof_case_[0] = kWebUrl;
}
inline void Module::clear_web_url() {
  if (has_web_url()) {
    delete content_.web_url_;
    clear_has_content();
  }
}
inline const ::weizhu::discover_v2::WebUrl& Module::web_url() const {
  return has_web_url() ? *content_.web_url_
                      : ::weizhu::discover_v2::WebUrl::default_instance();
}
inline ::weizhu::discover_v2::WebUrl* Module::mutable_web_url() {
  if (!has_web_url()) {
    clear_content();
    set_has_web_url();
    content_.web_url_ = new ::weizhu::discover_v2::WebUrl;
  }
  return content_.web_url_;
}
inline ::weizhu::discover_v2::WebUrl* Module::release_web_url() {
  if (has_web_url()) {
    clear_has_content();
    ::weizhu::discover_v2::WebUrl* temp = content_.web_url_;
    content_.web_url_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Module::set_allocated_web_url(::weizhu::discover_v2::WebUrl* web_url) {
  clear_content();
  if (web_url) {
    set_has_web_url();
    content_.web_url_ = web_url;
  }
}

// optional .weizhu.discover_v2.AppUri app_uri = 9;
inline bool Module::has_app_uri() const {
  return content_case() == kAppUri;
}
inline void Module::set_has_app_uri() {
  _oneof_case_[0] = kAppUri;
}
inline void Module::clear_app_uri() {
  if (has_app_uri()) {
    delete content_.app_uri_;
    clear_has_content();
  }
}
inline const ::weizhu::discover_v2::AppUri& Module::app_uri() const {
  return has_app_uri() ? *content_.app_uri_
                      : ::weizhu::discover_v2::AppUri::default_instance();
}
inline ::weizhu::discover_v2::AppUri* Module::mutable_app_uri() {
  if (!has_app_uri()) {
    clear_content();
    set_has_app_uri();
    content_.app_uri_ = new ::weizhu::discover_v2::AppUri;
  }
  return content_.app_uri_;
}
inline ::weizhu::discover_v2::AppUri* Module::release_app_uri() {
  if (has_app_uri()) {
    clear_has_content();
    ::weizhu::discover_v2::AppUri* temp = content_.app_uri_;
    content_.app_uri_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Module::set_allocated_app_uri(::weizhu::discover_v2::AppUri* app_uri) {
  clear_content();
  if (app_uri) {
    set_has_app_uri();
    content_.app_uri_ = app_uri;
  }
}

// optional .weizhu.discover_v2.State state = 95 [default = NORMAL];
inline bool Module::has_state() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Module::set_has_state() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Module::clear_has_state() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Module::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::weizhu::discover_v2::State Module::state() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.state)
  return static_cast< ::weizhu::discover_v2::State >(state_);
}
inline void Module::set_state(::weizhu::discover_v2::State value) {
  assert(::weizhu::discover_v2::State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.state)
}

// optional int64 create_admin_id = 96;
inline bool Module::has_create_admin_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Module::set_has_create_admin_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Module::clear_has_create_admin_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Module::clear_create_admin_id() {
  create_admin_id_ = GOOGLE_LONGLONG(0);
  clear_has_create_admin_id();
}
inline ::google::protobuf::int64 Module::create_admin_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.create_admin_id)
  return create_admin_id_;
}
inline void Module::set_create_admin_id(::google::protobuf::int64 value) {
  set_has_create_admin_id();
  create_admin_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.create_admin_id)
}

// optional int32 create_time = 97;
inline bool Module::has_create_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Module::set_has_create_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Module::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Module::clear_create_time() {
  create_time_ = 0;
  clear_has_create_time();
}
inline ::google::protobuf::int32 Module::create_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.create_time)
  return create_time_;
}
inline void Module::set_create_time(::google::protobuf::int32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.create_time)
}

// optional int64 update_admin_id = 98;
inline bool Module::has_update_admin_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Module::set_has_update_admin_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Module::clear_has_update_admin_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Module::clear_update_admin_id() {
  update_admin_id_ = GOOGLE_LONGLONG(0);
  clear_has_update_admin_id();
}
inline ::google::protobuf::int64 Module::update_admin_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.update_admin_id)
  return update_admin_id_;
}
inline void Module::set_update_admin_id(::google::protobuf::int64 value) {
  set_has_update_admin_id();
  update_admin_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.update_admin_id)
}

// optional int32 update_time = 99;
inline bool Module::has_update_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Module::set_has_update_time() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Module::clear_has_update_time() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Module::clear_update_time() {
  update_time_ = 0;
  clear_has_update_time();
}
inline ::google::protobuf::int32 Module::update_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Module.update_time)
  return update_time_;
}
inline void Module::set_update_time(::google::protobuf::int32 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Module.update_time)
}

inline bool Module::has_content() {
  return content_case() != CONTENT_NOT_SET;
}
inline void Module::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline Module::ContentCase Module::content_case() const {
  return Module::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Item_Base

// required int64 item_id = 1;
inline bool Item_Base::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item_Base::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item_Base::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item_Base::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 Item_Base::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.item_id)
  return item_id_;
}
inline void Item_Base::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.item_id)
}

// required string item_name = 2;
inline bool Item_Base::has_item_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item_Base::set_has_item_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item_Base::clear_has_item_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item_Base::clear_item_name() {
  if (item_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_->clear();
  }
  clear_has_item_name();
}
inline const ::std::string& Item_Base::item_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.item_name)
  return *item_name_;
}
inline void Item_Base::set_item_name(const ::std::string& value) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.item_name)
}
inline void Item_Base::set_item_name(const char* value) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Item.Base.item_name)
}
inline void Item_Base::set_item_name(const char* value, size_t size) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Item.Base.item_name)
}
inline ::std::string* Item_Base::mutable_item_name() {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Item.Base.item_name)
  return item_name_;
}
inline ::std::string* Item_Base::release_item_name() {
  clear_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_name_;
    item_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item_Base::set_allocated_item_name(::std::string* item_name) {
  if (item_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_name_;
  }
  if (item_name) {
    set_has_item_name();
    item_name_ = item_name;
  } else {
    clear_has_item_name();
    item_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Item.Base.item_name)
}

// required string item_desc = 3;
inline bool Item_Base::has_item_desc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item_Base::set_has_item_desc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item_Base::clear_has_item_desc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item_Base::clear_item_desc() {
  if (item_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_->clear();
  }
  clear_has_item_desc();
}
inline const ::std::string& Item_Base::item_desc() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.item_desc)
  return *item_desc_;
}
inline void Item_Base::set_item_desc(const ::std::string& value) {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  item_desc_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.item_desc)
}
inline void Item_Base::set_item_desc(const char* value) {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  item_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Item.Base.item_desc)
}
inline void Item_Base::set_item_desc(const char* value, size_t size) {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  item_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Item.Base.item_desc)
}
inline ::std::string* Item_Base::mutable_item_desc() {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Item.Base.item_desc)
  return item_desc_;
}
inline ::std::string* Item_Base::release_item_desc() {
  clear_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_desc_;
    item_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item_Base::set_allocated_item_desc(::std::string* item_desc) {
  if (item_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_desc_;
  }
  if (item_desc) {
    set_has_item_desc();
    item_desc_ = item_desc;
  } else {
    clear_has_item_desc();
    item_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Item.Base.item_desc)
}

// required string image_name = 4;
inline bool Item_Base::has_image_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item_Base::set_has_image_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item_Base::clear_has_image_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item_Base::clear_image_name() {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_->clear();
  }
  clear_has_image_name();
}
inline const ::std::string& Item_Base::image_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.image_name)
  return *image_name_;
}
inline void Item_Base::set_image_name(const ::std::string& value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.image_name)
}
inline void Item_Base::set_image_name(const char* value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.Item.Base.image_name)
}
inline void Item_Base::set_image_name(const char* value, size_t size) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.Item.Base.image_name)
}
inline ::std::string* Item_Base::mutable_image_name() {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Item.Base.image_name)
  return image_name_;
}
inline ::std::string* Item_Base::release_image_name() {
  clear_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = image_name_;
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item_Base::set_allocated_image_name(::std::string* image_name) {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete image_name_;
  }
  if (image_name) {
    set_has_image_name();
    image_name_ = image_name;
  } else {
    clear_has_image_name();
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Item.Base.image_name)
}

// optional int32 allow_model_id = 5;
inline bool Item_Base::has_allow_model_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Item_Base::set_has_allow_model_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Item_Base::clear_has_allow_model_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Item_Base::clear_allow_model_id() {
  allow_model_id_ = 0;
  clear_has_allow_model_id();
}
inline ::google::protobuf::int32 Item_Base::allow_model_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.allow_model_id)
  return allow_model_id_;
}
inline void Item_Base::set_allow_model_id(::google::protobuf::int32 value) {
  set_has_allow_model_id();
  allow_model_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.allow_model_id)
}

// required bool enable_comment = 6;
inline bool Item_Base::has_enable_comment() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Item_Base::set_has_enable_comment() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Item_Base::clear_has_enable_comment() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Item_Base::clear_enable_comment() {
  enable_comment_ = false;
  clear_has_enable_comment();
}
inline bool Item_Base::enable_comment() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.enable_comment)
  return enable_comment_;
}
inline void Item_Base::set_enable_comment(bool value) {
  set_has_enable_comment();
  enable_comment_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.enable_comment)
}

// required bool enable_score = 7;
inline bool Item_Base::has_enable_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Item_Base::set_has_enable_score() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Item_Base::clear_has_enable_score() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Item_Base::clear_enable_score() {
  enable_score_ = false;
  clear_has_enable_score();
}
inline bool Item_Base::enable_score() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.enable_score)
  return enable_score_;
}
inline void Item_Base::set_enable_score(bool value) {
  set_has_enable_score();
  enable_score_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.enable_score)
}

// required bool enable_remind = 8;
inline bool Item_Base::has_enable_remind() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Item_Base::set_has_enable_remind() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Item_Base::clear_has_enable_remind() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Item_Base::clear_enable_remind() {
  enable_remind_ = false;
  clear_has_enable_remind();
}
inline bool Item_Base::enable_remind() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.enable_remind)
  return enable_remind_;
}
inline void Item_Base::set_enable_remind(bool value) {
  set_has_enable_remind();
  enable_remind_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.enable_remind)
}

// required bool enable_like = 9;
inline bool Item_Base::has_enable_like() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Item_Base::set_has_enable_like() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Item_Base::clear_has_enable_like() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Item_Base::clear_enable_like() {
  enable_like_ = false;
  clear_has_enable_like();
}
inline bool Item_Base::enable_like() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.enable_like)
  return enable_like_;
}
inline void Item_Base::set_enable_like(bool value) {
  set_has_enable_like();
  enable_like_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.enable_like)
}

// required bool enable_share = 10;
inline bool Item_Base::has_enable_share() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Item_Base::set_has_enable_share() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Item_Base::clear_has_enable_share() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Item_Base::clear_enable_share() {
  enable_share_ = false;
  clear_has_enable_share();
}
inline bool Item_Base::enable_share() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.enable_share)
  return enable_share_;
}
inline void Item_Base::set_enable_share(bool value) {
  set_has_enable_share();
  enable_share_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.enable_share)
}

// optional bool enable_external_share = 11;
inline bool Item_Base::has_enable_external_share() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Item_Base::set_has_enable_external_share() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Item_Base::clear_has_enable_external_share() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Item_Base::clear_enable_external_share() {
  enable_external_share_ = false;
  clear_has_enable_external_share();
}
inline bool Item_Base::enable_external_share() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.enable_external_share)
  return enable_external_share_;
}
inline void Item_Base::set_enable_external_share(bool value) {
  set_has_enable_external_share();
  enable_external_share_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.enable_external_share)
}

// optional .weizhu.discover_v2.WebUrl web_url = 20;
inline bool Item_Base::has_web_url() const {
  return content_case() == kWebUrl;
}
inline void Item_Base::set_has_web_url() {
  _oneof_case_[0] = kWebUrl;
}
inline void Item_Base::clear_web_url() {
  if (has_web_url()) {
    delete content_.web_url_;
    clear_has_content();
  }
}
inline const ::weizhu::discover_v2::WebUrl& Item_Base::web_url() const {
  return has_web_url() ? *content_.web_url_
                      : ::weizhu::discover_v2::WebUrl::default_instance();
}
inline ::weizhu::discover_v2::WebUrl* Item_Base::mutable_web_url() {
  if (!has_web_url()) {
    clear_content();
    set_has_web_url();
    content_.web_url_ = new ::weizhu::discover_v2::WebUrl;
  }
  return content_.web_url_;
}
inline ::weizhu::discover_v2::WebUrl* Item_Base::release_web_url() {
  if (has_web_url()) {
    clear_has_content();
    ::weizhu::discover_v2::WebUrl* temp = content_.web_url_;
    content_.web_url_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Item_Base::set_allocated_web_url(::weizhu::discover_v2::WebUrl* web_url) {
  clear_content();
  if (web_url) {
    set_has_web_url();
    content_.web_url_ = web_url;
  }
}

// optional .weizhu.discover_v2.Document document = 21;
inline bool Item_Base::has_document() const {
  return content_case() == kDocument;
}
inline void Item_Base::set_has_document() {
  _oneof_case_[0] = kDocument;
}
inline void Item_Base::clear_document() {
  if (has_document()) {
    delete content_.document_;
    clear_has_content();
  }
}
inline const ::weizhu::discover_v2::Document& Item_Base::document() const {
  return has_document() ? *content_.document_
                      : ::weizhu::discover_v2::Document::default_instance();
}
inline ::weizhu::discover_v2::Document* Item_Base::mutable_document() {
  if (!has_document()) {
    clear_content();
    set_has_document();
    content_.document_ = new ::weizhu::discover_v2::Document;
  }
  return content_.document_;
}
inline ::weizhu::discover_v2::Document* Item_Base::release_document() {
  if (has_document()) {
    clear_has_content();
    ::weizhu::discover_v2::Document* temp = content_.document_;
    content_.document_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Item_Base::set_allocated_document(::weizhu::discover_v2::Document* document) {
  clear_content();
  if (document) {
    set_has_document();
    content_.document_ = document;
  }
}

// optional .weizhu.discover_v2.Video video = 22;
inline bool Item_Base::has_video() const {
  return content_case() == kVideo;
}
inline void Item_Base::set_has_video() {
  _oneof_case_[0] = kVideo;
}
inline void Item_Base::clear_video() {
  if (has_video()) {
    delete content_.video_;
    clear_has_content();
  }
}
inline const ::weizhu::discover_v2::Video& Item_Base::video() const {
  return has_video() ? *content_.video_
                      : ::weizhu::discover_v2::Video::default_instance();
}
inline ::weizhu::discover_v2::Video* Item_Base::mutable_video() {
  if (!has_video()) {
    clear_content();
    set_has_video();
    content_.video_ = new ::weizhu::discover_v2::Video;
  }
  return content_.video_;
}
inline ::weizhu::discover_v2::Video* Item_Base::release_video() {
  if (has_video()) {
    clear_has_content();
    ::weizhu::discover_v2::Video* temp = content_.video_;
    content_.video_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Item_Base::set_allocated_video(::weizhu::discover_v2::Video* video) {
  clear_content();
  if (video) {
    set_has_video();
    content_.video_ = video;
  }
}

// optional .weizhu.discover_v2.Audio audio = 23;
inline bool Item_Base::has_audio() const {
  return content_case() == kAudio;
}
inline void Item_Base::set_has_audio() {
  _oneof_case_[0] = kAudio;
}
inline void Item_Base::clear_audio() {
  if (has_audio()) {
    delete content_.audio_;
    clear_has_content();
  }
}
inline const ::weizhu::discover_v2::Audio& Item_Base::audio() const {
  return has_audio() ? *content_.audio_
                      : ::weizhu::discover_v2::Audio::default_instance();
}
inline ::weizhu::discover_v2::Audio* Item_Base::mutable_audio() {
  if (!has_audio()) {
    clear_content();
    set_has_audio();
    content_.audio_ = new ::weizhu::discover_v2::Audio;
  }
  return content_.audio_;
}
inline ::weizhu::discover_v2::Audio* Item_Base::release_audio() {
  if (has_audio()) {
    clear_has_content();
    ::weizhu::discover_v2::Audio* temp = content_.audio_;
    content_.audio_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Item_Base::set_allocated_audio(::weizhu::discover_v2::Audio* audio) {
  clear_content();
  if (audio) {
    set_has_audio();
    content_.audio_ = audio;
  }
}

// optional .weizhu.discover_v2.AppUri app_uri = 24;
inline bool Item_Base::has_app_uri() const {
  return content_case() == kAppUri;
}
inline void Item_Base::set_has_app_uri() {
  _oneof_case_[0] = kAppUri;
}
inline void Item_Base::clear_app_uri() {
  if (has_app_uri()) {
    delete content_.app_uri_;
    clear_has_content();
  }
}
inline const ::weizhu::discover_v2::AppUri& Item_Base::app_uri() const {
  return has_app_uri() ? *content_.app_uri_
                      : ::weizhu::discover_v2::AppUri::default_instance();
}
inline ::weizhu::discover_v2::AppUri* Item_Base::mutable_app_uri() {
  if (!has_app_uri()) {
    clear_content();
    set_has_app_uri();
    content_.app_uri_ = new ::weizhu::discover_v2::AppUri;
  }
  return content_.app_uri_;
}
inline ::weizhu::discover_v2::AppUri* Item_Base::release_app_uri() {
  if (has_app_uri()) {
    clear_has_content();
    ::weizhu::discover_v2::AppUri* temp = content_.app_uri_;
    content_.app_uri_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Item_Base::set_allocated_app_uri(::weizhu::discover_v2::AppUri* app_uri) {
  clear_content();
  if (app_uri) {
    set_has_app_uri();
    content_.app_uri_ = app_uri;
  }
}

// optional .weizhu.discover_v2.State state = 95 [default = NORMAL];
inline bool Item_Base::has_state() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Item_Base::set_has_state() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Item_Base::clear_has_state() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Item_Base::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::weizhu::discover_v2::State Item_Base::state() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.state)
  return static_cast< ::weizhu::discover_v2::State >(state_);
}
inline void Item_Base::set_state(::weizhu::discover_v2::State value) {
  assert(::weizhu::discover_v2::State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.state)
}

// optional int64 create_admin_id = 96;
inline bool Item_Base::has_create_admin_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Item_Base::set_has_create_admin_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Item_Base::clear_has_create_admin_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Item_Base::clear_create_admin_id() {
  create_admin_id_ = GOOGLE_LONGLONG(0);
  clear_has_create_admin_id();
}
inline ::google::protobuf::int64 Item_Base::create_admin_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.create_admin_id)
  return create_admin_id_;
}
inline void Item_Base::set_create_admin_id(::google::protobuf::int64 value) {
  set_has_create_admin_id();
  create_admin_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.create_admin_id)
}

// optional int32 create_time = 97;
inline bool Item_Base::has_create_time() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Item_Base::set_has_create_time() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Item_Base::clear_has_create_time() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Item_Base::clear_create_time() {
  create_time_ = 0;
  clear_has_create_time();
}
inline ::google::protobuf::int32 Item_Base::create_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.create_time)
  return create_time_;
}
inline void Item_Base::set_create_time(::google::protobuf::int32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.create_time)
}

// optional int64 update_admin_id = 98;
inline bool Item_Base::has_update_admin_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Item_Base::set_has_update_admin_id() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Item_Base::clear_has_update_admin_id() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Item_Base::clear_update_admin_id() {
  update_admin_id_ = GOOGLE_LONGLONG(0);
  clear_has_update_admin_id();
}
inline ::google::protobuf::int64 Item_Base::update_admin_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.update_admin_id)
  return update_admin_id_;
}
inline void Item_Base::set_update_admin_id(::google::protobuf::int64 value) {
  set_has_update_admin_id();
  update_admin_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.update_admin_id)
}

// optional int32 update_time = 99;
inline bool Item_Base::has_update_time() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Item_Base::set_has_update_time() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Item_Base::clear_has_update_time() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Item_Base::clear_update_time() {
  update_time_ = 0;
  clear_has_update_time();
}
inline ::google::protobuf::int32 Item_Base::update_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Base.update_time)
  return update_time_;
}
inline void Item_Base::set_update_time(::google::protobuf::int32 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Base.update_time)
}

inline bool Item_Base::has_content() {
  return content_case() != CONTENT_NOT_SET;
}
inline void Item_Base::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline Item_Base::ContentCase Item_Base::content_case() const {
  return Item_Base::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Item_Count

// required int32 learn_cnt = 1;
inline bool Item_Count::has_learn_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item_Count::set_has_learn_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item_Count::clear_has_learn_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item_Count::clear_learn_cnt() {
  learn_cnt_ = 0;
  clear_has_learn_cnt();
}
inline ::google::protobuf::int32 Item_Count::learn_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Count.learn_cnt)
  return learn_cnt_;
}
inline void Item_Count::set_learn_cnt(::google::protobuf::int32 value) {
  set_has_learn_cnt();
  learn_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Count.learn_cnt)
}

// required int32 learn_user_cnt = 2;
inline bool Item_Count::has_learn_user_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item_Count::set_has_learn_user_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item_Count::clear_has_learn_user_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item_Count::clear_learn_user_cnt() {
  learn_user_cnt_ = 0;
  clear_has_learn_user_cnt();
}
inline ::google::protobuf::int32 Item_Count::learn_user_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Count.learn_user_cnt)
  return learn_user_cnt_;
}
inline void Item_Count::set_learn_user_cnt(::google::protobuf::int32 value) {
  set_has_learn_user_cnt();
  learn_user_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Count.learn_user_cnt)
}

// required int32 comment_cnt = 3;
inline bool Item_Count::has_comment_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item_Count::set_has_comment_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item_Count::clear_has_comment_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item_Count::clear_comment_cnt() {
  comment_cnt_ = 0;
  clear_has_comment_cnt();
}
inline ::google::protobuf::int32 Item_Count::comment_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Count.comment_cnt)
  return comment_cnt_;
}
inline void Item_Count::set_comment_cnt(::google::protobuf::int32 value) {
  set_has_comment_cnt();
  comment_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Count.comment_cnt)
}

// required int32 comment_user_cnt = 4;
inline bool Item_Count::has_comment_user_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item_Count::set_has_comment_user_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item_Count::clear_has_comment_user_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item_Count::clear_comment_user_cnt() {
  comment_user_cnt_ = 0;
  clear_has_comment_user_cnt();
}
inline ::google::protobuf::int32 Item_Count::comment_user_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Count.comment_user_cnt)
  return comment_user_cnt_;
}
inline void Item_Count::set_comment_user_cnt(::google::protobuf::int32 value) {
  set_has_comment_user_cnt();
  comment_user_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Count.comment_user_cnt)
}

// required int32 score_number = 5;
inline bool Item_Count::has_score_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Item_Count::set_has_score_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Item_Count::clear_has_score_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Item_Count::clear_score_number() {
  score_number_ = 0;
  clear_has_score_number();
}
inline ::google::protobuf::int32 Item_Count::score_number() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Count.score_number)
  return score_number_;
}
inline void Item_Count::set_score_number(::google::protobuf::int32 value) {
  set_has_score_number();
  score_number_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Count.score_number)
}

// required int32 score_user_cnt = 6;
inline bool Item_Count::has_score_user_cnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Item_Count::set_has_score_user_cnt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Item_Count::clear_has_score_user_cnt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Item_Count::clear_score_user_cnt() {
  score_user_cnt_ = 0;
  clear_has_score_user_cnt();
}
inline ::google::protobuf::int32 Item_Count::score_user_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Count.score_user_cnt)
  return score_user_cnt_;
}
inline void Item_Count::set_score_user_cnt(::google::protobuf::int32 value) {
  set_has_score_user_cnt();
  score_user_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Count.score_user_cnt)
}

// required int32 like_cnt = 7;
inline bool Item_Count::has_like_cnt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Item_Count::set_has_like_cnt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Item_Count::clear_has_like_cnt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Item_Count::clear_like_cnt() {
  like_cnt_ = 0;
  clear_has_like_cnt();
}
inline ::google::protobuf::int32 Item_Count::like_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Count.like_cnt)
  return like_cnt_;
}
inline void Item_Count::set_like_cnt(::google::protobuf::int32 value) {
  set_has_like_cnt();
  like_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Count.like_cnt)
}

// required int32 share_cnt = 8;
inline bool Item_Count::has_share_cnt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Item_Count::set_has_share_cnt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Item_Count::clear_has_share_cnt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Item_Count::clear_share_cnt() {
  share_cnt_ = 0;
  clear_has_share_cnt();
}
inline ::google::protobuf::int32 Item_Count::share_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.Count.share_cnt)
  return share_cnt_;
}
inline void Item_Count::set_share_cnt(::google::protobuf::int32 value) {
  set_has_share_cnt();
  share_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.Count.share_cnt)
}

// -------------------------------------------------------------------

// Item_User

// required int64 user_id = 1;
inline bool Item_User::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item_User::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item_User::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item_User::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 Item_User::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.User.user_id)
  return user_id_;
}
inline void Item_User::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.User.user_id)
}

// optional bool is_learn = 2;
inline bool Item_User::has_is_learn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item_User::set_has_is_learn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item_User::clear_has_is_learn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item_User::clear_is_learn() {
  is_learn_ = false;
  clear_has_is_learn();
}
inline bool Item_User::is_learn() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.User.is_learn)
  return is_learn_;
}
inline void Item_User::set_is_learn(bool value) {
  set_has_is_learn();
  is_learn_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.User.is_learn)
}

// optional bool is_comment = 3;
inline bool Item_User::has_is_comment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item_User::set_has_is_comment() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item_User::clear_has_is_comment() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item_User::clear_is_comment() {
  is_comment_ = false;
  clear_has_is_comment();
}
inline bool Item_User::is_comment() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.User.is_comment)
  return is_comment_;
}
inline void Item_User::set_is_comment(bool value) {
  set_has_is_comment();
  is_comment_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.User.is_comment)
}

// optional bool is_score = 4;
inline bool Item_User::has_is_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item_User::set_has_is_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item_User::clear_has_is_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item_User::clear_is_score() {
  is_score_ = false;
  clear_has_is_score();
}
inline bool Item_User::is_score() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.User.is_score)
  return is_score_;
}
inline void Item_User::set_is_score(bool value) {
  set_has_is_score();
  is_score_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.User.is_score)
}

// optional bool is_like = 5;
inline bool Item_User::has_is_like() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Item_User::set_has_is_like() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Item_User::clear_has_is_like() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Item_User::clear_is_like() {
  is_like_ = false;
  clear_has_is_like();
}
inline bool Item_User::is_like() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.User.is_like)
  return is_like_;
}
inline void Item_User::set_is_like(bool value) {
  set_has_is_like();
  is_like_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.User.is_like)
}

// optional bool is_share = 6;
inline bool Item_User::has_is_share() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Item_User::set_has_is_share() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Item_User::clear_has_is_share() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Item_User::clear_is_share() {
  is_share_ = false;
  clear_has_is_share();
}
inline bool Item_User::is_share() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.User.is_share)
  return is_share_;
}
inline void Item_User::set_is_share(bool value) {
  set_has_is_share();
  is_share_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.Item.User.is_share)
}

// -------------------------------------------------------------------

// Item

// required .weizhu.discover_v2.Item.Base base = 1;
inline bool Item::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_base() {
  if (base_ != NULL) base_->::weizhu::discover_v2::Item_Base::Clear();
  clear_has_base();
}
inline const ::weizhu::discover_v2::Item_Base& Item::base() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.base)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return base_ != NULL ? *base_ : *default_instance().base_;
#else
  return base_ != NULL ? *base_ : *default_instance_->base_;
#endif
}
inline ::weizhu::discover_v2::Item_Base* Item::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::weizhu::discover_v2::Item_Base;
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Item.base)
  return base_;
}
inline ::weizhu::discover_v2::Item_Base* Item::release_base() {
  clear_has_base();
  ::weizhu::discover_v2::Item_Base* temp = base_;
  base_ = NULL;
  return temp;
}
inline void Item::set_allocated_base(::weizhu::discover_v2::Item_Base* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Item.base)
}

// required .weizhu.discover_v2.Item.Count count = 2;
inline bool Item::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_count() {
  if (count_ != NULL) count_->::weizhu::discover_v2::Item_Count::Clear();
  clear_has_count();
}
inline const ::weizhu::discover_v2::Item_Count& Item::count() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.count)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return count_ != NULL ? *count_ : *default_instance().count_;
#else
  return count_ != NULL ? *count_ : *default_instance_->count_;
#endif
}
inline ::weizhu::discover_v2::Item_Count* Item::mutable_count() {
  set_has_count();
  if (count_ == NULL) count_ = new ::weizhu::discover_v2::Item_Count;
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Item.count)
  return count_;
}
inline ::weizhu::discover_v2::Item_Count* Item::release_count() {
  clear_has_count();
  ::weizhu::discover_v2::Item_Count* temp = count_;
  count_ = NULL;
  return temp;
}
inline void Item::set_allocated_count(::weizhu::discover_v2::Item_Count* count) {
  delete count_;
  count_ = count;
  if (count) {
    set_has_count();
  } else {
    clear_has_count();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Item.count)
}

// optional .weizhu.discover_v2.Item.User user = 3;
inline bool Item::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_user() {
  if (user_ != NULL) user_->::weizhu::discover_v2::Item_User::Clear();
  clear_has_user();
}
inline const ::weizhu::discover_v2::Item_User& Item::user() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.Item.user)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return user_ != NULL ? *user_ : *default_instance().user_;
#else
  return user_ != NULL ? *user_ : *default_instance_->user_;
#endif
}
inline ::weizhu::discover_v2::Item_User* Item::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::weizhu::discover_v2::Item_User;
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.Item.user)
  return user_;
}
inline ::weizhu::discover_v2::Item_User* Item::release_user() {
  clear_has_user();
  ::weizhu::discover_v2::Item_User* temp = user_;
  user_ = NULL;
  return temp;
}
inline void Item::set_allocated_user(::weizhu::discover_v2::Item_User* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.Item.user)
}

// -------------------------------------------------------------------

// ItemLearn

// required int64 item_id = 1;
inline bool ItemLearn::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemLearn::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemLearn::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemLearn::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 ItemLearn::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemLearn.item_id)
  return item_id_;
}
inline void ItemLearn::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemLearn.item_id)
}

// required int64 user_id = 2;
inline bool ItemLearn::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemLearn::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemLearn::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemLearn::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 ItemLearn::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemLearn.user_id)
  return user_id_;
}
inline void ItemLearn::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemLearn.user_id)
}

// required int32 learn_time = 3;
inline bool ItemLearn::has_learn_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemLearn::set_has_learn_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemLearn::clear_has_learn_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemLearn::clear_learn_time() {
  learn_time_ = 0;
  clear_has_learn_time();
}
inline ::google::protobuf::int32 ItemLearn::learn_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemLearn.learn_time)
  return learn_time_;
}
inline void ItemLearn::set_learn_time(::google::protobuf::int32 value) {
  set_has_learn_time();
  learn_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemLearn.learn_time)
}

// required int32 learn_duration = 4;
inline bool ItemLearn::has_learn_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemLearn::set_has_learn_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemLearn::clear_has_learn_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemLearn::clear_learn_duration() {
  learn_duration_ = 0;
  clear_has_learn_duration();
}
inline ::google::protobuf::int32 ItemLearn::learn_duration() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemLearn.learn_duration)
  return learn_duration_;
}
inline void ItemLearn::set_learn_duration(::google::protobuf::int32 value) {
  set_has_learn_duration();
  learn_duration_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemLearn.learn_duration)
}

// required int32 learn_cnt = 5;
inline bool ItemLearn::has_learn_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemLearn::set_has_learn_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemLearn::clear_has_learn_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemLearn::clear_learn_cnt() {
  learn_cnt_ = 0;
  clear_has_learn_cnt();
}
inline ::google::protobuf::int32 ItemLearn::learn_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemLearn.learn_cnt)
  return learn_cnt_;
}
inline void ItemLearn::set_learn_cnt(::google::protobuf::int32 value) {
  set_has_learn_cnt();
  learn_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemLearn.learn_cnt)
}

// -------------------------------------------------------------------

// ItemComment

// required int64 comment_id = 1;
inline bool ItemComment::has_comment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemComment::set_has_comment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemComment::clear_has_comment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemComment::clear_comment_id() {
  comment_id_ = GOOGLE_LONGLONG(0);
  clear_has_comment_id();
}
inline ::google::protobuf::int64 ItemComment::comment_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemComment.comment_id)
  return comment_id_;
}
inline void ItemComment::set_comment_id(::google::protobuf::int64 value) {
  set_has_comment_id();
  comment_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemComment.comment_id)
}

// required int64 item_id = 2;
inline bool ItemComment::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemComment::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemComment::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemComment::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 ItemComment::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemComment.item_id)
  return item_id_;
}
inline void ItemComment::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemComment.item_id)
}

// required int64 user_id = 3;
inline bool ItemComment::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemComment::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemComment::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemComment::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 ItemComment::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemComment.user_id)
  return user_id_;
}
inline void ItemComment::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemComment.user_id)
}

// required int32 comment_time = 4;
inline bool ItemComment::has_comment_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemComment::set_has_comment_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemComment::clear_has_comment_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemComment::clear_comment_time() {
  comment_time_ = 0;
  clear_has_comment_time();
}
inline ::google::protobuf::int32 ItemComment::comment_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemComment.comment_time)
  return comment_time_;
}
inline void ItemComment::set_comment_time(::google::protobuf::int32 value) {
  set_has_comment_time();
  comment_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemComment.comment_time)
}

// required string comment_text = 5;
inline bool ItemComment::has_comment_text() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemComment::set_has_comment_text() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemComment::clear_has_comment_text() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemComment::clear_comment_text() {
  if (comment_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_text_->clear();
  }
  clear_has_comment_text();
}
inline const ::std::string& ItemComment::comment_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemComment.comment_text)
  return *comment_text_;
}
inline void ItemComment::set_comment_text(const ::std::string& value) {
  set_has_comment_text();
  if (comment_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_text_ = new ::std::string;
  }
  comment_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemComment.comment_text)
}
inline void ItemComment::set_comment_text(const char* value) {
  set_has_comment_text();
  if (comment_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_text_ = new ::std::string;
  }
  comment_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.ItemComment.comment_text)
}
inline void ItemComment::set_comment_text(const char* value, size_t size) {
  set_has_comment_text();
  if (comment_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_text_ = new ::std::string;
  }
  comment_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.ItemComment.comment_text)
}
inline ::std::string* ItemComment::mutable_comment_text() {
  set_has_comment_text();
  if (comment_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.ItemComment.comment_text)
  return comment_text_;
}
inline ::std::string* ItemComment::release_comment_text() {
  clear_has_comment_text();
  if (comment_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_text_;
    comment_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ItemComment::set_allocated_comment_text(::std::string* comment_text) {
  if (comment_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_text_;
  }
  if (comment_text) {
    set_has_comment_text();
    comment_text_ = comment_text;
  } else {
    clear_has_comment_text();
    comment_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.ItemComment.comment_text)
}

// required bool is_delete = 6;
inline bool ItemComment::has_is_delete() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemComment::set_has_is_delete() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemComment::clear_has_is_delete() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemComment::clear_is_delete() {
  is_delete_ = false;
  clear_has_is_delete();
}
inline bool ItemComment::is_delete() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemComment.is_delete)
  return is_delete_;
}
inline void ItemComment::set_is_delete(bool value) {
  set_has_is_delete();
  is_delete_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemComment.is_delete)
}

// -------------------------------------------------------------------

// ItemScore

// required int64 item_id = 1;
inline bool ItemScore::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemScore::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemScore::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemScore::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 ItemScore::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemScore.item_id)
  return item_id_;
}
inline void ItemScore::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemScore.item_id)
}

// required int64 user_id = 2;
inline bool ItemScore::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemScore::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemScore::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemScore::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 ItemScore::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemScore.user_id)
  return user_id_;
}
inline void ItemScore::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemScore.user_id)
}

// required int32 score_time = 3;
inline bool ItemScore::has_score_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemScore::set_has_score_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemScore::clear_has_score_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemScore::clear_score_time() {
  score_time_ = 0;
  clear_has_score_time();
}
inline ::google::protobuf::int32 ItemScore::score_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemScore.score_time)
  return score_time_;
}
inline void ItemScore::set_score_time(::google::protobuf::int32 value) {
  set_has_score_time();
  score_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemScore.score_time)
}

// required int32 score_number = 4;
inline bool ItemScore::has_score_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemScore::set_has_score_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemScore::clear_has_score_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemScore::clear_score_number() {
  score_number_ = 0;
  clear_has_score_number();
}
inline ::google::protobuf::int32 ItemScore::score_number() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemScore.score_number)
  return score_number_;
}
inline void ItemScore::set_score_number(::google::protobuf::int32 value) {
  set_has_score_number();
  score_number_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemScore.score_number)
}

// -------------------------------------------------------------------

// ItemLike

// required int64 item_id = 1;
inline bool ItemLike::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemLike::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemLike::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemLike::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 ItemLike::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemLike.item_id)
  return item_id_;
}
inline void ItemLike::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemLike.item_id)
}

// required int64 user_id = 2;
inline bool ItemLike::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemLike::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemLike::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemLike::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 ItemLike::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemLike.user_id)
  return user_id_;
}
inline void ItemLike::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemLike.user_id)
}

// required int32 like_time = 3;
inline bool ItemLike::has_like_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemLike::set_has_like_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemLike::clear_has_like_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemLike::clear_like_time() {
  like_time_ = 0;
  clear_has_like_time();
}
inline ::google::protobuf::int32 ItemLike::like_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemLike.like_time)
  return like_time_;
}
inline void ItemLike::set_like_time(::google::protobuf::int32 value) {
  set_has_like_time();
  like_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemLike.like_time)
}

// -------------------------------------------------------------------

// ItemShare

// required int64 item_id = 1;
inline bool ItemShare::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemShare::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemShare::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemShare::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 ItemShare::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemShare.item_id)
  return item_id_;
}
inline void ItemShare::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemShare.item_id)
}

// required int64 user_id = 2;
inline bool ItemShare::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemShare::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemShare::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemShare::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 ItemShare::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemShare.user_id)
  return user_id_;
}
inline void ItemShare::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemShare.user_id)
}

// required int32 share_time = 3;
inline bool ItemShare::has_share_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemShare::set_has_share_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemShare::clear_has_share_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemShare::clear_share_time() {
  share_time_ = 0;
  clear_has_share_time();
}
inline ::google::protobuf::int32 ItemShare::share_time() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ItemShare.share_time)
  return share_time_;
}
inline void ItemShare::set_share_time(::google::protobuf::int32 value) {
  set_has_share_time();
  share_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ItemShare.share_time)
}

// -------------------------------------------------------------------

// GetDiscoverHomeRequest

// repeated bytes prompt_index = 1;
inline int GetDiscoverHomeRequest::prompt_index_size() const {
  return prompt_index_.size();
}
inline void GetDiscoverHomeRequest::clear_prompt_index() {
  prompt_index_.Clear();
}
inline const ::std::string& GetDiscoverHomeRequest::prompt_index(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetDiscoverHomeRequest.prompt_index)
  return prompt_index_.Get(index);
}
inline ::std::string* GetDiscoverHomeRequest::mutable_prompt_index(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetDiscoverHomeRequest.prompt_index)
  return prompt_index_.Mutable(index);
}
inline void GetDiscoverHomeRequest::set_prompt_index(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetDiscoverHomeRequest.prompt_index)
  prompt_index_.Mutable(index)->assign(value);
}
inline void GetDiscoverHomeRequest::set_prompt_index(int index, const char* value) {
  prompt_index_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetDiscoverHomeRequest.prompt_index)
}
inline void GetDiscoverHomeRequest::set_prompt_index(int index, const void* value, size_t size) {
  prompt_index_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetDiscoverHomeRequest.prompt_index)
}
inline ::std::string* GetDiscoverHomeRequest::add_prompt_index() {
  return prompt_index_.Add();
}
inline void GetDiscoverHomeRequest::add_prompt_index(const ::std::string& value) {
  prompt_index_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetDiscoverHomeRequest.prompt_index)
}
inline void GetDiscoverHomeRequest::add_prompt_index(const char* value) {
  prompt_index_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:weizhu.discover_v2.GetDiscoverHomeRequest.prompt_index)
}
inline void GetDiscoverHomeRequest::add_prompt_index(const void* value, size_t size) {
  prompt_index_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:weizhu.discover_v2.GetDiscoverHomeRequest.prompt_index)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetDiscoverHomeRequest::prompt_index() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetDiscoverHomeRequest.prompt_index)
  return prompt_index_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetDiscoverHomeRequest::mutable_prompt_index() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetDiscoverHomeRequest.prompt_index)
  return &prompt_index_;
}

// -------------------------------------------------------------------

// GetDiscoverHomeResponse

// repeated .weizhu.discover_v2.Banner banner = 1;
inline int GetDiscoverHomeResponse::banner_size() const {
  return banner_.size();
}
inline void GetDiscoverHomeResponse::clear_banner() {
  banner_.Clear();
}
inline const ::weizhu::discover_v2::Banner& GetDiscoverHomeResponse::banner(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetDiscoverHomeResponse.banner)
  return banner_.Get(index);
}
inline ::weizhu::discover_v2::Banner* GetDiscoverHomeResponse::mutable_banner(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetDiscoverHomeResponse.banner)
  return banner_.Mutable(index);
}
inline ::weizhu::discover_v2::Banner* GetDiscoverHomeResponse::add_banner() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetDiscoverHomeResponse.banner)
  return banner_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Banner >&
GetDiscoverHomeResponse::banner() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetDiscoverHomeResponse.banner)
  return banner_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Banner >*
GetDiscoverHomeResponse::mutable_banner() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetDiscoverHomeResponse.banner)
  return &banner_;
}

// repeated .weizhu.discover_v2.Module module = 2;
inline int GetDiscoverHomeResponse::module_size() const {
  return module_.size();
}
inline void GetDiscoverHomeResponse::clear_module() {
  module_.Clear();
}
inline const ::weizhu::discover_v2::Module& GetDiscoverHomeResponse::module(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetDiscoverHomeResponse.module)
  return module_.Get(index);
}
inline ::weizhu::discover_v2::Module* GetDiscoverHomeResponse::mutable_module(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetDiscoverHomeResponse.module)
  return module_.Mutable(index);
}
inline ::weizhu::discover_v2::Module* GetDiscoverHomeResponse::add_module() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetDiscoverHomeResponse.module)
  return module_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Module >&
GetDiscoverHomeResponse::module() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetDiscoverHomeResponse.module)
  return module_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Module >*
GetDiscoverHomeResponse::mutable_module() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetDiscoverHomeResponse.module)
  return &module_;
}

// repeated .weizhu.discover_v2.Item ref_item = 3;
inline int GetDiscoverHomeResponse::ref_item_size() const {
  return ref_item_.size();
}
inline void GetDiscoverHomeResponse::clear_ref_item() {
  ref_item_.Clear();
}
inline const ::weizhu::discover_v2::Item& GetDiscoverHomeResponse::ref_item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetDiscoverHomeResponse.ref_item)
  return ref_item_.Get(index);
}
inline ::weizhu::discover_v2::Item* GetDiscoverHomeResponse::mutable_ref_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetDiscoverHomeResponse.ref_item)
  return ref_item_.Mutable(index);
}
inline ::weizhu::discover_v2::Item* GetDiscoverHomeResponse::add_ref_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetDiscoverHomeResponse.ref_item)
  return ref_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
GetDiscoverHomeResponse::ref_item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetDiscoverHomeResponse.ref_item)
  return ref_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
GetDiscoverHomeResponse::mutable_ref_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetDiscoverHomeResponse.ref_item)
  return &ref_item_;
}

// -------------------------------------------------------------------

// GetModuleCategoryItemListRequest

// required int32 module_id = 1;
inline bool GetModuleCategoryItemListRequest::has_module_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetModuleCategoryItemListRequest::set_has_module_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetModuleCategoryItemListRequest::clear_has_module_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetModuleCategoryItemListRequest::clear_module_id() {
  module_id_ = 0;
  clear_has_module_id();
}
inline ::google::protobuf::int32 GetModuleCategoryItemListRequest::module_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetModuleCategoryItemListRequest.module_id)
  return module_id_;
}
inline void GetModuleCategoryItemListRequest::set_module_id(::google::protobuf::int32 value) {
  set_has_module_id();
  module_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetModuleCategoryItemListRequest.module_id)
}

// required int32 category_id = 2;
inline bool GetModuleCategoryItemListRequest::has_category_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetModuleCategoryItemListRequest::set_has_category_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetModuleCategoryItemListRequest::clear_has_category_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetModuleCategoryItemListRequest::clear_category_id() {
  category_id_ = 0;
  clear_has_category_id();
}
inline ::google::protobuf::int32 GetModuleCategoryItemListRequest::category_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetModuleCategoryItemListRequest.category_id)
  return category_id_;
}
inline void GetModuleCategoryItemListRequest::set_category_id(::google::protobuf::int32 value) {
  set_has_category_id();
  category_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetModuleCategoryItemListRequest.category_id)
}

// required int32 item_size = 3;
inline bool GetModuleCategoryItemListRequest::has_item_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetModuleCategoryItemListRequest::set_has_item_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetModuleCategoryItemListRequest::clear_has_item_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetModuleCategoryItemListRequest::clear_item_size() {
  item_size_ = 0;
  clear_has_item_size();
}
inline ::google::protobuf::int32 GetModuleCategoryItemListRequest::item_size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetModuleCategoryItemListRequest.item_size)
  return item_size_;
}
inline void GetModuleCategoryItemListRequest::set_item_size(::google::protobuf::int32 value) {
  set_has_item_size();
  item_size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetModuleCategoryItemListRequest.item_size)
}

// optional bytes offset_index = 4;
inline bool GetModuleCategoryItemListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetModuleCategoryItemListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetModuleCategoryItemListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetModuleCategoryItemListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetModuleCategoryItemListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetModuleCategoryItemListRequest.offset_index)
  return *offset_index_;
}
inline void GetModuleCategoryItemListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetModuleCategoryItemListRequest.offset_index)
}
inline void GetModuleCategoryItemListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetModuleCategoryItemListRequest.offset_index)
}
inline void GetModuleCategoryItemListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetModuleCategoryItemListRequest.offset_index)
}
inline ::std::string* GetModuleCategoryItemListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetModuleCategoryItemListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetModuleCategoryItemListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetModuleCategoryItemListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetModuleCategoryItemListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetModuleCategoryItemListResponse

// repeated .weizhu.discover_v2.Item item = 1;
inline int GetModuleCategoryItemListResponse::item_size() const {
  return item_.size();
}
inline void GetModuleCategoryItemListResponse::clear_item() {
  item_.Clear();
}
inline const ::weizhu::discover_v2::Item& GetModuleCategoryItemListResponse::item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetModuleCategoryItemListResponse.item)
  return item_.Get(index);
}
inline ::weizhu::discover_v2::Item* GetModuleCategoryItemListResponse::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetModuleCategoryItemListResponse.item)
  return item_.Mutable(index);
}
inline ::weizhu::discover_v2::Item* GetModuleCategoryItemListResponse::add_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetModuleCategoryItemListResponse.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
GetModuleCategoryItemListResponse::item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetModuleCategoryItemListResponse.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
GetModuleCategoryItemListResponse::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetModuleCategoryItemListResponse.item)
  return &item_;
}

// required bool has_more = 2;
inline bool GetModuleCategoryItemListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetModuleCategoryItemListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetModuleCategoryItemListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetModuleCategoryItemListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetModuleCategoryItemListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetModuleCategoryItemListResponse.has_more)
  return has_more_;
}
inline void GetModuleCategoryItemListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetModuleCategoryItemListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetModuleCategoryItemListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetModuleCategoryItemListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetModuleCategoryItemListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetModuleCategoryItemListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetModuleCategoryItemListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetModuleCategoryItemListResponse.offset_index)
  return *offset_index_;
}
inline void GetModuleCategoryItemListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetModuleCategoryItemListResponse.offset_index)
}
inline void GetModuleCategoryItemListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetModuleCategoryItemListResponse.offset_index)
}
inline void GetModuleCategoryItemListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetModuleCategoryItemListResponse.offset_index)
}
inline ::std::string* GetModuleCategoryItemListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetModuleCategoryItemListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetModuleCategoryItemListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetModuleCategoryItemListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetModuleCategoryItemListResponse.offset_index)
}

// optional bytes prompt_index = 4;
inline bool GetModuleCategoryItemListResponse::has_prompt_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetModuleCategoryItemListResponse::set_has_prompt_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetModuleCategoryItemListResponse::clear_has_prompt_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetModuleCategoryItemListResponse::clear_prompt_index() {
  if (prompt_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prompt_index_->clear();
  }
  clear_has_prompt_index();
}
inline const ::std::string& GetModuleCategoryItemListResponse::prompt_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetModuleCategoryItemListResponse.prompt_index)
  return *prompt_index_;
}
inline void GetModuleCategoryItemListResponse::set_prompt_index(const ::std::string& value) {
  set_has_prompt_index();
  if (prompt_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prompt_index_ = new ::std::string;
  }
  prompt_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetModuleCategoryItemListResponse.prompt_index)
}
inline void GetModuleCategoryItemListResponse::set_prompt_index(const char* value) {
  set_has_prompt_index();
  if (prompt_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prompt_index_ = new ::std::string;
  }
  prompt_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetModuleCategoryItemListResponse.prompt_index)
}
inline void GetModuleCategoryItemListResponse::set_prompt_index(const void* value, size_t size) {
  set_has_prompt_index();
  if (prompt_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prompt_index_ = new ::std::string;
  }
  prompt_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetModuleCategoryItemListResponse.prompt_index)
}
inline ::std::string* GetModuleCategoryItemListResponse::mutable_prompt_index() {
  set_has_prompt_index();
  if (prompt_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prompt_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetModuleCategoryItemListResponse.prompt_index)
  return prompt_index_;
}
inline ::std::string* GetModuleCategoryItemListResponse::release_prompt_index() {
  clear_has_prompt_index();
  if (prompt_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = prompt_index_;
    prompt_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetModuleCategoryItemListResponse::set_allocated_prompt_index(::std::string* prompt_index) {
  if (prompt_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete prompt_index_;
  }
  if (prompt_index) {
    set_has_prompt_index();
    prompt_index_ = prompt_index;
  } else {
    clear_has_prompt_index();
    prompt_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetModuleCategoryItemListResponse.prompt_index)
}

// -------------------------------------------------------------------

// GetModulePromptIndexRequest

// required int32 module_id = 1;
inline bool GetModulePromptIndexRequest::has_module_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetModulePromptIndexRequest::set_has_module_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetModulePromptIndexRequest::clear_has_module_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetModulePromptIndexRequest::clear_module_id() {
  module_id_ = 0;
  clear_has_module_id();
}
inline ::google::protobuf::int32 GetModulePromptIndexRequest::module_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetModulePromptIndexRequest.module_id)
  return module_id_;
}
inline void GetModulePromptIndexRequest::set_module_id(::google::protobuf::int32 value) {
  set_has_module_id();
  module_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetModulePromptIndexRequest.module_id)
}

// -------------------------------------------------------------------

// GetModulePromptIndexResponse

// optional bytes prompt_index = 1;
inline bool GetModulePromptIndexResponse::has_prompt_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetModulePromptIndexResponse::set_has_prompt_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetModulePromptIndexResponse::clear_has_prompt_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetModulePromptIndexResponse::clear_prompt_index() {
  if (prompt_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prompt_index_->clear();
  }
  clear_has_prompt_index();
}
inline const ::std::string& GetModulePromptIndexResponse::prompt_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetModulePromptIndexResponse.prompt_index)
  return *prompt_index_;
}
inline void GetModulePromptIndexResponse::set_prompt_index(const ::std::string& value) {
  set_has_prompt_index();
  if (prompt_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prompt_index_ = new ::std::string;
  }
  prompt_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetModulePromptIndexResponse.prompt_index)
}
inline void GetModulePromptIndexResponse::set_prompt_index(const char* value) {
  set_has_prompt_index();
  if (prompt_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prompt_index_ = new ::std::string;
  }
  prompt_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetModulePromptIndexResponse.prompt_index)
}
inline void GetModulePromptIndexResponse::set_prompt_index(const void* value, size_t size) {
  set_has_prompt_index();
  if (prompt_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prompt_index_ = new ::std::string;
  }
  prompt_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetModulePromptIndexResponse.prompt_index)
}
inline ::std::string* GetModulePromptIndexResponse::mutable_prompt_index() {
  set_has_prompt_index();
  if (prompt_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prompt_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetModulePromptIndexResponse.prompt_index)
  return prompt_index_;
}
inline ::std::string* GetModulePromptIndexResponse::release_prompt_index() {
  clear_has_prompt_index();
  if (prompt_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = prompt_index_;
    prompt_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetModulePromptIndexResponse::set_allocated_prompt_index(::std::string* prompt_index) {
  if (prompt_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete prompt_index_;
  }
  if (prompt_index) {
    set_has_prompt_index();
    prompt_index_ = prompt_index;
  } else {
    clear_has_prompt_index();
    prompt_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetModulePromptIndexResponse.prompt_index)
}

// -------------------------------------------------------------------

// GetItemByIdRequest

// repeated int64 item_id = 1;
inline int GetItemByIdRequest::item_id_size() const {
  return item_id_.size();
}
inline void GetItemByIdRequest::clear_item_id() {
  item_id_.Clear();
}
inline ::google::protobuf::int64 GetItemByIdRequest::item_id(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemByIdRequest.item_id)
  return item_id_.Get(index);
}
inline void GetItemByIdRequest::set_item_id(int index, ::google::protobuf::int64 value) {
  item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemByIdRequest.item_id)
}
inline void GetItemByIdRequest::add_item_id(::google::protobuf::int64 value) {
  item_id_.Add(value);
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetItemByIdRequest.item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetItemByIdRequest::item_id() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetItemByIdRequest.item_id)
  return item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetItemByIdRequest::mutable_item_id() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetItemByIdRequest.item_id)
  return &item_id_;
}

// -------------------------------------------------------------------

// GetItemByIdResponse

// repeated .weizhu.discover_v2.Item item = 1;
inline int GetItemByIdResponse::item_size() const {
  return item_.size();
}
inline void GetItemByIdResponse::clear_item() {
  item_.Clear();
}
inline const ::weizhu::discover_v2::Item& GetItemByIdResponse::item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemByIdResponse.item)
  return item_.Get(index);
}
inline ::weizhu::discover_v2::Item* GetItemByIdResponse::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemByIdResponse.item)
  return item_.Mutable(index);
}
inline ::weizhu::discover_v2::Item* GetItemByIdResponse::add_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetItemByIdResponse.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
GetItemByIdResponse::item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetItemByIdResponse.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
GetItemByIdResponse::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetItemByIdResponse.item)
  return &item_;
}

// -------------------------------------------------------------------

// GetItemLearnListRequest

// required int64 item_id = 1;
inline bool GetItemLearnListRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemLearnListRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemLearnListRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemLearnListRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 GetItemLearnListRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLearnListRequest.item_id)
  return item_id_;
}
inline void GetItemLearnListRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLearnListRequest.item_id)
}

// required int32 size = 2;
inline bool GetItemLearnListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemLearnListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemLearnListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemLearnListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetItemLearnListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLearnListRequest.size)
  return size_;
}
inline void GetItemLearnListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLearnListRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetItemLearnListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemLearnListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemLearnListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemLearnListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemLearnListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLearnListRequest.offset_index)
  return *offset_index_;
}
inline void GetItemLearnListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLearnListRequest.offset_index)
}
inline void GetItemLearnListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemLearnListRequest.offset_index)
}
inline void GetItemLearnListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemLearnListRequest.offset_index)
}
inline ::std::string* GetItemLearnListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemLearnListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemLearnListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemLearnListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemLearnListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetItemLearnListResponse

// repeated .weizhu.discover_v2.ItemLearn item_learn = 1;
inline int GetItemLearnListResponse::item_learn_size() const {
  return item_learn_.size();
}
inline void GetItemLearnListResponse::clear_item_learn() {
  item_learn_.Clear();
}
inline const ::weizhu::discover_v2::ItemLearn& GetItemLearnListResponse::item_learn(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLearnListResponse.item_learn)
  return item_learn_.Get(index);
}
inline ::weizhu::discover_v2::ItemLearn* GetItemLearnListResponse::mutable_item_learn(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemLearnListResponse.item_learn)
  return item_learn_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemLearn* GetItemLearnListResponse::add_item_learn() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetItemLearnListResponse.item_learn)
  return item_learn_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >&
GetItemLearnListResponse::item_learn() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetItemLearnListResponse.item_learn)
  return item_learn_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >*
GetItemLearnListResponse::mutable_item_learn() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetItemLearnListResponse.item_learn)
  return &item_learn_;
}

// required bool has_more = 2;
inline bool GetItemLearnListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemLearnListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemLearnListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemLearnListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetItemLearnListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLearnListResponse.has_more)
  return has_more_;
}
inline void GetItemLearnListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLearnListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetItemLearnListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemLearnListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemLearnListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemLearnListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemLearnListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLearnListResponse.offset_index)
  return *offset_index_;
}
inline void GetItemLearnListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLearnListResponse.offset_index)
}
inline void GetItemLearnListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemLearnListResponse.offset_index)
}
inline void GetItemLearnListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemLearnListResponse.offset_index)
}
inline ::std::string* GetItemLearnListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemLearnListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemLearnListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemLearnListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemLearnListResponse.offset_index)
}

// optional int32 item_learn_cnt = 4;
inline bool GetItemLearnListResponse::has_item_learn_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetItemLearnListResponse::set_has_item_learn_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetItemLearnListResponse::clear_has_item_learn_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetItemLearnListResponse::clear_item_learn_cnt() {
  item_learn_cnt_ = 0;
  clear_has_item_learn_cnt();
}
inline ::google::protobuf::int32 GetItemLearnListResponse::item_learn_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLearnListResponse.item_learn_cnt)
  return item_learn_cnt_;
}
inline void GetItemLearnListResponse::set_item_learn_cnt(::google::protobuf::int32 value) {
  set_has_item_learn_cnt();
  item_learn_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLearnListResponse.item_learn_cnt)
}

// optional int32 item_learn_user_cnt = 5;
inline bool GetItemLearnListResponse::has_item_learn_user_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetItemLearnListResponse::set_has_item_learn_user_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetItemLearnListResponse::clear_has_item_learn_user_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetItemLearnListResponse::clear_item_learn_user_cnt() {
  item_learn_user_cnt_ = 0;
  clear_has_item_learn_user_cnt();
}
inline ::google::protobuf::int32 GetItemLearnListResponse::item_learn_user_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLearnListResponse.item_learn_user_cnt)
  return item_learn_user_cnt_;
}
inline void GetItemLearnListResponse::set_item_learn_user_cnt(::google::protobuf::int32 value) {
  set_has_item_learn_user_cnt();
  item_learn_user_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLearnListResponse.item_learn_user_cnt)
}

// optional .weizhu.discover_v2.ItemLearn user_item_learn = 6;
inline bool GetItemLearnListResponse::has_user_item_learn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetItemLearnListResponse::set_has_user_item_learn() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetItemLearnListResponse::clear_has_user_item_learn() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetItemLearnListResponse::clear_user_item_learn() {
  if (user_item_learn_ != NULL) user_item_learn_->::weizhu::discover_v2::ItemLearn::Clear();
  clear_has_user_item_learn();
}
inline const ::weizhu::discover_v2::ItemLearn& GetItemLearnListResponse::user_item_learn() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLearnListResponse.user_item_learn)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return user_item_learn_ != NULL ? *user_item_learn_ : *default_instance().user_item_learn_;
#else
  return user_item_learn_ != NULL ? *user_item_learn_ : *default_instance_->user_item_learn_;
#endif
}
inline ::weizhu::discover_v2::ItemLearn* GetItemLearnListResponse::mutable_user_item_learn() {
  set_has_user_item_learn();
  if (user_item_learn_ == NULL) user_item_learn_ = new ::weizhu::discover_v2::ItemLearn;
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemLearnListResponse.user_item_learn)
  return user_item_learn_;
}
inline ::weizhu::discover_v2::ItemLearn* GetItemLearnListResponse::release_user_item_learn() {
  clear_has_user_item_learn();
  ::weizhu::discover_v2::ItemLearn* temp = user_item_learn_;
  user_item_learn_ = NULL;
  return temp;
}
inline void GetItemLearnListResponse::set_allocated_user_item_learn(::weizhu::discover_v2::ItemLearn* user_item_learn) {
  delete user_item_learn_;
  user_item_learn_ = user_item_learn;
  if (user_item_learn) {
    set_has_user_item_learn();
  } else {
    clear_has_user_item_learn();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemLearnListResponse.user_item_learn)
}

// -------------------------------------------------------------------

// GetUserLearnListRequest

// required int64 user_id = 1;
inline bool GetUserLearnListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserLearnListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserLearnListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserLearnListRequest::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 GetUserLearnListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLearnListRequest.user_id)
  return user_id_;
}
inline void GetUserLearnListRequest::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserLearnListRequest.user_id)
}

// required int32 size = 2;
inline bool GetUserLearnListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserLearnListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserLearnListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserLearnListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetUserLearnListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLearnListRequest.size)
  return size_;
}
inline void GetUserLearnListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserLearnListRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetUserLearnListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserLearnListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserLearnListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserLearnListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetUserLearnListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLearnListRequest.offset_index)
  return *offset_index_;
}
inline void GetUserLearnListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserLearnListRequest.offset_index)
}
inline void GetUserLearnListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetUserLearnListRequest.offset_index)
}
inline void GetUserLearnListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetUserLearnListRequest.offset_index)
}
inline ::std::string* GetUserLearnListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserLearnListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetUserLearnListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserLearnListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetUserLearnListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetUserLearnListResponse

// repeated .weizhu.discover_v2.ItemLearn item_learn = 1;
inline int GetUserLearnListResponse::item_learn_size() const {
  return item_learn_.size();
}
inline void GetUserLearnListResponse::clear_item_learn() {
  item_learn_.Clear();
}
inline const ::weizhu::discover_v2::ItemLearn& GetUserLearnListResponse::item_learn(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLearnListResponse.item_learn)
  return item_learn_.Get(index);
}
inline ::weizhu::discover_v2::ItemLearn* GetUserLearnListResponse::mutable_item_learn(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserLearnListResponse.item_learn)
  return item_learn_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemLearn* GetUserLearnListResponse::add_item_learn() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetUserLearnListResponse.item_learn)
  return item_learn_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >&
GetUserLearnListResponse::item_learn() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetUserLearnListResponse.item_learn)
  return item_learn_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >*
GetUserLearnListResponse::mutable_item_learn() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetUserLearnListResponse.item_learn)
  return &item_learn_;
}

// required bool has_more = 2;
inline bool GetUserLearnListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserLearnListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserLearnListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserLearnListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetUserLearnListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLearnListResponse.has_more)
  return has_more_;
}
inline void GetUserLearnListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserLearnListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetUserLearnListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserLearnListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserLearnListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserLearnListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetUserLearnListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLearnListResponse.offset_index)
  return *offset_index_;
}
inline void GetUserLearnListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserLearnListResponse.offset_index)
}
inline void GetUserLearnListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetUserLearnListResponse.offset_index)
}
inline void GetUserLearnListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetUserLearnListResponse.offset_index)
}
inline ::std::string* GetUserLearnListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserLearnListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetUserLearnListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserLearnListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetUserLearnListResponse.offset_index)
}

// repeated .weizhu.discover_v2.Item ref_item = 4;
inline int GetUserLearnListResponse::ref_item_size() const {
  return ref_item_.size();
}
inline void GetUserLearnListResponse::clear_ref_item() {
  ref_item_.Clear();
}
inline const ::weizhu::discover_v2::Item& GetUserLearnListResponse::ref_item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLearnListResponse.ref_item)
  return ref_item_.Get(index);
}
inline ::weizhu::discover_v2::Item* GetUserLearnListResponse::mutable_ref_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserLearnListResponse.ref_item)
  return ref_item_.Mutable(index);
}
inline ::weizhu::discover_v2::Item* GetUserLearnListResponse::add_ref_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetUserLearnListResponse.ref_item)
  return ref_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
GetUserLearnListResponse::ref_item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetUserLearnListResponse.ref_item)
  return ref_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
GetUserLearnListResponse::mutable_ref_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetUserLearnListResponse.ref_item)
  return &ref_item_;
}

// -------------------------------------------------------------------

// GetItemCommentListRequest

// required int64 item_id = 1;
inline bool GetItemCommentListRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemCommentListRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemCommentListRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemCommentListRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 GetItemCommentListRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemCommentListRequest.item_id)
  return item_id_;
}
inline void GetItemCommentListRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemCommentListRequest.item_id)
}

// required int32 size = 2;
inline bool GetItemCommentListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemCommentListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemCommentListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemCommentListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetItemCommentListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemCommentListRequest.size)
  return size_;
}
inline void GetItemCommentListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemCommentListRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetItemCommentListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemCommentListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemCommentListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemCommentListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemCommentListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemCommentListRequest.offset_index)
  return *offset_index_;
}
inline void GetItemCommentListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemCommentListRequest.offset_index)
}
inline void GetItemCommentListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemCommentListRequest.offset_index)
}
inline void GetItemCommentListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemCommentListRequest.offset_index)
}
inline ::std::string* GetItemCommentListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemCommentListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemCommentListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemCommentListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemCommentListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetItemCommentListResponse

// repeated .weizhu.discover_v2.ItemComment item_comment = 1;
inline int GetItemCommentListResponse::item_comment_size() const {
  return item_comment_.size();
}
inline void GetItemCommentListResponse::clear_item_comment() {
  item_comment_.Clear();
}
inline const ::weizhu::discover_v2::ItemComment& GetItemCommentListResponse::item_comment(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemCommentListResponse.item_comment)
  return item_comment_.Get(index);
}
inline ::weizhu::discover_v2::ItemComment* GetItemCommentListResponse::mutable_item_comment(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemCommentListResponse.item_comment)
  return item_comment_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemComment* GetItemCommentListResponse::add_item_comment() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetItemCommentListResponse.item_comment)
  return item_comment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemComment >&
GetItemCommentListResponse::item_comment() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetItemCommentListResponse.item_comment)
  return item_comment_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemComment >*
GetItemCommentListResponse::mutable_item_comment() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetItemCommentListResponse.item_comment)
  return &item_comment_;
}

// required bool has_more = 2;
inline bool GetItemCommentListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemCommentListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemCommentListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemCommentListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetItemCommentListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemCommentListResponse.has_more)
  return has_more_;
}
inline void GetItemCommentListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemCommentListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetItemCommentListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemCommentListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemCommentListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemCommentListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemCommentListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemCommentListResponse.offset_index)
  return *offset_index_;
}
inline void GetItemCommentListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemCommentListResponse.offset_index)
}
inline void GetItemCommentListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemCommentListResponse.offset_index)
}
inline void GetItemCommentListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemCommentListResponse.offset_index)
}
inline ::std::string* GetItemCommentListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemCommentListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemCommentListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemCommentListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemCommentListResponse.offset_index)
}

// optional int32 item_comment_cnt = 4;
inline bool GetItemCommentListResponse::has_item_comment_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetItemCommentListResponse::set_has_item_comment_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetItemCommentListResponse::clear_has_item_comment_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetItemCommentListResponse::clear_item_comment_cnt() {
  item_comment_cnt_ = 0;
  clear_has_item_comment_cnt();
}
inline ::google::protobuf::int32 GetItemCommentListResponse::item_comment_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemCommentListResponse.item_comment_cnt)
  return item_comment_cnt_;
}
inline void GetItemCommentListResponse::set_item_comment_cnt(::google::protobuf::int32 value) {
  set_has_item_comment_cnt();
  item_comment_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemCommentListResponse.item_comment_cnt)
}

// optional int32 item_comment_user_cnt = 5;
inline bool GetItemCommentListResponse::has_item_comment_user_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetItemCommentListResponse::set_has_item_comment_user_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetItemCommentListResponse::clear_has_item_comment_user_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetItemCommentListResponse::clear_item_comment_user_cnt() {
  item_comment_user_cnt_ = 0;
  clear_has_item_comment_user_cnt();
}
inline ::google::protobuf::int32 GetItemCommentListResponse::item_comment_user_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemCommentListResponse.item_comment_user_cnt)
  return item_comment_user_cnt_;
}
inline void GetItemCommentListResponse::set_item_comment_user_cnt(::google::protobuf::int32 value) {
  set_has_item_comment_user_cnt();
  item_comment_user_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemCommentListResponse.item_comment_user_cnt)
}

// -------------------------------------------------------------------

// GetUserCommentListRequest

// required int64 user_id = 1;
inline bool GetUserCommentListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserCommentListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserCommentListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserCommentListRequest::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 GetUserCommentListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserCommentListRequest.user_id)
  return user_id_;
}
inline void GetUserCommentListRequest::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserCommentListRequest.user_id)
}

// required int32 size = 2;
inline bool GetUserCommentListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserCommentListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserCommentListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserCommentListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetUserCommentListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserCommentListRequest.size)
  return size_;
}
inline void GetUserCommentListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserCommentListRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetUserCommentListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserCommentListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserCommentListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserCommentListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetUserCommentListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserCommentListRequest.offset_index)
  return *offset_index_;
}
inline void GetUserCommentListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserCommentListRequest.offset_index)
}
inline void GetUserCommentListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetUserCommentListRequest.offset_index)
}
inline void GetUserCommentListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetUserCommentListRequest.offset_index)
}
inline ::std::string* GetUserCommentListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserCommentListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetUserCommentListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserCommentListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetUserCommentListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetUserCommentListResponse

// repeated .weizhu.discover_v2.ItemComment item_comment = 1;
inline int GetUserCommentListResponse::item_comment_size() const {
  return item_comment_.size();
}
inline void GetUserCommentListResponse::clear_item_comment() {
  item_comment_.Clear();
}
inline const ::weizhu::discover_v2::ItemComment& GetUserCommentListResponse::item_comment(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserCommentListResponse.item_comment)
  return item_comment_.Get(index);
}
inline ::weizhu::discover_v2::ItemComment* GetUserCommentListResponse::mutable_item_comment(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserCommentListResponse.item_comment)
  return item_comment_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemComment* GetUserCommentListResponse::add_item_comment() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetUserCommentListResponse.item_comment)
  return item_comment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemComment >&
GetUserCommentListResponse::item_comment() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetUserCommentListResponse.item_comment)
  return item_comment_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemComment >*
GetUserCommentListResponse::mutable_item_comment() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetUserCommentListResponse.item_comment)
  return &item_comment_;
}

// required bool has_more = 2;
inline bool GetUserCommentListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserCommentListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserCommentListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserCommentListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetUserCommentListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserCommentListResponse.has_more)
  return has_more_;
}
inline void GetUserCommentListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserCommentListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetUserCommentListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserCommentListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserCommentListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserCommentListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetUserCommentListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserCommentListResponse.offset_index)
  return *offset_index_;
}
inline void GetUserCommentListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserCommentListResponse.offset_index)
}
inline void GetUserCommentListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetUserCommentListResponse.offset_index)
}
inline void GetUserCommentListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetUserCommentListResponse.offset_index)
}
inline ::std::string* GetUserCommentListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserCommentListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetUserCommentListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserCommentListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetUserCommentListResponse.offset_index)
}

// repeated .weizhu.discover_v2.Item ref_item = 4;
inline int GetUserCommentListResponse::ref_item_size() const {
  return ref_item_.size();
}
inline void GetUserCommentListResponse::clear_ref_item() {
  ref_item_.Clear();
}
inline const ::weizhu::discover_v2::Item& GetUserCommentListResponse::ref_item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserCommentListResponse.ref_item)
  return ref_item_.Get(index);
}
inline ::weizhu::discover_v2::Item* GetUserCommentListResponse::mutable_ref_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserCommentListResponse.ref_item)
  return ref_item_.Mutable(index);
}
inline ::weizhu::discover_v2::Item* GetUserCommentListResponse::add_ref_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetUserCommentListResponse.ref_item)
  return ref_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
GetUserCommentListResponse::ref_item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetUserCommentListResponse.ref_item)
  return ref_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
GetUserCommentListResponse::mutable_ref_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetUserCommentListResponse.ref_item)
  return &ref_item_;
}

// -------------------------------------------------------------------

// GetItemScoreListRequest

// required int64 item_id = 1;
inline bool GetItemScoreListRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemScoreListRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemScoreListRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemScoreListRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 GetItemScoreListRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemScoreListRequest.item_id)
  return item_id_;
}
inline void GetItemScoreListRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemScoreListRequest.item_id)
}

// required int32 size = 2;
inline bool GetItemScoreListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemScoreListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemScoreListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemScoreListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetItemScoreListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemScoreListRequest.size)
  return size_;
}
inline void GetItemScoreListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemScoreListRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetItemScoreListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemScoreListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemScoreListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemScoreListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemScoreListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemScoreListRequest.offset_index)
  return *offset_index_;
}
inline void GetItemScoreListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemScoreListRequest.offset_index)
}
inline void GetItemScoreListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemScoreListRequest.offset_index)
}
inline void GetItemScoreListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemScoreListRequest.offset_index)
}
inline ::std::string* GetItemScoreListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemScoreListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemScoreListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemScoreListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemScoreListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetItemScoreListResponse

// repeated .weizhu.discover_v2.ItemScore item_score = 1;
inline int GetItemScoreListResponse::item_score_size() const {
  return item_score_.size();
}
inline void GetItemScoreListResponse::clear_item_score() {
  item_score_.Clear();
}
inline const ::weizhu::discover_v2::ItemScore& GetItemScoreListResponse::item_score(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemScoreListResponse.item_score)
  return item_score_.Get(index);
}
inline ::weizhu::discover_v2::ItemScore* GetItemScoreListResponse::mutable_item_score(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemScoreListResponse.item_score)
  return item_score_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemScore* GetItemScoreListResponse::add_item_score() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetItemScoreListResponse.item_score)
  return item_score_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemScore >&
GetItemScoreListResponse::item_score() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetItemScoreListResponse.item_score)
  return item_score_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemScore >*
GetItemScoreListResponse::mutable_item_score() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetItemScoreListResponse.item_score)
  return &item_score_;
}

// required bool has_more = 2;
inline bool GetItemScoreListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemScoreListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemScoreListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemScoreListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetItemScoreListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemScoreListResponse.has_more)
  return has_more_;
}
inline void GetItemScoreListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemScoreListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetItemScoreListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemScoreListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemScoreListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemScoreListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemScoreListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemScoreListResponse.offset_index)
  return *offset_index_;
}
inline void GetItemScoreListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemScoreListResponse.offset_index)
}
inline void GetItemScoreListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemScoreListResponse.offset_index)
}
inline void GetItemScoreListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemScoreListResponse.offset_index)
}
inline ::std::string* GetItemScoreListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemScoreListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemScoreListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemScoreListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemScoreListResponse.offset_index)
}

// optional int32 item_score_number = 4;
inline bool GetItemScoreListResponse::has_item_score_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetItemScoreListResponse::set_has_item_score_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetItemScoreListResponse::clear_has_item_score_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetItemScoreListResponse::clear_item_score_number() {
  item_score_number_ = 0;
  clear_has_item_score_number();
}
inline ::google::protobuf::int32 GetItemScoreListResponse::item_score_number() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemScoreListResponse.item_score_number)
  return item_score_number_;
}
inline void GetItemScoreListResponse::set_item_score_number(::google::protobuf::int32 value) {
  set_has_item_score_number();
  item_score_number_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemScoreListResponse.item_score_number)
}

// optional int32 item_score_user_cnt = 5;
inline bool GetItemScoreListResponse::has_item_score_user_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetItemScoreListResponse::set_has_item_score_user_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetItemScoreListResponse::clear_has_item_score_user_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetItemScoreListResponse::clear_item_score_user_cnt() {
  item_score_user_cnt_ = 0;
  clear_has_item_score_user_cnt();
}
inline ::google::protobuf::int32 GetItemScoreListResponse::item_score_user_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemScoreListResponse.item_score_user_cnt)
  return item_score_user_cnt_;
}
inline void GetItemScoreListResponse::set_item_score_user_cnt(::google::protobuf::int32 value) {
  set_has_item_score_user_cnt();
  item_score_user_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemScoreListResponse.item_score_user_cnt)
}

// optional .weizhu.discover_v2.ItemScore user_item_score = 6;
inline bool GetItemScoreListResponse::has_user_item_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetItemScoreListResponse::set_has_user_item_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetItemScoreListResponse::clear_has_user_item_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetItemScoreListResponse::clear_user_item_score() {
  if (user_item_score_ != NULL) user_item_score_->::weizhu::discover_v2::ItemScore::Clear();
  clear_has_user_item_score();
}
inline const ::weizhu::discover_v2::ItemScore& GetItemScoreListResponse::user_item_score() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemScoreListResponse.user_item_score)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return user_item_score_ != NULL ? *user_item_score_ : *default_instance().user_item_score_;
#else
  return user_item_score_ != NULL ? *user_item_score_ : *default_instance_->user_item_score_;
#endif
}
inline ::weizhu::discover_v2::ItemScore* GetItemScoreListResponse::mutable_user_item_score() {
  set_has_user_item_score();
  if (user_item_score_ == NULL) user_item_score_ = new ::weizhu::discover_v2::ItemScore;
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemScoreListResponse.user_item_score)
  return user_item_score_;
}
inline ::weizhu::discover_v2::ItemScore* GetItemScoreListResponse::release_user_item_score() {
  clear_has_user_item_score();
  ::weizhu::discover_v2::ItemScore* temp = user_item_score_;
  user_item_score_ = NULL;
  return temp;
}
inline void GetItemScoreListResponse::set_allocated_user_item_score(::weizhu::discover_v2::ItemScore* user_item_score) {
  delete user_item_score_;
  user_item_score_ = user_item_score;
  if (user_item_score) {
    set_has_user_item_score();
  } else {
    clear_has_user_item_score();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemScoreListResponse.user_item_score)
}

// -------------------------------------------------------------------

// GetUserScoreListRequest

// required int64 user_id = 1;
inline bool GetUserScoreListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserScoreListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserScoreListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserScoreListRequest::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 GetUserScoreListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserScoreListRequest.user_id)
  return user_id_;
}
inline void GetUserScoreListRequest::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserScoreListRequest.user_id)
}

// required int32 size = 2;
inline bool GetUserScoreListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserScoreListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserScoreListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserScoreListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetUserScoreListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserScoreListRequest.size)
  return size_;
}
inline void GetUserScoreListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserScoreListRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetUserScoreListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserScoreListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserScoreListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserScoreListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetUserScoreListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserScoreListRequest.offset_index)
  return *offset_index_;
}
inline void GetUserScoreListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserScoreListRequest.offset_index)
}
inline void GetUserScoreListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetUserScoreListRequest.offset_index)
}
inline void GetUserScoreListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetUserScoreListRequest.offset_index)
}
inline ::std::string* GetUserScoreListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserScoreListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetUserScoreListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserScoreListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetUserScoreListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetUserScoreListResponse

// repeated .weizhu.discover_v2.ItemScore item_score = 1;
inline int GetUserScoreListResponse::item_score_size() const {
  return item_score_.size();
}
inline void GetUserScoreListResponse::clear_item_score() {
  item_score_.Clear();
}
inline const ::weizhu::discover_v2::ItemScore& GetUserScoreListResponse::item_score(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserScoreListResponse.item_score)
  return item_score_.Get(index);
}
inline ::weizhu::discover_v2::ItemScore* GetUserScoreListResponse::mutable_item_score(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserScoreListResponse.item_score)
  return item_score_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemScore* GetUserScoreListResponse::add_item_score() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetUserScoreListResponse.item_score)
  return item_score_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemScore >&
GetUserScoreListResponse::item_score() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetUserScoreListResponse.item_score)
  return item_score_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemScore >*
GetUserScoreListResponse::mutable_item_score() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetUserScoreListResponse.item_score)
  return &item_score_;
}

// required bool has_more = 2;
inline bool GetUserScoreListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserScoreListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserScoreListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserScoreListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetUserScoreListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserScoreListResponse.has_more)
  return has_more_;
}
inline void GetUserScoreListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserScoreListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetUserScoreListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserScoreListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserScoreListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserScoreListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetUserScoreListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserScoreListResponse.offset_index)
  return *offset_index_;
}
inline void GetUserScoreListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserScoreListResponse.offset_index)
}
inline void GetUserScoreListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetUserScoreListResponse.offset_index)
}
inline void GetUserScoreListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetUserScoreListResponse.offset_index)
}
inline ::std::string* GetUserScoreListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserScoreListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetUserScoreListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserScoreListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetUserScoreListResponse.offset_index)
}

// repeated .weizhu.discover_v2.Item ref_item = 4;
inline int GetUserScoreListResponse::ref_item_size() const {
  return ref_item_.size();
}
inline void GetUserScoreListResponse::clear_ref_item() {
  ref_item_.Clear();
}
inline const ::weizhu::discover_v2::Item& GetUserScoreListResponse::ref_item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserScoreListResponse.ref_item)
  return ref_item_.Get(index);
}
inline ::weizhu::discover_v2::Item* GetUserScoreListResponse::mutable_ref_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserScoreListResponse.ref_item)
  return ref_item_.Mutable(index);
}
inline ::weizhu::discover_v2::Item* GetUserScoreListResponse::add_ref_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetUserScoreListResponse.ref_item)
  return ref_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
GetUserScoreListResponse::ref_item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetUserScoreListResponse.ref_item)
  return ref_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
GetUserScoreListResponse::mutable_ref_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetUserScoreListResponse.ref_item)
  return &ref_item_;
}

// -------------------------------------------------------------------

// GetItemLikeListRequest

// required int64 item_id = 1;
inline bool GetItemLikeListRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemLikeListRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemLikeListRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemLikeListRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 GetItemLikeListRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLikeListRequest.item_id)
  return item_id_;
}
inline void GetItemLikeListRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLikeListRequest.item_id)
}

// required int32 size = 2;
inline bool GetItemLikeListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemLikeListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemLikeListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemLikeListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetItemLikeListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLikeListRequest.size)
  return size_;
}
inline void GetItemLikeListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLikeListRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetItemLikeListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemLikeListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemLikeListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemLikeListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemLikeListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLikeListRequest.offset_index)
  return *offset_index_;
}
inline void GetItemLikeListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLikeListRequest.offset_index)
}
inline void GetItemLikeListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemLikeListRequest.offset_index)
}
inline void GetItemLikeListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemLikeListRequest.offset_index)
}
inline ::std::string* GetItemLikeListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemLikeListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemLikeListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemLikeListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemLikeListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetItemLikeListResponse

// repeated .weizhu.discover_v2.ItemLike item_like = 1;
inline int GetItemLikeListResponse::item_like_size() const {
  return item_like_.size();
}
inline void GetItemLikeListResponse::clear_item_like() {
  item_like_.Clear();
}
inline const ::weizhu::discover_v2::ItemLike& GetItemLikeListResponse::item_like(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLikeListResponse.item_like)
  return item_like_.Get(index);
}
inline ::weizhu::discover_v2::ItemLike* GetItemLikeListResponse::mutable_item_like(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemLikeListResponse.item_like)
  return item_like_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemLike* GetItemLikeListResponse::add_item_like() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetItemLikeListResponse.item_like)
  return item_like_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLike >&
GetItemLikeListResponse::item_like() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetItemLikeListResponse.item_like)
  return item_like_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLike >*
GetItemLikeListResponse::mutable_item_like() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetItemLikeListResponse.item_like)
  return &item_like_;
}

// required bool has_more = 2;
inline bool GetItemLikeListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemLikeListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemLikeListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemLikeListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetItemLikeListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLikeListResponse.has_more)
  return has_more_;
}
inline void GetItemLikeListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLikeListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetItemLikeListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemLikeListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemLikeListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemLikeListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemLikeListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLikeListResponse.offset_index)
  return *offset_index_;
}
inline void GetItemLikeListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLikeListResponse.offset_index)
}
inline void GetItemLikeListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemLikeListResponse.offset_index)
}
inline void GetItemLikeListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemLikeListResponse.offset_index)
}
inline ::std::string* GetItemLikeListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemLikeListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemLikeListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemLikeListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemLikeListResponse.offset_index)
}

// optional int32 item_like_cnt = 4;
inline bool GetItemLikeListResponse::has_item_like_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetItemLikeListResponse::set_has_item_like_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetItemLikeListResponse::clear_has_item_like_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetItemLikeListResponse::clear_item_like_cnt() {
  item_like_cnt_ = 0;
  clear_has_item_like_cnt();
}
inline ::google::protobuf::int32 GetItemLikeListResponse::item_like_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLikeListResponse.item_like_cnt)
  return item_like_cnt_;
}
inline void GetItemLikeListResponse::set_item_like_cnt(::google::protobuf::int32 value) {
  set_has_item_like_cnt();
  item_like_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemLikeListResponse.item_like_cnt)
}

// optional .weizhu.discover_v2.ItemLike user_item_like = 5;
inline bool GetItemLikeListResponse::has_user_item_like() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetItemLikeListResponse::set_has_user_item_like() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetItemLikeListResponse::clear_has_user_item_like() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetItemLikeListResponse::clear_user_item_like() {
  if (user_item_like_ != NULL) user_item_like_->::weizhu::discover_v2::ItemLike::Clear();
  clear_has_user_item_like();
}
inline const ::weizhu::discover_v2::ItemLike& GetItemLikeListResponse::user_item_like() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemLikeListResponse.user_item_like)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return user_item_like_ != NULL ? *user_item_like_ : *default_instance().user_item_like_;
#else
  return user_item_like_ != NULL ? *user_item_like_ : *default_instance_->user_item_like_;
#endif
}
inline ::weizhu::discover_v2::ItemLike* GetItemLikeListResponse::mutable_user_item_like() {
  set_has_user_item_like();
  if (user_item_like_ == NULL) user_item_like_ = new ::weizhu::discover_v2::ItemLike;
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemLikeListResponse.user_item_like)
  return user_item_like_;
}
inline ::weizhu::discover_v2::ItemLike* GetItemLikeListResponse::release_user_item_like() {
  clear_has_user_item_like();
  ::weizhu::discover_v2::ItemLike* temp = user_item_like_;
  user_item_like_ = NULL;
  return temp;
}
inline void GetItemLikeListResponse::set_allocated_user_item_like(::weizhu::discover_v2::ItemLike* user_item_like) {
  delete user_item_like_;
  user_item_like_ = user_item_like;
  if (user_item_like) {
    set_has_user_item_like();
  } else {
    clear_has_user_item_like();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemLikeListResponse.user_item_like)
}

// -------------------------------------------------------------------

// GetUserLikeListRequest

// required int64 user_id = 1;
inline bool GetUserLikeListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserLikeListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserLikeListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserLikeListRequest::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 GetUserLikeListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLikeListRequest.user_id)
  return user_id_;
}
inline void GetUserLikeListRequest::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserLikeListRequest.user_id)
}

// required int32 size = 2;
inline bool GetUserLikeListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserLikeListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserLikeListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserLikeListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetUserLikeListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLikeListRequest.size)
  return size_;
}
inline void GetUserLikeListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserLikeListRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetUserLikeListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserLikeListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserLikeListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserLikeListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetUserLikeListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLikeListRequest.offset_index)
  return *offset_index_;
}
inline void GetUserLikeListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserLikeListRequest.offset_index)
}
inline void GetUserLikeListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetUserLikeListRequest.offset_index)
}
inline void GetUserLikeListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetUserLikeListRequest.offset_index)
}
inline ::std::string* GetUserLikeListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserLikeListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetUserLikeListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserLikeListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetUserLikeListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetUserLikeListResponse

// repeated .weizhu.discover_v2.ItemLike item_like = 1;
inline int GetUserLikeListResponse::item_like_size() const {
  return item_like_.size();
}
inline void GetUserLikeListResponse::clear_item_like() {
  item_like_.Clear();
}
inline const ::weizhu::discover_v2::ItemLike& GetUserLikeListResponse::item_like(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLikeListResponse.item_like)
  return item_like_.Get(index);
}
inline ::weizhu::discover_v2::ItemLike* GetUserLikeListResponse::mutable_item_like(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserLikeListResponse.item_like)
  return item_like_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemLike* GetUserLikeListResponse::add_item_like() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetUserLikeListResponse.item_like)
  return item_like_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLike >&
GetUserLikeListResponse::item_like() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetUserLikeListResponse.item_like)
  return item_like_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLike >*
GetUserLikeListResponse::mutable_item_like() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetUserLikeListResponse.item_like)
  return &item_like_;
}

// required bool has_more = 2;
inline bool GetUserLikeListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserLikeListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserLikeListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserLikeListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetUserLikeListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLikeListResponse.has_more)
  return has_more_;
}
inline void GetUserLikeListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserLikeListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetUserLikeListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserLikeListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserLikeListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserLikeListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetUserLikeListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLikeListResponse.offset_index)
  return *offset_index_;
}
inline void GetUserLikeListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserLikeListResponse.offset_index)
}
inline void GetUserLikeListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetUserLikeListResponse.offset_index)
}
inline void GetUserLikeListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetUserLikeListResponse.offset_index)
}
inline ::std::string* GetUserLikeListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserLikeListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetUserLikeListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserLikeListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetUserLikeListResponse.offset_index)
}

// repeated .weizhu.discover_v2.Item ref_item = 4;
inline int GetUserLikeListResponse::ref_item_size() const {
  return ref_item_.size();
}
inline void GetUserLikeListResponse::clear_ref_item() {
  ref_item_.Clear();
}
inline const ::weizhu::discover_v2::Item& GetUserLikeListResponse::ref_item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserLikeListResponse.ref_item)
  return ref_item_.Get(index);
}
inline ::weizhu::discover_v2::Item* GetUserLikeListResponse::mutable_ref_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserLikeListResponse.ref_item)
  return ref_item_.Mutable(index);
}
inline ::weizhu::discover_v2::Item* GetUserLikeListResponse::add_ref_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetUserLikeListResponse.ref_item)
  return ref_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
GetUserLikeListResponse::ref_item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetUserLikeListResponse.ref_item)
  return ref_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
GetUserLikeListResponse::mutable_ref_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetUserLikeListResponse.ref_item)
  return &ref_item_;
}

// -------------------------------------------------------------------

// GetItemShareListRequest

// required int64 item_id = 1;
inline bool GetItemShareListRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemShareListRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemShareListRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemShareListRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 GetItemShareListRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemShareListRequest.item_id)
  return item_id_;
}
inline void GetItemShareListRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemShareListRequest.item_id)
}

// required int32 size = 2;
inline bool GetItemShareListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemShareListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemShareListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemShareListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetItemShareListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemShareListRequest.size)
  return size_;
}
inline void GetItemShareListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemShareListRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetItemShareListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemShareListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemShareListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemShareListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemShareListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemShareListRequest.offset_index)
  return *offset_index_;
}
inline void GetItemShareListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemShareListRequest.offset_index)
}
inline void GetItemShareListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemShareListRequest.offset_index)
}
inline void GetItemShareListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemShareListRequest.offset_index)
}
inline ::std::string* GetItemShareListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemShareListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemShareListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemShareListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemShareListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetItemShareListResponse

// repeated .weizhu.discover_v2.ItemShare item_share = 1;
inline int GetItemShareListResponse::item_share_size() const {
  return item_share_.size();
}
inline void GetItemShareListResponse::clear_item_share() {
  item_share_.Clear();
}
inline const ::weizhu::discover_v2::ItemShare& GetItemShareListResponse::item_share(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemShareListResponse.item_share)
  return item_share_.Get(index);
}
inline ::weizhu::discover_v2::ItemShare* GetItemShareListResponse::mutable_item_share(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemShareListResponse.item_share)
  return item_share_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemShare* GetItemShareListResponse::add_item_share() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetItemShareListResponse.item_share)
  return item_share_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemShare >&
GetItemShareListResponse::item_share() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetItemShareListResponse.item_share)
  return item_share_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemShare >*
GetItemShareListResponse::mutable_item_share() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetItemShareListResponse.item_share)
  return &item_share_;
}

// required bool has_more = 2;
inline bool GetItemShareListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemShareListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemShareListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemShareListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetItemShareListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemShareListResponse.has_more)
  return has_more_;
}
inline void GetItemShareListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemShareListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetItemShareListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemShareListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemShareListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemShareListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemShareListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemShareListResponse.offset_index)
  return *offset_index_;
}
inline void GetItemShareListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemShareListResponse.offset_index)
}
inline void GetItemShareListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemShareListResponse.offset_index)
}
inline void GetItemShareListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemShareListResponse.offset_index)
}
inline ::std::string* GetItemShareListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemShareListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemShareListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemShareListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemShareListResponse.offset_index)
}

// optional int32 item_share_cnt = 4;
inline bool GetItemShareListResponse::has_item_share_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetItemShareListResponse::set_has_item_share_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetItemShareListResponse::clear_has_item_share_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetItemShareListResponse::clear_item_share_cnt() {
  item_share_cnt_ = 0;
  clear_has_item_share_cnt();
}
inline ::google::protobuf::int32 GetItemShareListResponse::item_share_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemShareListResponse.item_share_cnt)
  return item_share_cnt_;
}
inline void GetItemShareListResponse::set_item_share_cnt(::google::protobuf::int32 value) {
  set_has_item_share_cnt();
  item_share_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemShareListResponse.item_share_cnt)
}

// optional .weizhu.discover_v2.ItemShare user_item_share = 5;
inline bool GetItemShareListResponse::has_user_item_share() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetItemShareListResponse::set_has_user_item_share() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetItemShareListResponse::clear_has_user_item_share() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetItemShareListResponse::clear_user_item_share() {
  if (user_item_share_ != NULL) user_item_share_->::weizhu::discover_v2::ItemShare::Clear();
  clear_has_user_item_share();
}
inline const ::weizhu::discover_v2::ItemShare& GetItemShareListResponse::user_item_share() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemShareListResponse.user_item_share)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return user_item_share_ != NULL ? *user_item_share_ : *default_instance().user_item_share_;
#else
  return user_item_share_ != NULL ? *user_item_share_ : *default_instance_->user_item_share_;
#endif
}
inline ::weizhu::discover_v2::ItemShare* GetItemShareListResponse::mutable_user_item_share() {
  set_has_user_item_share();
  if (user_item_share_ == NULL) user_item_share_ = new ::weizhu::discover_v2::ItemShare;
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemShareListResponse.user_item_share)
  return user_item_share_;
}
inline ::weizhu::discover_v2::ItemShare* GetItemShareListResponse::release_user_item_share() {
  clear_has_user_item_share();
  ::weizhu::discover_v2::ItemShare* temp = user_item_share_;
  user_item_share_ = NULL;
  return temp;
}
inline void GetItemShareListResponse::set_allocated_user_item_share(::weizhu::discover_v2::ItemShare* user_item_share) {
  delete user_item_share_;
  user_item_share_ = user_item_share;
  if (user_item_share) {
    set_has_user_item_share();
  } else {
    clear_has_user_item_share();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemShareListResponse.user_item_share)
}

// -------------------------------------------------------------------

// GetUserShareListRequest

// required int64 user_id = 1;
inline bool GetUserShareListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserShareListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserShareListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserShareListRequest::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 GetUserShareListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserShareListRequest.user_id)
  return user_id_;
}
inline void GetUserShareListRequest::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserShareListRequest.user_id)
}

// required int32 size = 2;
inline bool GetUserShareListRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserShareListRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserShareListRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserShareListRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetUserShareListRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserShareListRequest.size)
  return size_;
}
inline void GetUserShareListRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserShareListRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetUserShareListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserShareListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserShareListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserShareListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetUserShareListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserShareListRequest.offset_index)
  return *offset_index_;
}
inline void GetUserShareListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserShareListRequest.offset_index)
}
inline void GetUserShareListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetUserShareListRequest.offset_index)
}
inline void GetUserShareListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetUserShareListRequest.offset_index)
}
inline ::std::string* GetUserShareListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserShareListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetUserShareListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserShareListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetUserShareListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetUserShareListResponse

// repeated .weizhu.discover_v2.ItemShare item_share = 1;
inline int GetUserShareListResponse::item_share_size() const {
  return item_share_.size();
}
inline void GetUserShareListResponse::clear_item_share() {
  item_share_.Clear();
}
inline const ::weizhu::discover_v2::ItemShare& GetUserShareListResponse::item_share(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserShareListResponse.item_share)
  return item_share_.Get(index);
}
inline ::weizhu::discover_v2::ItemShare* GetUserShareListResponse::mutable_item_share(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserShareListResponse.item_share)
  return item_share_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemShare* GetUserShareListResponse::add_item_share() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetUserShareListResponse.item_share)
  return item_share_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemShare >&
GetUserShareListResponse::item_share() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetUserShareListResponse.item_share)
  return item_share_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemShare >*
GetUserShareListResponse::mutable_item_share() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetUserShareListResponse.item_share)
  return &item_share_;
}

// required bool has_more = 2;
inline bool GetUserShareListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserShareListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserShareListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserShareListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetUserShareListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserShareListResponse.has_more)
  return has_more_;
}
inline void GetUserShareListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserShareListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetUserShareListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserShareListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserShareListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserShareListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetUserShareListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserShareListResponse.offset_index)
  return *offset_index_;
}
inline void GetUserShareListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserShareListResponse.offset_index)
}
inline void GetUserShareListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetUserShareListResponse.offset_index)
}
inline void GetUserShareListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetUserShareListResponse.offset_index)
}
inline ::std::string* GetUserShareListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserShareListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetUserShareListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserShareListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetUserShareListResponse.offset_index)
}

// repeated .weizhu.discover_v2.Item ref_item = 4;
inline int GetUserShareListResponse::ref_item_size() const {
  return ref_item_.size();
}
inline void GetUserShareListResponse::clear_ref_item() {
  ref_item_.Clear();
}
inline const ::weizhu::discover_v2::Item& GetUserShareListResponse::ref_item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserShareListResponse.ref_item)
  return ref_item_.Get(index);
}
inline ::weizhu::discover_v2::Item* GetUserShareListResponse::mutable_ref_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetUserShareListResponse.ref_item)
  return ref_item_.Mutable(index);
}
inline ::weizhu::discover_v2::Item* GetUserShareListResponse::add_ref_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetUserShareListResponse.ref_item)
  return ref_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
GetUserShareListResponse::ref_item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetUserShareListResponse.ref_item)
  return ref_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
GetUserShareListResponse::mutable_ref_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetUserShareListResponse.ref_item)
  return &ref_item_;
}

// -------------------------------------------------------------------

// GetUserDiscoverRequest

// required int64 user_id = 1;
inline bool GetUserDiscoverRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserDiscoverRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserDiscoverRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserDiscoverRequest::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 GetUserDiscoverRequest::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserDiscoverRequest.user_id)
  return user_id_;
}
inline void GetUserDiscoverRequest::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserDiscoverRequest.user_id)
}

// -------------------------------------------------------------------

// GetUserDiscoverResponse

// required int32 week_learn_cnt = 1;
inline bool GetUserDiscoverResponse::has_week_learn_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserDiscoverResponse::set_has_week_learn_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserDiscoverResponse::clear_has_week_learn_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserDiscoverResponse::clear_week_learn_cnt() {
  week_learn_cnt_ = 0;
  clear_has_week_learn_cnt();
}
inline ::google::protobuf::int32 GetUserDiscoverResponse::week_learn_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserDiscoverResponse.week_learn_cnt)
  return week_learn_cnt_;
}
inline void GetUserDiscoverResponse::set_week_learn_cnt(::google::protobuf::int32 value) {
  set_has_week_learn_cnt();
  week_learn_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserDiscoverResponse.week_learn_cnt)
}

// required int32 week_learn_duration = 2;
inline bool GetUserDiscoverResponse::has_week_learn_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserDiscoverResponse::set_has_week_learn_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserDiscoverResponse::clear_has_week_learn_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserDiscoverResponse::clear_week_learn_duration() {
  week_learn_duration_ = 0;
  clear_has_week_learn_duration();
}
inline ::google::protobuf::int32 GetUserDiscoverResponse::week_learn_duration() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserDiscoverResponse.week_learn_duration)
  return week_learn_duration_;
}
inline void GetUserDiscoverResponse::set_week_learn_duration(::google::protobuf::int32 value) {
  set_has_week_learn_duration();
  week_learn_duration_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserDiscoverResponse.week_learn_duration)
}

// required int32 week_learn_item_cnt = 3;
inline bool GetUserDiscoverResponse::has_week_learn_item_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserDiscoverResponse::set_has_week_learn_item_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserDiscoverResponse::clear_has_week_learn_item_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserDiscoverResponse::clear_week_learn_item_cnt() {
  week_learn_item_cnt_ = 0;
  clear_has_week_learn_item_cnt();
}
inline ::google::protobuf::int32 GetUserDiscoverResponse::week_learn_item_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserDiscoverResponse.week_learn_item_cnt)
  return week_learn_item_cnt_;
}
inline void GetUserDiscoverResponse::set_week_learn_item_cnt(::google::protobuf::int32 value) {
  set_has_week_learn_item_cnt();
  week_learn_item_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserDiscoverResponse.week_learn_item_cnt)
}

// required int32 week_comment_cnt = 4;
inline bool GetUserDiscoverResponse::has_week_comment_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUserDiscoverResponse::set_has_week_comment_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUserDiscoverResponse::clear_has_week_comment_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUserDiscoverResponse::clear_week_comment_cnt() {
  week_comment_cnt_ = 0;
  clear_has_week_comment_cnt();
}
inline ::google::protobuf::int32 GetUserDiscoverResponse::week_comment_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserDiscoverResponse.week_comment_cnt)
  return week_comment_cnt_;
}
inline void GetUserDiscoverResponse::set_week_comment_cnt(::google::protobuf::int32 value) {
  set_has_week_comment_cnt();
  week_comment_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserDiscoverResponse.week_comment_cnt)
}

// required int32 week_comment_item_cnt = 5;
inline bool GetUserDiscoverResponse::has_week_comment_item_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetUserDiscoverResponse::set_has_week_comment_item_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetUserDiscoverResponse::clear_has_week_comment_item_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetUserDiscoverResponse::clear_week_comment_item_cnt() {
  week_comment_item_cnt_ = 0;
  clear_has_week_comment_item_cnt();
}
inline ::google::protobuf::int32 GetUserDiscoverResponse::week_comment_item_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserDiscoverResponse.week_comment_item_cnt)
  return week_comment_item_cnt_;
}
inline void GetUserDiscoverResponse::set_week_comment_item_cnt(::google::protobuf::int32 value) {
  set_has_week_comment_item_cnt();
  week_comment_item_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserDiscoverResponse.week_comment_item_cnt)
}

// required int32 week_score_item_cnt = 6;
inline bool GetUserDiscoverResponse::has_week_score_item_cnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetUserDiscoverResponse::set_has_week_score_item_cnt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetUserDiscoverResponse::clear_has_week_score_item_cnt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetUserDiscoverResponse::clear_week_score_item_cnt() {
  week_score_item_cnt_ = 0;
  clear_has_week_score_item_cnt();
}
inline ::google::protobuf::int32 GetUserDiscoverResponse::week_score_item_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserDiscoverResponse.week_score_item_cnt)
  return week_score_item_cnt_;
}
inline void GetUserDiscoverResponse::set_week_score_item_cnt(::google::protobuf::int32 value) {
  set_has_week_score_item_cnt();
  week_score_item_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserDiscoverResponse.week_score_item_cnt)
}

// required int32 week_like_item_cnt = 7;
inline bool GetUserDiscoverResponse::has_week_like_item_cnt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetUserDiscoverResponse::set_has_week_like_item_cnt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetUserDiscoverResponse::clear_has_week_like_item_cnt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetUserDiscoverResponse::clear_week_like_item_cnt() {
  week_like_item_cnt_ = 0;
  clear_has_week_like_item_cnt();
}
inline ::google::protobuf::int32 GetUserDiscoverResponse::week_like_item_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserDiscoverResponse.week_like_item_cnt)
  return week_like_item_cnt_;
}
inline void GetUserDiscoverResponse::set_week_like_item_cnt(::google::protobuf::int32 value) {
  set_has_week_like_item_cnt();
  week_like_item_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserDiscoverResponse.week_like_item_cnt)
}

// required int32 week_share_item_cnt = 8;
inline bool GetUserDiscoverResponse::has_week_share_item_cnt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetUserDiscoverResponse::set_has_week_share_item_cnt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetUserDiscoverResponse::clear_has_week_share_item_cnt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetUserDiscoverResponse::clear_week_share_item_cnt() {
  week_share_item_cnt_ = 0;
  clear_has_week_share_item_cnt();
}
inline ::google::protobuf::int32 GetUserDiscoverResponse::week_share_item_cnt() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetUserDiscoverResponse.week_share_item_cnt)
  return week_share_item_cnt_;
}
inline void GetUserDiscoverResponse::set_week_share_item_cnt(::google::protobuf::int32 value) {
  set_has_week_share_item_cnt();
  week_share_item_cnt_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetUserDiscoverResponse.week_share_item_cnt)
}

// -------------------------------------------------------------------

// SearchItemRequest

// required string keyword = 1;
inline bool SearchItemRequest::has_keyword() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchItemRequest::set_has_keyword() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchItemRequest::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchItemRequest::clear_keyword() {
  if (keyword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_->clear();
  }
  clear_has_keyword();
}
inline const ::std::string& SearchItemRequest::keyword() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.SearchItemRequest.keyword)
  return *keyword_;
}
inline void SearchItemRequest::set_keyword(const ::std::string& value) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.SearchItemRequest.keyword)
}
inline void SearchItemRequest::set_keyword(const char* value) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.SearchItemRequest.keyword)
}
inline void SearchItemRequest::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.SearchItemRequest.keyword)
}
inline ::std::string* SearchItemRequest::mutable_keyword() {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.SearchItemRequest.keyword)
  return keyword_;
}
inline ::std::string* SearchItemRequest::release_keyword() {
  clear_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = keyword_;
    keyword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SearchItemRequest::set_allocated_keyword(::std::string* keyword) {
  if (keyword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete keyword_;
  }
  if (keyword) {
    set_has_keyword();
    keyword_ = keyword;
  } else {
    clear_has_keyword();
    keyword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.SearchItemRequest.keyword)
}

// -------------------------------------------------------------------

// SearchItemResponse

// repeated .weizhu.discover_v2.Item item = 1;
inline int SearchItemResponse::item_size() const {
  return item_.size();
}
inline void SearchItemResponse::clear_item() {
  item_.Clear();
}
inline const ::weizhu::discover_v2::Item& SearchItemResponse::item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.SearchItemResponse.item)
  return item_.Get(index);
}
inline ::weizhu::discover_v2::Item* SearchItemResponse::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.SearchItemResponse.item)
  return item_.Mutable(index);
}
inline ::weizhu::discover_v2::Item* SearchItemResponse::add_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.SearchItemResponse.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
SearchItemResponse::item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.SearchItemResponse.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
SearchItemResponse::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.SearchItemResponse.item)
  return &item_;
}

// -------------------------------------------------------------------

// GetItemListRequest

// required int32 item_size = 1;
inline bool GetItemListRequest::has_item_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetItemListRequest::set_has_item_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetItemListRequest::clear_has_item_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetItemListRequest::clear_item_size() {
  item_size_ = 0;
  clear_has_item_size();
}
inline ::google::protobuf::int32 GetItemListRequest::item_size() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemListRequest.item_size)
  return item_size_;
}
inline void GetItemListRequest::set_item_size(::google::protobuf::int32 value) {
  set_has_item_size();
  item_size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemListRequest.item_size)
}

// optional bytes offset_index = 2;
inline bool GetItemListRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemListRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemListRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemListRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemListRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemListRequest.offset_index)
  return *offset_index_;
}
inline void GetItemListRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemListRequest.offset_index)
}
inline void GetItemListRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemListRequest.offset_index)
}
inline void GetItemListRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemListRequest.offset_index)
}
inline ::std::string* GetItemListRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemListRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemListRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemListRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemListRequest.offset_index)
}

// -------------------------------------------------------------------

// GetItemListResponse

// repeated .weizhu.discover_v2.Item item = 1;
inline int GetItemListResponse::item_size() const {
  return item_.size();
}
inline void GetItemListResponse::clear_item() {
  item_.Clear();
}
inline const ::weizhu::discover_v2::Item& GetItemListResponse::item(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemListResponse.item)
  return item_.Get(index);
}
inline ::weizhu::discover_v2::Item* GetItemListResponse::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemListResponse.item)
  return item_.Mutable(index);
}
inline ::weizhu::discover_v2::Item* GetItemListResponse::add_item() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.GetItemListResponse.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >&
GetItemListResponse::item() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.GetItemListResponse.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::Item >*
GetItemListResponse::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.GetItemListResponse.item)
  return &item_;
}

// required bool has_more = 2;
inline bool GetItemListResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetItemListResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetItemListResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetItemListResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetItemListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemListResponse.has_more)
  return has_more_;
}
inline void GetItemListResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemListResponse.has_more)
}

// required bytes offset_index = 3;
inline bool GetItemListResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetItemListResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetItemListResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetItemListResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetItemListResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.GetItemListResponse.offset_index)
  return *offset_index_;
}
inline void GetItemListResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.GetItemListResponse.offset_index)
}
inline void GetItemListResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.GetItemListResponse.offset_index)
}
inline void GetItemListResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.GetItemListResponse.offset_index)
}
inline ::std::string* GetItemListResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.GetItemListResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetItemListResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetItemListResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.GetItemListResponse.offset_index)
}

// -------------------------------------------------------------------

// LearnItemRequest

// required int64 item_id = 1;
inline bool LearnItemRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LearnItemRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LearnItemRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LearnItemRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 LearnItemRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.LearnItemRequest.item_id)
  return item_id_;
}
inline void LearnItemRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.LearnItemRequest.item_id)
}

// required int32 learn_duration = 2;
inline bool LearnItemRequest::has_learn_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LearnItemRequest::set_has_learn_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LearnItemRequest::clear_has_learn_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LearnItemRequest::clear_learn_duration() {
  learn_duration_ = 0;
  clear_has_learn_duration();
}
inline ::google::protobuf::int32 LearnItemRequest::learn_duration() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.LearnItemRequest.learn_duration)
  return learn_duration_;
}
inline void LearnItemRequest::set_learn_duration(::google::protobuf::int32 value) {
  set_has_learn_duration();
  learn_duration_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.LearnItemRequest.learn_duration)
}

// -------------------------------------------------------------------

// LearnItemResponse

// optional .weizhu.discover_v2.LearnItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
inline bool LearnItemResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LearnItemResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LearnItemResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LearnItemResponse::clear_result() {
  result_ = 99;
  clear_has_result();
}
inline ::weizhu::discover_v2::LearnItemResponse_Result LearnItemResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.LearnItemResponse.result)
  return static_cast< ::weizhu::discover_v2::LearnItemResponse_Result >(result_);
}
inline void LearnItemResponse::set_result(::weizhu::discover_v2::LearnItemResponse_Result value) {
  assert(::weizhu::discover_v2::LearnItemResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.LearnItemResponse.result)
}

// optional string fail_text = 2;
inline bool LearnItemResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LearnItemResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LearnItemResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LearnItemResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& LearnItemResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.LearnItemResponse.fail_text)
  return *fail_text_;
}
inline void LearnItemResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.LearnItemResponse.fail_text)
}
inline void LearnItemResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.LearnItemResponse.fail_text)
}
inline void LearnItemResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.LearnItemResponse.fail_text)
}
inline ::std::string* LearnItemResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.LearnItemResponse.fail_text)
  return fail_text_;
}
inline ::std::string* LearnItemResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LearnItemResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.LearnItemResponse.fail_text)
}

// -------------------------------------------------------------------

// ReportLearnItemRequest

// repeated .weizhu.discover_v2.ItemLearn item_learn = 1;
inline int ReportLearnItemRequest::item_learn_size() const {
  return item_learn_.size();
}
inline void ReportLearnItemRequest::clear_item_learn() {
  item_learn_.Clear();
}
inline const ::weizhu::discover_v2::ItemLearn& ReportLearnItemRequest::item_learn(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ReportLearnItemRequest.item_learn)
  return item_learn_.Get(index);
}
inline ::weizhu::discover_v2::ItemLearn* ReportLearnItemRequest::mutable_item_learn(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.ReportLearnItemRequest.item_learn)
  return item_learn_.Mutable(index);
}
inline ::weizhu::discover_v2::ItemLearn* ReportLearnItemRequest::add_item_learn() {
  // @@protoc_insertion_point(field_add:weizhu.discover_v2.ReportLearnItemRequest.item_learn)
  return item_learn_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >&
ReportLearnItemRequest::item_learn() const {
  // @@protoc_insertion_point(field_list:weizhu.discover_v2.ReportLearnItemRequest.item_learn)
  return item_learn_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::discover_v2::ItemLearn >*
ReportLearnItemRequest::mutable_item_learn() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.discover_v2.ReportLearnItemRequest.item_learn)
  return &item_learn_;
}

// -------------------------------------------------------------------

// CommentItemRequest

// required int64 item_id = 1;
inline bool CommentItemRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommentItemRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommentItemRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommentItemRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 CommentItemRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.CommentItemRequest.item_id)
  return item_id_;
}
inline void CommentItemRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.CommentItemRequest.item_id)
}

// required string comment_text = 2;
inline bool CommentItemRequest::has_comment_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommentItemRequest::set_has_comment_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommentItemRequest::clear_has_comment_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommentItemRequest::clear_comment_text() {
  if (comment_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_text_->clear();
  }
  clear_has_comment_text();
}
inline const ::std::string& CommentItemRequest::comment_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.CommentItemRequest.comment_text)
  return *comment_text_;
}
inline void CommentItemRequest::set_comment_text(const ::std::string& value) {
  set_has_comment_text();
  if (comment_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_text_ = new ::std::string;
  }
  comment_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.CommentItemRequest.comment_text)
}
inline void CommentItemRequest::set_comment_text(const char* value) {
  set_has_comment_text();
  if (comment_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_text_ = new ::std::string;
  }
  comment_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.CommentItemRequest.comment_text)
}
inline void CommentItemRequest::set_comment_text(const char* value, size_t size) {
  set_has_comment_text();
  if (comment_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_text_ = new ::std::string;
  }
  comment_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.CommentItemRequest.comment_text)
}
inline ::std::string* CommentItemRequest::mutable_comment_text() {
  set_has_comment_text();
  if (comment_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    comment_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.CommentItemRequest.comment_text)
  return comment_text_;
}
inline ::std::string* CommentItemRequest::release_comment_text() {
  clear_has_comment_text();
  if (comment_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = comment_text_;
    comment_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CommentItemRequest::set_allocated_comment_text(::std::string* comment_text) {
  if (comment_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete comment_text_;
  }
  if (comment_text) {
    set_has_comment_text();
    comment_text_ = comment_text;
  } else {
    clear_has_comment_text();
    comment_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.CommentItemRequest.comment_text)
}

// -------------------------------------------------------------------

// CommentItemResponse

// optional .weizhu.discover_v2.CommentItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
inline bool CommentItemResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommentItemResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommentItemResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommentItemResponse::clear_result() {
  result_ = 99;
  clear_has_result();
}
inline ::weizhu::discover_v2::CommentItemResponse_Result CommentItemResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.CommentItemResponse.result)
  return static_cast< ::weizhu::discover_v2::CommentItemResponse_Result >(result_);
}
inline void CommentItemResponse::set_result(::weizhu::discover_v2::CommentItemResponse_Result value) {
  assert(::weizhu::discover_v2::CommentItemResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.CommentItemResponse.result)
}

// optional string fail_text = 2;
inline bool CommentItemResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommentItemResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommentItemResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommentItemResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& CommentItemResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.CommentItemResponse.fail_text)
  return *fail_text_;
}
inline void CommentItemResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.CommentItemResponse.fail_text)
}
inline void CommentItemResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.CommentItemResponse.fail_text)
}
inline void CommentItemResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.CommentItemResponse.fail_text)
}
inline ::std::string* CommentItemResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.CommentItemResponse.fail_text)
  return fail_text_;
}
inline ::std::string* CommentItemResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CommentItemResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.CommentItemResponse.fail_text)
}

// optional int64 comment_id = 3;
inline bool CommentItemResponse::has_comment_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommentItemResponse::set_has_comment_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommentItemResponse::clear_has_comment_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommentItemResponse::clear_comment_id() {
  comment_id_ = GOOGLE_LONGLONG(0);
  clear_has_comment_id();
}
inline ::google::protobuf::int64 CommentItemResponse::comment_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.CommentItemResponse.comment_id)
  return comment_id_;
}
inline void CommentItemResponse::set_comment_id(::google::protobuf::int64 value) {
  set_has_comment_id();
  comment_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.CommentItemResponse.comment_id)
}

// -------------------------------------------------------------------

// DeleteCommentRequest

// required int64 item_id = 1;
inline bool DeleteCommentRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteCommentRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteCommentRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteCommentRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 DeleteCommentRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.DeleteCommentRequest.item_id)
  return item_id_;
}
inline void DeleteCommentRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.DeleteCommentRequest.item_id)
}

// required int64 comment_id = 2;
inline bool DeleteCommentRequest::has_comment_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteCommentRequest::set_has_comment_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteCommentRequest::clear_has_comment_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteCommentRequest::clear_comment_id() {
  comment_id_ = GOOGLE_LONGLONG(0);
  clear_has_comment_id();
}
inline ::google::protobuf::int64 DeleteCommentRequest::comment_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.DeleteCommentRequest.comment_id)
  return comment_id_;
}
inline void DeleteCommentRequest::set_comment_id(::google::protobuf::int64 value) {
  set_has_comment_id();
  comment_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.DeleteCommentRequest.comment_id)
}

// -------------------------------------------------------------------

// DeleteCommentResponse

// optional .weizhu.discover_v2.DeleteCommentResponse.Result result = 1 [default = FAIL_UNKNOWN];
inline bool DeleteCommentResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteCommentResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteCommentResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteCommentResponse::clear_result() {
  result_ = 99;
  clear_has_result();
}
inline ::weizhu::discover_v2::DeleteCommentResponse_Result DeleteCommentResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.DeleteCommentResponse.result)
  return static_cast< ::weizhu::discover_v2::DeleteCommentResponse_Result >(result_);
}
inline void DeleteCommentResponse::set_result(::weizhu::discover_v2::DeleteCommentResponse_Result value) {
  assert(::weizhu::discover_v2::DeleteCommentResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.DeleteCommentResponse.result)
}

// optional string fail_text = 2;
inline bool DeleteCommentResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteCommentResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteCommentResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteCommentResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& DeleteCommentResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.DeleteCommentResponse.fail_text)
  return *fail_text_;
}
inline void DeleteCommentResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.DeleteCommentResponse.fail_text)
}
inline void DeleteCommentResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.DeleteCommentResponse.fail_text)
}
inline void DeleteCommentResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.DeleteCommentResponse.fail_text)
}
inline ::std::string* DeleteCommentResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.DeleteCommentResponse.fail_text)
  return fail_text_;
}
inline ::std::string* DeleteCommentResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeleteCommentResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.DeleteCommentResponse.fail_text)
}

// -------------------------------------------------------------------

// ScoreItemRequest

// required int64 item_id = 1;
inline bool ScoreItemRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScoreItemRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScoreItemRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScoreItemRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 ScoreItemRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ScoreItemRequest.item_id)
  return item_id_;
}
inline void ScoreItemRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ScoreItemRequest.item_id)
}

// required int32 score = 2;
inline bool ScoreItemRequest::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScoreItemRequest::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScoreItemRequest::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScoreItemRequest::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ScoreItemRequest::score() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ScoreItemRequest.score)
  return score_;
}
inline void ScoreItemRequest::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ScoreItemRequest.score)
}

// -------------------------------------------------------------------

// ScoreItemResponse

// optional .weizhu.discover_v2.ScoreItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
inline bool ScoreItemResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScoreItemResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScoreItemResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScoreItemResponse::clear_result() {
  result_ = 99;
  clear_has_result();
}
inline ::weizhu::discover_v2::ScoreItemResponse_Result ScoreItemResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ScoreItemResponse.result)
  return static_cast< ::weizhu::discover_v2::ScoreItemResponse_Result >(result_);
}
inline void ScoreItemResponse::set_result(::weizhu::discover_v2::ScoreItemResponse_Result value) {
  assert(::weizhu::discover_v2::ScoreItemResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ScoreItemResponse.result)
}

// optional string fail_text = 2;
inline bool ScoreItemResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScoreItemResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScoreItemResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScoreItemResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& ScoreItemResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ScoreItemResponse.fail_text)
  return *fail_text_;
}
inline void ScoreItemResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ScoreItemResponse.fail_text)
}
inline void ScoreItemResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.ScoreItemResponse.fail_text)
}
inline void ScoreItemResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.ScoreItemResponse.fail_text)
}
inline ::std::string* ScoreItemResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.ScoreItemResponse.fail_text)
  return fail_text_;
}
inline ::std::string* ScoreItemResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ScoreItemResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.ScoreItemResponse.fail_text)
}

// -------------------------------------------------------------------

// LikeItemRequest

// required int64 item_id = 1;
inline bool LikeItemRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LikeItemRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LikeItemRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LikeItemRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 LikeItemRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.LikeItemRequest.item_id)
  return item_id_;
}
inline void LikeItemRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.LikeItemRequest.item_id)
}

// required bool is_like = 2;
inline bool LikeItemRequest::has_is_like() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LikeItemRequest::set_has_is_like() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LikeItemRequest::clear_has_is_like() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LikeItemRequest::clear_is_like() {
  is_like_ = false;
  clear_has_is_like();
}
inline bool LikeItemRequest::is_like() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.LikeItemRequest.is_like)
  return is_like_;
}
inline void LikeItemRequest::set_is_like(bool value) {
  set_has_is_like();
  is_like_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.LikeItemRequest.is_like)
}

// -------------------------------------------------------------------

// LikeItemResponse

// optional .weizhu.discover_v2.LikeItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
inline bool LikeItemResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LikeItemResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LikeItemResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LikeItemResponse::clear_result() {
  result_ = 99;
  clear_has_result();
}
inline ::weizhu::discover_v2::LikeItemResponse_Result LikeItemResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.LikeItemResponse.result)
  return static_cast< ::weizhu::discover_v2::LikeItemResponse_Result >(result_);
}
inline void LikeItemResponse::set_result(::weizhu::discover_v2::LikeItemResponse_Result value) {
  assert(::weizhu::discover_v2::LikeItemResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.LikeItemResponse.result)
}

// optional string fail_text = 2;
inline bool LikeItemResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LikeItemResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LikeItemResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LikeItemResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& LikeItemResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.LikeItemResponse.fail_text)
  return *fail_text_;
}
inline void LikeItemResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.LikeItemResponse.fail_text)
}
inline void LikeItemResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.LikeItemResponse.fail_text)
}
inline void LikeItemResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.LikeItemResponse.fail_text)
}
inline ::std::string* LikeItemResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.LikeItemResponse.fail_text)
  return fail_text_;
}
inline ::std::string* LikeItemResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LikeItemResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.LikeItemResponse.fail_text)
}

// -------------------------------------------------------------------

// ShareItemRequest

// required int64 item_id = 1;
inline bool ShareItemRequest::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareItemRequest::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareItemRequest::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareItemRequest::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 ShareItemRequest::item_id() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ShareItemRequest.item_id)
  return item_id_;
}
inline void ShareItemRequest::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ShareItemRequest.item_id)
}

// -------------------------------------------------------------------

// ShareItemResponse_ItemShareContent

// required string item_name = 1;
inline bool ShareItemResponse_ItemShareContent::has_item_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareItemResponse_ItemShareContent::set_has_item_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareItemResponse_ItemShareContent::clear_has_item_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareItemResponse_ItemShareContent::clear_item_name() {
  if (item_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_->clear();
  }
  clear_has_item_name();
}
inline const ::std::string& ShareItemResponse_ItemShareContent::item_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_name)
  return *item_name_;
}
inline void ShareItemResponse_ItemShareContent::set_item_name(const ::std::string& value) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_name)
}
inline void ShareItemResponse_ItemShareContent::set_item_name(const char* value) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_name)
}
inline void ShareItemResponse_ItemShareContent::set_item_name(const char* value, size_t size) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_name)
}
inline ::std::string* ShareItemResponse_ItemShareContent::mutable_item_name() {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_name)
  return item_name_;
}
inline ::std::string* ShareItemResponse_ItemShareContent::release_item_name() {
  clear_has_item_name();
  if (item_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_name_;
    item_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShareItemResponse_ItemShareContent::set_allocated_item_name(::std::string* item_name) {
  if (item_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_name_;
  }
  if (item_name) {
    set_has_item_name();
    item_name_ = item_name;
  } else {
    clear_has_item_name();
    item_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_name)
}

// required string item_desc = 2;
inline bool ShareItemResponse_ItemShareContent::has_item_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareItemResponse_ItemShareContent::set_has_item_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareItemResponse_ItemShareContent::clear_has_item_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareItemResponse_ItemShareContent::clear_item_desc() {
  if (item_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_->clear();
  }
  clear_has_item_desc();
}
inline const ::std::string& ShareItemResponse_ItemShareContent::item_desc() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_desc)
  return *item_desc_;
}
inline void ShareItemResponse_ItemShareContent::set_item_desc(const ::std::string& value) {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  item_desc_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_desc)
}
inline void ShareItemResponse_ItemShareContent::set_item_desc(const char* value) {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  item_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_desc)
}
inline void ShareItemResponse_ItemShareContent::set_item_desc(const char* value, size_t size) {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  item_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_desc)
}
inline ::std::string* ShareItemResponse_ItemShareContent::mutable_item_desc() {
  set_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_desc)
  return item_desc_;
}
inline ::std::string* ShareItemResponse_ItemShareContent::release_item_desc() {
  clear_has_item_desc();
  if (item_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_desc_;
    item_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShareItemResponse_ItemShareContent::set_allocated_item_desc(::std::string* item_desc) {
  if (item_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_desc_;
  }
  if (item_desc) {
    set_has_item_desc();
    item_desc_ = item_desc;
  } else {
    clear_has_item_desc();
    item_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.ShareItemResponse.ItemShareContent.item_desc)
}

// required string image_name = 3;
inline bool ShareItemResponse_ItemShareContent::has_image_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShareItemResponse_ItemShareContent::set_has_image_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShareItemResponse_ItemShareContent::clear_has_image_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShareItemResponse_ItemShareContent::clear_image_name() {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_->clear();
  }
  clear_has_image_name();
}
inline const ::std::string& ShareItemResponse_ItemShareContent::image_name() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ShareItemResponse.ItemShareContent.image_name)
  return *image_name_;
}
inline void ShareItemResponse_ItemShareContent::set_image_name(const ::std::string& value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ShareItemResponse.ItemShareContent.image_name)
}
inline void ShareItemResponse_ItemShareContent::set_image_name(const char* value) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.ShareItemResponse.ItemShareContent.image_name)
}
inline void ShareItemResponse_ItemShareContent::set_image_name(const char* value, size_t size) {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  image_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.ShareItemResponse.ItemShareContent.image_name)
}
inline ::std::string* ShareItemResponse_ItemShareContent::mutable_image_name() {
  set_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    image_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.ShareItemResponse.ItemShareContent.image_name)
  return image_name_;
}
inline ::std::string* ShareItemResponse_ItemShareContent::release_image_name() {
  clear_has_image_name();
  if (image_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = image_name_;
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShareItemResponse_ItemShareContent::set_allocated_image_name(::std::string* image_name) {
  if (image_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete image_name_;
  }
  if (image_name) {
    set_has_image_name();
    image_name_ = image_name;
  } else {
    clear_has_image_name();
    image_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.ShareItemResponse.ItemShareContent.image_name)
}

// required string web_url = 4;
inline bool ShareItemResponse_ItemShareContent::has_web_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShareItemResponse_ItemShareContent::set_has_web_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShareItemResponse_ItemShareContent::clear_has_web_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShareItemResponse_ItemShareContent::clear_web_url() {
  if (web_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_->clear();
  }
  clear_has_web_url();
}
inline const ::std::string& ShareItemResponse_ItemShareContent::web_url() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ShareItemResponse.ItemShareContent.web_url)
  return *web_url_;
}
inline void ShareItemResponse_ItemShareContent::set_web_url(const ::std::string& value) {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  web_url_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ShareItemResponse.ItemShareContent.web_url)
}
inline void ShareItemResponse_ItemShareContent::set_web_url(const char* value) {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  web_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.ShareItemResponse.ItemShareContent.web_url)
}
inline void ShareItemResponse_ItemShareContent::set_web_url(const char* value, size_t size) {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  web_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.ShareItemResponse.ItemShareContent.web_url)
}
inline ::std::string* ShareItemResponse_ItemShareContent::mutable_web_url() {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.ShareItemResponse.ItemShareContent.web_url)
  return web_url_;
}
inline ::std::string* ShareItemResponse_ItemShareContent::release_web_url() {
  clear_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = web_url_;
    web_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShareItemResponse_ItemShareContent::set_allocated_web_url(::std::string* web_url) {
  if (web_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete web_url_;
  }
  if (web_url) {
    set_has_web_url();
    web_url_ = web_url;
  } else {
    clear_has_web_url();
    web_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.ShareItemResponse.ItemShareContent.web_url)
}

// -------------------------------------------------------------------

// ShareItemResponse

// optional .weizhu.discover_v2.ShareItemResponse.Result result = 1 [default = FAIL_UNKNOWN];
inline bool ShareItemResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareItemResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareItemResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareItemResponse::clear_result() {
  result_ = 99;
  clear_has_result();
}
inline ::weizhu::discover_v2::ShareItemResponse_Result ShareItemResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ShareItemResponse.result)
  return static_cast< ::weizhu::discover_v2::ShareItemResponse_Result >(result_);
}
inline void ShareItemResponse::set_result(::weizhu::discover_v2::ShareItemResponse_Result value) {
  assert(::weizhu::discover_v2::ShareItemResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ShareItemResponse.result)
}

// optional string fail_text = 2;
inline bool ShareItemResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareItemResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareItemResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareItemResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& ShareItemResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ShareItemResponse.fail_text)
  return *fail_text_;
}
inline void ShareItemResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.discover_v2.ShareItemResponse.fail_text)
}
inline void ShareItemResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.discover_v2.ShareItemResponse.fail_text)
}
inline void ShareItemResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.discover_v2.ShareItemResponse.fail_text)
}
inline ::std::string* ShareItemResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.ShareItemResponse.fail_text)
  return fail_text_;
}
inline ::std::string* ShareItemResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShareItemResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.ShareItemResponse.fail_text)
}

// optional .weizhu.discover_v2.ShareItemResponse.ItemShareContent itemShareContent = 3;
inline bool ShareItemResponse::has_itemsharecontent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShareItemResponse::set_has_itemsharecontent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShareItemResponse::clear_has_itemsharecontent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShareItemResponse::clear_itemsharecontent() {
  if (itemsharecontent_ != NULL) itemsharecontent_->::weizhu::discover_v2::ShareItemResponse_ItemShareContent::Clear();
  clear_has_itemsharecontent();
}
inline const ::weizhu::discover_v2::ShareItemResponse_ItemShareContent& ShareItemResponse::itemsharecontent() const {
  // @@protoc_insertion_point(field_get:weizhu.discover_v2.ShareItemResponse.itemShareContent)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return itemsharecontent_ != NULL ? *itemsharecontent_ : *default_instance().itemsharecontent_;
#else
  return itemsharecontent_ != NULL ? *itemsharecontent_ : *default_instance_->itemsharecontent_;
#endif
}
inline ::weizhu::discover_v2::ShareItemResponse_ItemShareContent* ShareItemResponse::mutable_itemsharecontent() {
  set_has_itemsharecontent();
  if (itemsharecontent_ == NULL) itemsharecontent_ = new ::weizhu::discover_v2::ShareItemResponse_ItemShareContent;
  // @@protoc_insertion_point(field_mutable:weizhu.discover_v2.ShareItemResponse.itemShareContent)
  return itemsharecontent_;
}
inline ::weizhu::discover_v2::ShareItemResponse_ItemShareContent* ShareItemResponse::release_itemsharecontent() {
  clear_has_itemsharecontent();
  ::weizhu::discover_v2::ShareItemResponse_ItemShareContent* temp = itemsharecontent_;
  itemsharecontent_ = NULL;
  return temp;
}
inline void ShareItemResponse::set_allocated_itemsharecontent(::weizhu::discover_v2::ShareItemResponse_ItemShareContent* itemsharecontent) {
  delete itemsharecontent_;
  itemsharecontent_ = itemsharecontent;
  if (itemsharecontent) {
    set_has_itemsharecontent();
  } else {
    clear_has_itemsharecontent();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.discover_v2.ShareItemResponse.itemShareContent)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace discover_v2
}  // namespace weizhu

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_discover_5fv2_2eproto__INCLUDED
