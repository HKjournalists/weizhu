// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: credits.proto

#ifndef PROTOBUF_credits_2eproto__INCLUDED
#define PROTOBUF_credits_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "weizhu.pb.h"
// @@protoc_insertion_point(includes)

namespace weizhu {
namespace credits {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_credits_2eproto();
void protobuf_AssignDesc_credits_2eproto();
void protobuf_ShutdownFile_credits_2eproto();

class Credits;
class CreditsOrder;
class DuibaShopUrlRequest;
class DuibaShopUrlResponse;
class DuibaConsumeCreditsRequest;
class DuibaConsumeCreditsResponse;
class DuibaNotifyRequest;
class DuibaNotifyResponse;
class GetCreditsResponse;
class GetCreditsOrderRequest;
class GetCreditsOrderResponse;
class GetCreditsRuleResponse;

enum CreditsOrder_Type {
  CreditsOrder_Type_EXPENSE = 1,
  CreditsOrder_Type_ADMIN_INCOME = 2,
  CreditsOrder_Type_WEIZHU_INCOME = 3
};
bool CreditsOrder_Type_IsValid(int value);
const CreditsOrder_Type CreditsOrder_Type_Type_MIN = CreditsOrder_Type_EXPENSE;
const CreditsOrder_Type CreditsOrder_Type_Type_MAX = CreditsOrder_Type_WEIZHU_INCOME;
const int CreditsOrder_Type_Type_ARRAYSIZE = CreditsOrder_Type_Type_MAX + 1;

enum CreditsOrder_State {
  CreditsOrder_State_REVIEW = 1,
  CreditsOrder_State_CONFIRM = 2,
  CreditsOrder_State_SUCCESS = 3,
  CreditsOrder_State_FAIL = 4,
  CreditsOrder_State_UNKNOWN = 5
};
bool CreditsOrder_State_IsValid(int value);
const CreditsOrder_State CreditsOrder_State_State_MIN = CreditsOrder_State_REVIEW;
const CreditsOrder_State CreditsOrder_State_State_MAX = CreditsOrder_State_UNKNOWN;
const int CreditsOrder_State_State_ARRAYSIZE = CreditsOrder_State_State_MAX + 1;

enum DuibaNotifyResponse_Result {
  DuibaNotifyResponse_Result_SUCC = 0,
  DuibaNotifyResponse_Result_FAIL = 1
};
bool DuibaNotifyResponse_Result_IsValid(int value);
const DuibaNotifyResponse_Result DuibaNotifyResponse_Result_Result_MIN = DuibaNotifyResponse_Result_SUCC;
const DuibaNotifyResponse_Result DuibaNotifyResponse_Result_Result_MAX = DuibaNotifyResponse_Result_FAIL;
const int DuibaNotifyResponse_Result_Result_ARRAYSIZE = DuibaNotifyResponse_Result_Result_MAX + 1;

// ===================================================================

class Credits : public ::google::protobuf::MessageLite {
 public:
  Credits();
  virtual ~Credits();

  Credits(const Credits& from);

  inline Credits& operator=(const Credits& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Credits& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Credits* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Credits* other);

  // implements Message ----------------------------------------------

  Credits* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Credits& from);
  void MergeFrom(const Credits& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required int64 credits = 2;
  inline bool has_credits() const;
  inline void clear_credits();
  static const int kCreditsFieldNumber = 2;
  inline ::google::protobuf::int64 credits() const;
  inline void set_credits(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.credits.Credits)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_credits();
  inline void clear_has_credits();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int64 credits_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static Credits* default_instance_;
};
// -------------------------------------------------------------------

class CreditsOrder : public ::google::protobuf::MessageLite {
 public:
  CreditsOrder();
  virtual ~CreditsOrder();

  CreditsOrder(const CreditsOrder& from);

  inline CreditsOrder& operator=(const CreditsOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CreditsOrder& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CreditsOrder* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CreditsOrder* other);

  // implements Message ----------------------------------------------

  CreditsOrder* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CreditsOrder& from);
  void MergeFrom(const CreditsOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef CreditsOrder_Type Type;
  static const Type EXPENSE = CreditsOrder_Type_EXPENSE;
  static const Type ADMIN_INCOME = CreditsOrder_Type_ADMIN_INCOME;
  static const Type WEIZHU_INCOME = CreditsOrder_Type_WEIZHU_INCOME;
  static inline bool Type_IsValid(int value) {
    return CreditsOrder_Type_IsValid(value);
  }
  static const Type Type_MIN =
    CreditsOrder_Type_Type_MIN;
  static const Type Type_MAX =
    CreditsOrder_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    CreditsOrder_Type_Type_ARRAYSIZE;

  typedef CreditsOrder_State State;
  static const State REVIEW = CreditsOrder_State_REVIEW;
  static const State CONFIRM = CreditsOrder_State_CONFIRM;
  static const State SUCCESS = CreditsOrder_State_SUCCESS;
  static const State FAIL = CreditsOrder_State_FAIL;
  static const State UNKNOWN = CreditsOrder_State_UNKNOWN;
  static inline bool State_IsValid(int value) {
    return CreditsOrder_State_IsValid(value);
  }
  static const State State_MIN =
    CreditsOrder_State_State_MIN;
  static const State State_MAX =
    CreditsOrder_State_State_MAX;
  static const int State_ARRAYSIZE =
    CreditsOrder_State_State_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required int32 order_id = 1;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  inline ::google::protobuf::int32 order_id() const;
  inline void set_order_id(::google::protobuf::int32 value);

  // required int64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);

  // required .weizhu.credits.CreditsOrder.Type type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::weizhu::credits::CreditsOrder_Type type() const;
  inline void set_type(::weizhu::credits::CreditsOrder_Type value);

  // required int64 credits_delta = 4;
  inline bool has_credits_delta() const;
  inline void clear_credits_delta();
  static const int kCreditsDeltaFieldNumber = 4;
  inline ::google::protobuf::int64 credits_delta() const;
  inline void set_credits_delta(::google::protobuf::int64 value);

  // optional string desc = 5;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 5;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional .weizhu.credits.CreditsOrder.State state = 6;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::weizhu::credits::CreditsOrder_State state() const;
  inline void set_state(::weizhu::credits::CreditsOrder_State value);

  // optional int32 create_time = 7;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::int32 create_time() const;
  inline void set_create_time(::google::protobuf::int32 value);

  // optional int64 create_admin = 8;
  inline bool has_create_admin() const;
  inline void clear_create_admin();
  static const int kCreateAdminFieldNumber = 8;
  inline ::google::protobuf::int64 create_admin() const;
  inline void set_create_admin(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.credits.CreditsOrder)
 private:
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_credits_delta();
  inline void clear_has_credits_delta();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_create_admin();
  inline void clear_has_create_admin();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 user_id_;
  ::google::protobuf::int32 order_id_;
  int type_;
  ::google::protobuf::int64 credits_delta_;
  ::std::string* desc_;
  int state_;
  ::google::protobuf::int32 create_time_;
  ::google::protobuf::int64 create_admin_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static CreditsOrder* default_instance_;
};
// -------------------------------------------------------------------

class DuibaShopUrlRequest : public ::google::protobuf::MessageLite {
 public:
  DuibaShopUrlRequest();
  virtual ~DuibaShopUrlRequest();

  DuibaShopUrlRequest(const DuibaShopUrlRequest& from);

  inline DuibaShopUrlRequest& operator=(const DuibaShopUrlRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DuibaShopUrlRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DuibaShopUrlRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DuibaShopUrlRequest* other);

  // implements Message ----------------------------------------------

  DuibaShopUrlRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DuibaShopUrlRequest& from);
  void MergeFrom(const DuibaShopUrlRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string redirect = 1;
  inline bool has_redirect() const;
  inline void clear_redirect();
  static const int kRedirectFieldNumber = 1;
  inline const ::std::string& redirect() const;
  inline void set_redirect(const ::std::string& value);
  inline void set_redirect(const char* value);
  inline void set_redirect(const char* value, size_t size);
  inline ::std::string* mutable_redirect();
  inline ::std::string* release_redirect();
  inline void set_allocated_redirect(::std::string* redirect);

  // @@protoc_insertion_point(class_scope:weizhu.credits.DuibaShopUrlRequest)
 private:
  inline void set_has_redirect();
  inline void clear_has_redirect();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* redirect_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static DuibaShopUrlRequest* default_instance_;
};
// -------------------------------------------------------------------

class DuibaShopUrlResponse : public ::google::protobuf::MessageLite {
 public:
  DuibaShopUrlResponse();
  virtual ~DuibaShopUrlResponse();

  DuibaShopUrlResponse(const DuibaShopUrlResponse& from);

  inline DuibaShopUrlResponse& operator=(const DuibaShopUrlResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DuibaShopUrlResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DuibaShopUrlResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DuibaShopUrlResponse* other);

  // implements Message ----------------------------------------------

  DuibaShopUrlResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DuibaShopUrlResponse& from);
  void MergeFrom(const DuibaShopUrlResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string url = 1;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 1;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:weizhu.credits.DuibaShopUrlResponse)
 private:
  inline void set_has_url();
  inline void clear_has_url();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* url_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static DuibaShopUrlResponse* default_instance_;
};
// -------------------------------------------------------------------

class DuibaConsumeCreditsRequest : public ::google::protobuf::MessageLite {
 public:
  DuibaConsumeCreditsRequest();
  virtual ~DuibaConsumeCreditsRequest();

  DuibaConsumeCreditsRequest(const DuibaConsumeCreditsRequest& from);

  inline DuibaConsumeCreditsRequest& operator=(const DuibaConsumeCreditsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DuibaConsumeCreditsRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DuibaConsumeCreditsRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DuibaConsumeCreditsRequest* other);

  // implements Message ----------------------------------------------

  DuibaConsumeCreditsRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DuibaConsumeCreditsRequest& from);
  void MergeFrom(const DuibaConsumeCreditsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline const ::std::string& uid() const;
  inline void set_uid(const ::std::string& value);
  inline void set_uid(const char* value);
  inline void set_uid(const char* value, size_t size);
  inline ::std::string* mutable_uid();
  inline ::std::string* release_uid();
  inline void set_allocated_uid(::std::string* uid);

  // required int64 credits = 2;
  inline bool has_credits() const;
  inline void clear_credits();
  static const int kCreditsFieldNumber = 2;
  inline ::google::protobuf::int64 credits() const;
  inline void set_credits(::google::protobuf::int64 value);

  // required string app_key = 3;
  inline bool has_app_key() const;
  inline void clear_app_key();
  static const int kAppKeyFieldNumber = 3;
  inline const ::std::string& app_key() const;
  inline void set_app_key(const ::std::string& value);
  inline void set_app_key(const char* value);
  inline void set_app_key(const char* value, size_t size);
  inline ::std::string* mutable_app_key();
  inline ::std::string* release_app_key();
  inline void set_allocated_app_key(::std::string* app_key);

  // required string time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline const ::std::string& time_stamp() const;
  inline void set_time_stamp(const ::std::string& value);
  inline void set_time_stamp(const char* value);
  inline void set_time_stamp(const char* value, size_t size);
  inline ::std::string* mutable_time_stamp();
  inline ::std::string* release_time_stamp();
  inline void set_allocated_time_stamp(::std::string* time_stamp);

  // optional string description = 5;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 5;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // required string order_num = 6;
  inline bool has_order_num() const;
  inline void clear_order_num();
  static const int kOrderNumFieldNumber = 6;
  inline const ::std::string& order_num() const;
  inline void set_order_num(const ::std::string& value);
  inline void set_order_num(const char* value);
  inline void set_order_num(const char* value, size_t size);
  inline ::std::string* mutable_order_num();
  inline ::std::string* release_order_num();
  inline void set_allocated_order_num(::std::string* order_num);

  // required string type = 7;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 7;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // optional int32 face_price = 8;
  inline bool has_face_price() const;
  inline void clear_face_price();
  static const int kFacePriceFieldNumber = 8;
  inline ::google::protobuf::int32 face_price() const;
  inline void set_face_price(::google::protobuf::int32 value);

  // required int32 actual_price = 9;
  inline bool has_actual_price() const;
  inline void clear_actual_price();
  static const int kActualPriceFieldNumber = 9;
  inline ::google::protobuf::int32 actual_price() const;
  inline void set_actual_price(::google::protobuf::int32 value);

  // optional string ip = 10;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 10;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional bool wait_audit = 11;
  inline bool has_wait_audit() const;
  inline void clear_wait_audit();
  static const int kWaitAuditFieldNumber = 11;
  inline bool wait_audit() const;
  inline void set_wait_audit(bool value);

  // optional string params = 12;
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 12;
  inline const ::std::string& params() const;
  inline void set_params(const ::std::string& value);
  inline void set_params(const char* value);
  inline void set_params(const char* value, size_t size);
  inline ::std::string* mutable_params();
  inline ::std::string* release_params();
  inline void set_allocated_params(::std::string* params);

  // required string sign = 13;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 13;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // @@protoc_insertion_point(class_scope:weizhu.credits.DuibaConsumeCreditsRequest)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_credits();
  inline void clear_has_credits();
  inline void set_has_app_key();
  inline void clear_has_app_key();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_order_num();
  inline void clear_has_order_num();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_face_price();
  inline void clear_has_face_price();
  inline void set_has_actual_price();
  inline void clear_has_actual_price();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_wait_audit();
  inline void clear_has_wait_audit();
  inline void set_has_params();
  inline void clear_has_params();
  inline void set_has_sign();
  inline void clear_has_sign();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* uid_;
  ::google::protobuf::int64 credits_;
  ::std::string* app_key_;
  ::std::string* time_stamp_;
  ::std::string* description_;
  ::std::string* order_num_;
  ::std::string* type_;
  ::google::protobuf::int32 face_price_;
  ::google::protobuf::int32 actual_price_;
  ::std::string* ip_;
  ::std::string* params_;
  ::std::string* sign_;
  bool wait_audit_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static DuibaConsumeCreditsRequest* default_instance_;
};
// -------------------------------------------------------------------

class DuibaConsumeCreditsResponse : public ::google::protobuf::MessageLite {
 public:
  DuibaConsumeCreditsResponse();
  virtual ~DuibaConsumeCreditsResponse();

  DuibaConsumeCreditsResponse(const DuibaConsumeCreditsResponse& from);

  inline DuibaConsumeCreditsResponse& operator=(const DuibaConsumeCreditsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DuibaConsumeCreditsResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DuibaConsumeCreditsResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DuibaConsumeCreditsResponse* other);

  // implements Message ----------------------------------------------

  DuibaConsumeCreditsResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DuibaConsumeCreditsResponse& from);
  void MergeFrom(const DuibaConsumeCreditsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline const ::std::string& status() const;
  inline void set_status(const ::std::string& value);
  inline void set_status(const char* value);
  inline void set_status(const char* value, size_t size);
  inline ::std::string* mutable_status();
  inline ::std::string* release_status();
  inline void set_allocated_status(::std::string* status);

  // optional string error_message = 2;
  inline bool has_error_message() const;
  inline void clear_error_message();
  static const int kErrorMessageFieldNumber = 2;
  inline const ::std::string& error_message() const;
  inline void set_error_message(const ::std::string& value);
  inline void set_error_message(const char* value);
  inline void set_error_message(const char* value, size_t size);
  inline ::std::string* mutable_error_message();
  inline ::std::string* release_error_message();
  inline void set_allocated_error_message(::std::string* error_message);

  // required string biz_id = 3;
  inline bool has_biz_id() const;
  inline void clear_biz_id();
  static const int kBizIdFieldNumber = 3;
  inline const ::std::string& biz_id() const;
  inline void set_biz_id(const ::std::string& value);
  inline void set_biz_id(const char* value);
  inline void set_biz_id(const char* value, size_t size);
  inline ::std::string* mutable_biz_id();
  inline ::std::string* release_biz_id();
  inline void set_allocated_biz_id(::std::string* biz_id);

  // required int64 credits = 4;
  inline bool has_credits() const;
  inline void clear_credits();
  static const int kCreditsFieldNumber = 4;
  inline ::google::protobuf::int64 credits() const;
  inline void set_credits(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:weizhu.credits.DuibaConsumeCreditsResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_error_message();
  inline void clear_has_error_message();
  inline void set_has_biz_id();
  inline void clear_has_biz_id();
  inline void set_has_credits();
  inline void clear_has_credits();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* status_;
  ::std::string* error_message_;
  ::std::string* biz_id_;
  ::google::protobuf::int64 credits_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static DuibaConsumeCreditsResponse* default_instance_;
};
// -------------------------------------------------------------------

class DuibaNotifyRequest : public ::google::protobuf::MessageLite {
 public:
  DuibaNotifyRequest();
  virtual ~DuibaNotifyRequest();

  DuibaNotifyRequest(const DuibaNotifyRequest& from);

  inline DuibaNotifyRequest& operator=(const DuibaNotifyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DuibaNotifyRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DuibaNotifyRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DuibaNotifyRequest* other);

  // implements Message ----------------------------------------------

  DuibaNotifyRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DuibaNotifyRequest& from);
  void MergeFrom(const DuibaNotifyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string app_key = 1;
  inline bool has_app_key() const;
  inline void clear_app_key();
  static const int kAppKeyFieldNumber = 1;
  inline const ::std::string& app_key() const;
  inline void set_app_key(const ::std::string& value);
  inline void set_app_key(const char* value);
  inline void set_app_key(const char* value, size_t size);
  inline ::std::string* mutable_app_key();
  inline ::std::string* release_app_key();
  inline void set_allocated_app_key(::std::string* app_key);

  // required int64 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::int64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::int64 value);

  // required bool success = 3;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 3;
  inline bool success() const;
  inline void set_success(bool value);

  // optional string error_message = 4;
  inline bool has_error_message() const;
  inline void clear_error_message();
  static const int kErrorMessageFieldNumber = 4;
  inline const ::std::string& error_message() const;
  inline void set_error_message(const ::std::string& value);
  inline void set_error_message(const char* value);
  inline void set_error_message(const char* value, size_t size);
  inline ::std::string* mutable_error_message();
  inline ::std::string* release_error_message();
  inline void set_allocated_error_message(::std::string* error_message);

  // required string order_num = 5;
  inline bool has_order_num() const;
  inline void clear_order_num();
  static const int kOrderNumFieldNumber = 5;
  inline const ::std::string& order_num() const;
  inline void set_order_num(const ::std::string& value);
  inline void set_order_num(const char* value);
  inline void set_order_num(const char* value, size_t size);
  inline ::std::string* mutable_order_num();
  inline ::std::string* release_order_num();
  inline void set_allocated_order_num(::std::string* order_num);

  // optional string biz_id = 6;
  inline bool has_biz_id() const;
  inline void clear_biz_id();
  static const int kBizIdFieldNumber = 6;
  inline const ::std::string& biz_id() const;
  inline void set_biz_id(const ::std::string& value);
  inline void set_biz_id(const char* value);
  inline void set_biz_id(const char* value, size_t size);
  inline ::std::string* mutable_biz_id();
  inline ::std::string* release_biz_id();
  inline void set_allocated_biz_id(::std::string* biz_id);

  // required string sign = 7;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 7;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // optional string uid = 8;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 8;
  inline const ::std::string& uid() const;
  inline void set_uid(const ::std::string& value);
  inline void set_uid(const char* value);
  inline void set_uid(const char* value, size_t size);
  inline ::std::string* mutable_uid();
  inline ::std::string* release_uid();
  inline void set_allocated_uid(::std::string* uid);

  // @@protoc_insertion_point(class_scope:weizhu.credits.DuibaNotifyRequest)
 private:
  inline void set_has_app_key();
  inline void clear_has_app_key();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_error_message();
  inline void clear_has_error_message();
  inline void set_has_order_num();
  inline void clear_has_order_num();
  inline void set_has_biz_id();
  inline void clear_has_biz_id();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* app_key_;
  ::google::protobuf::int64 time_stamp_;
  ::std::string* error_message_;
  ::std::string* order_num_;
  ::std::string* biz_id_;
  ::std::string* sign_;
  ::std::string* uid_;
  bool success_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static DuibaNotifyRequest* default_instance_;
};
// -------------------------------------------------------------------

class DuibaNotifyResponse : public ::google::protobuf::MessageLite {
 public:
  DuibaNotifyResponse();
  virtual ~DuibaNotifyResponse();

  DuibaNotifyResponse(const DuibaNotifyResponse& from);

  inline DuibaNotifyResponse& operator=(const DuibaNotifyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DuibaNotifyResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DuibaNotifyResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DuibaNotifyResponse* other);

  // implements Message ----------------------------------------------

  DuibaNotifyResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DuibaNotifyResponse& from);
  void MergeFrom(const DuibaNotifyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef DuibaNotifyResponse_Result Result;
  static const Result SUCC = DuibaNotifyResponse_Result_SUCC;
  static const Result FAIL = DuibaNotifyResponse_Result_FAIL;
  static inline bool Result_IsValid(int value) {
    return DuibaNotifyResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    DuibaNotifyResponse_Result_Result_MIN;
  static const Result Result_MAX =
    DuibaNotifyResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    DuibaNotifyResponse_Result_Result_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required .weizhu.credits.DuibaNotifyResponse.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::weizhu::credits::DuibaNotifyResponse_Result result() const;
  inline void set_result(::weizhu::credits::DuibaNotifyResponse_Result value);

  // optional string fail_text = 2;
  inline bool has_fail_text() const;
  inline void clear_fail_text();
  static const int kFailTextFieldNumber = 2;
  inline const ::std::string& fail_text() const;
  inline void set_fail_text(const ::std::string& value);
  inline void set_fail_text(const char* value);
  inline void set_fail_text(const char* value, size_t size);
  inline ::std::string* mutable_fail_text();
  inline ::std::string* release_fail_text();
  inline void set_allocated_fail_text(::std::string* fail_text);

  // @@protoc_insertion_point(class_scope:weizhu.credits.DuibaNotifyResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_fail_text();
  inline void clear_has_fail_text();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* fail_text_;
  int result_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static DuibaNotifyResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetCreditsResponse : public ::google::protobuf::MessageLite {
 public:
  GetCreditsResponse();
  virtual ~GetCreditsResponse();

  GetCreditsResponse(const GetCreditsResponse& from);

  inline GetCreditsResponse& operator=(const GetCreditsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetCreditsResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetCreditsResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetCreditsResponse* other);

  // implements Message ----------------------------------------------

  GetCreditsResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetCreditsResponse& from);
  void MergeFrom(const GetCreditsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .weizhu.credits.Credits credits = 1;
  inline bool has_credits() const;
  inline void clear_credits();
  static const int kCreditsFieldNumber = 1;
  inline const ::weizhu::credits::Credits& credits() const;
  inline ::weizhu::credits::Credits* mutable_credits();
  inline ::weizhu::credits::Credits* release_credits();
  inline void set_allocated_credits(::weizhu::credits::Credits* credits);

  // @@protoc_insertion_point(class_scope:weizhu.credits.GetCreditsResponse)
 private:
  inline void set_has_credits();
  inline void clear_has_credits();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::weizhu::credits::Credits* credits_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static GetCreditsResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetCreditsOrderRequest : public ::google::protobuf::MessageLite {
 public:
  GetCreditsOrderRequest();
  virtual ~GetCreditsOrderRequest();

  GetCreditsOrderRequest(const GetCreditsOrderRequest& from);

  inline GetCreditsOrderRequest& operator=(const GetCreditsOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetCreditsOrderRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetCreditsOrderRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetCreditsOrderRequest* other);

  // implements Message ----------------------------------------------

  GetCreditsOrderRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetCreditsOrderRequest& from);
  void MergeFrom(const GetCreditsOrderRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_expense = 1;
  inline bool has_is_expense() const;
  inline void clear_is_expense();
  static const int kIsExpenseFieldNumber = 1;
  inline bool is_expense() const;
  inline void set_is_expense(bool value);

  // required int32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.credits.GetCreditsOrderRequest)
 private:
  inline void set_has_is_expense();
  inline void clear_has_is_expense();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool is_expense_;
  ::google::protobuf::int32 size_;
  ::std::string* offset_index_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static GetCreditsOrderRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetCreditsOrderResponse : public ::google::protobuf::MessageLite {
 public:
  GetCreditsOrderResponse();
  virtual ~GetCreditsOrderResponse();

  GetCreditsOrderResponse(const GetCreditsOrderResponse& from);

  inline GetCreditsOrderResponse& operator=(const GetCreditsOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetCreditsOrderResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetCreditsOrderResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetCreditsOrderResponse* other);

  // implements Message ----------------------------------------------

  GetCreditsOrderResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetCreditsOrderResponse& from);
  void MergeFrom(const GetCreditsOrderResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .weizhu.credits.CreditsOrder credits_order = 1;
  inline int credits_order_size() const;
  inline void clear_credits_order();
  static const int kCreditsOrderFieldNumber = 1;
  inline const ::weizhu::credits::CreditsOrder& credits_order(int index) const;
  inline ::weizhu::credits::CreditsOrder* mutable_credits_order(int index);
  inline ::weizhu::credits::CreditsOrder* add_credits_order();
  inline const ::google::protobuf::RepeatedPtrField< ::weizhu::credits::CreditsOrder >&
      credits_order() const;
  inline ::google::protobuf::RepeatedPtrField< ::weizhu::credits::CreditsOrder >*
      mutable_credits_order();

  // required bool has_more = 2;
  inline bool has_has_more() const;
  inline void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  inline bool has_more() const;
  inline void set_has_more(bool value);

  // optional bytes offset_index = 3;
  inline bool has_offset_index() const;
  inline void clear_offset_index();
  static const int kOffsetIndexFieldNumber = 3;
  inline const ::std::string& offset_index() const;
  inline void set_offset_index(const ::std::string& value);
  inline void set_offset_index(const char* value);
  inline void set_offset_index(const void* value, size_t size);
  inline ::std::string* mutable_offset_index();
  inline ::std::string* release_offset_index();
  inline void set_allocated_offset_index(::std::string* offset_index);

  // @@protoc_insertion_point(class_scope:weizhu.credits.GetCreditsOrderResponse)
 private:
  inline void set_has_has_more();
  inline void clear_has_has_more();
  inline void set_has_offset_index();
  inline void clear_has_offset_index();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::weizhu::credits::CreditsOrder > credits_order_;
  ::std::string* offset_index_;
  bool has_more_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static GetCreditsOrderResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetCreditsRuleResponse : public ::google::protobuf::MessageLite {
 public:
  GetCreditsRuleResponse();
  virtual ~GetCreditsRuleResponse();

  GetCreditsRuleResponse(const GetCreditsRuleResponse& from);

  inline GetCreditsRuleResponse& operator=(const GetCreditsRuleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetCreditsRuleResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetCreditsRuleResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetCreditsRuleResponse* other);

  // implements Message ----------------------------------------------

  GetCreditsRuleResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetCreditsRuleResponse& from);
  void MergeFrom(const GetCreditsRuleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string credits_rule = 1;
  inline bool has_credits_rule() const;
  inline void clear_credits_rule();
  static const int kCreditsRuleFieldNumber = 1;
  inline const ::std::string& credits_rule() const;
  inline void set_credits_rule(const ::std::string& value);
  inline void set_credits_rule(const char* value);
  inline void set_credits_rule(const char* value, size_t size);
  inline ::std::string* mutable_credits_rule();
  inline ::std::string* release_credits_rule();
  inline void set_allocated_credits_rule(::std::string* credits_rule);

  // @@protoc_insertion_point(class_scope:weizhu.credits.GetCreditsRuleResponse)
 private:
  inline void set_has_credits_rule();
  inline void clear_has_credits_rule();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* credits_rule_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_credits_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_credits_2eproto();
  #endif
  friend void protobuf_AssignDesc_credits_2eproto();
  friend void protobuf_ShutdownFile_credits_2eproto();

  void InitAsDefaultInstance();
  static GetCreditsRuleResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// Credits

// required int64 user_id = 1;
inline bool Credits::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Credits::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Credits::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Credits::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 Credits::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.Credits.user_id)
  return user_id_;
}
inline void Credits::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.Credits.user_id)
}

// required int64 credits = 2;
inline bool Credits::has_credits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Credits::set_has_credits() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Credits::clear_has_credits() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Credits::clear_credits() {
  credits_ = GOOGLE_LONGLONG(0);
  clear_has_credits();
}
inline ::google::protobuf::int64 Credits::credits() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.Credits.credits)
  return credits_;
}
inline void Credits::set_credits(::google::protobuf::int64 value) {
  set_has_credits();
  credits_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.Credits.credits)
}

// -------------------------------------------------------------------

// CreditsOrder

// required int32 order_id = 1;
inline bool CreditsOrder::has_order_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreditsOrder::set_has_order_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreditsOrder::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreditsOrder::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 CreditsOrder::order_id() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.CreditsOrder.order_id)
  return order_id_;
}
inline void CreditsOrder::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.CreditsOrder.order_id)
}

// required int64 user_id = 2;
inline bool CreditsOrder::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreditsOrder::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreditsOrder::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreditsOrder::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::int64 CreditsOrder::user_id() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.CreditsOrder.user_id)
  return user_id_;
}
inline void CreditsOrder::set_user_id(::google::protobuf::int64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.CreditsOrder.user_id)
}

// required .weizhu.credits.CreditsOrder.Type type = 3;
inline bool CreditsOrder::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreditsOrder::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreditsOrder::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreditsOrder::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::weizhu::credits::CreditsOrder_Type CreditsOrder::type() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.CreditsOrder.type)
  return static_cast< ::weizhu::credits::CreditsOrder_Type >(type_);
}
inline void CreditsOrder::set_type(::weizhu::credits::CreditsOrder_Type value) {
  assert(::weizhu::credits::CreditsOrder_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.CreditsOrder.type)
}

// required int64 credits_delta = 4;
inline bool CreditsOrder::has_credits_delta() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreditsOrder::set_has_credits_delta() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreditsOrder::clear_has_credits_delta() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreditsOrder::clear_credits_delta() {
  credits_delta_ = GOOGLE_LONGLONG(0);
  clear_has_credits_delta();
}
inline ::google::protobuf::int64 CreditsOrder::credits_delta() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.CreditsOrder.credits_delta)
  return credits_delta_;
}
inline void CreditsOrder::set_credits_delta(::google::protobuf::int64 value) {
  set_has_credits_delta();
  credits_delta_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.CreditsOrder.credits_delta)
}

// optional string desc = 5;
inline bool CreditsOrder::has_desc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreditsOrder::set_has_desc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreditsOrder::clear_has_desc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreditsOrder::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& CreditsOrder::desc() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.CreditsOrder.desc)
  return *desc_;
}
inline void CreditsOrder::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.CreditsOrder.desc)
}
inline void CreditsOrder::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.CreditsOrder.desc)
}
inline void CreditsOrder::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.CreditsOrder.desc)
}
inline ::std::string* CreditsOrder::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.CreditsOrder.desc)
  return desc_;
}
inline ::std::string* CreditsOrder::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreditsOrder::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.CreditsOrder.desc)
}

// optional .weizhu.credits.CreditsOrder.State state = 6;
inline bool CreditsOrder::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreditsOrder::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreditsOrder::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreditsOrder::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::weizhu::credits::CreditsOrder_State CreditsOrder::state() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.CreditsOrder.state)
  return static_cast< ::weizhu::credits::CreditsOrder_State >(state_);
}
inline void CreditsOrder::set_state(::weizhu::credits::CreditsOrder_State value) {
  assert(::weizhu::credits::CreditsOrder_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.CreditsOrder.state)
}

// optional int32 create_time = 7;
inline bool CreditsOrder::has_create_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreditsOrder::set_has_create_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreditsOrder::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreditsOrder::clear_create_time() {
  create_time_ = 0;
  clear_has_create_time();
}
inline ::google::protobuf::int32 CreditsOrder::create_time() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.CreditsOrder.create_time)
  return create_time_;
}
inline void CreditsOrder::set_create_time(::google::protobuf::int32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.CreditsOrder.create_time)
}

// optional int64 create_admin = 8;
inline bool CreditsOrder::has_create_admin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreditsOrder::set_has_create_admin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreditsOrder::clear_has_create_admin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreditsOrder::clear_create_admin() {
  create_admin_ = GOOGLE_LONGLONG(0);
  clear_has_create_admin();
}
inline ::google::protobuf::int64 CreditsOrder::create_admin() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.CreditsOrder.create_admin)
  return create_admin_;
}
inline void CreditsOrder::set_create_admin(::google::protobuf::int64 value) {
  set_has_create_admin();
  create_admin_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.CreditsOrder.create_admin)
}

// -------------------------------------------------------------------

// DuibaShopUrlRequest

// optional string redirect = 1;
inline bool DuibaShopUrlRequest::has_redirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DuibaShopUrlRequest::set_has_redirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DuibaShopUrlRequest::clear_has_redirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DuibaShopUrlRequest::clear_redirect() {
  if (redirect_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirect_->clear();
  }
  clear_has_redirect();
}
inline const ::std::string& DuibaShopUrlRequest::redirect() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaShopUrlRequest.redirect)
  return *redirect_;
}
inline void DuibaShopUrlRequest::set_redirect(const ::std::string& value) {
  set_has_redirect();
  if (redirect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirect_ = new ::std::string;
  }
  redirect_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaShopUrlRequest.redirect)
}
inline void DuibaShopUrlRequest::set_redirect(const char* value) {
  set_has_redirect();
  if (redirect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirect_ = new ::std::string;
  }
  redirect_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaShopUrlRequest.redirect)
}
inline void DuibaShopUrlRequest::set_redirect(const char* value, size_t size) {
  set_has_redirect();
  if (redirect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirect_ = new ::std::string;
  }
  redirect_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaShopUrlRequest.redirect)
}
inline ::std::string* DuibaShopUrlRequest::mutable_redirect() {
  set_has_redirect();
  if (redirect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirect_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaShopUrlRequest.redirect)
  return redirect_;
}
inline ::std::string* DuibaShopUrlRequest::release_redirect() {
  clear_has_redirect();
  if (redirect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = redirect_;
    redirect_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaShopUrlRequest::set_allocated_redirect(::std::string* redirect) {
  if (redirect_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete redirect_;
  }
  if (redirect) {
    set_has_redirect();
    redirect_ = redirect;
  } else {
    clear_has_redirect();
    redirect_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaShopUrlRequest.redirect)
}

// -------------------------------------------------------------------

// DuibaShopUrlResponse

// required string url = 1;
inline bool DuibaShopUrlResponse::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DuibaShopUrlResponse::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DuibaShopUrlResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DuibaShopUrlResponse::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& DuibaShopUrlResponse::url() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaShopUrlResponse.url)
  return *url_;
}
inline void DuibaShopUrlResponse::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaShopUrlResponse.url)
}
inline void DuibaShopUrlResponse::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaShopUrlResponse.url)
}
inline void DuibaShopUrlResponse::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaShopUrlResponse.url)
}
inline ::std::string* DuibaShopUrlResponse::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaShopUrlResponse.url)
  return url_;
}
inline ::std::string* DuibaShopUrlResponse::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaShopUrlResponse::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaShopUrlResponse.url)
}

// -------------------------------------------------------------------

// DuibaConsumeCreditsRequest

// required string uid = 1;
inline bool DuibaConsumeCreditsRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DuibaConsumeCreditsRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DuibaConsumeCreditsRequest::clear_uid() {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_->clear();
  }
  clear_has_uid();
}
inline const ::std::string& DuibaConsumeCreditsRequest::uid() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.uid)
  return *uid_;
}
inline void DuibaConsumeCreditsRequest::set_uid(const ::std::string& value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.uid)
}
inline void DuibaConsumeCreditsRequest::set_uid(const char* value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsRequest.uid)
}
inline void DuibaConsumeCreditsRequest::set_uid(const char* value, size_t size) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsRequest.uid)
}
inline ::std::string* DuibaConsumeCreditsRequest::mutable_uid() {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsRequest.uid)
  return uid_;
}
inline ::std::string* DuibaConsumeCreditsRequest::release_uid() {
  clear_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uid_;
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsRequest::set_allocated_uid(::std::string* uid) {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uid_;
  }
  if (uid) {
    set_has_uid();
    uid_ = uid;
  } else {
    clear_has_uid();
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsRequest.uid)
}

// required int64 credits = 2;
inline bool DuibaConsumeCreditsRequest::has_credits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_credits() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DuibaConsumeCreditsRequest::clear_has_credits() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DuibaConsumeCreditsRequest::clear_credits() {
  credits_ = GOOGLE_LONGLONG(0);
  clear_has_credits();
}
inline ::google::protobuf::int64 DuibaConsumeCreditsRequest::credits() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.credits)
  return credits_;
}
inline void DuibaConsumeCreditsRequest::set_credits(::google::protobuf::int64 value) {
  set_has_credits();
  credits_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.credits)
}

// required string app_key = 3;
inline bool DuibaConsumeCreditsRequest::has_app_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_app_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DuibaConsumeCreditsRequest::clear_has_app_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DuibaConsumeCreditsRequest::clear_app_key() {
  if (app_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_key_->clear();
  }
  clear_has_app_key();
}
inline const ::std::string& DuibaConsumeCreditsRequest::app_key() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.app_key)
  return *app_key_;
}
inline void DuibaConsumeCreditsRequest::set_app_key(const ::std::string& value) {
  set_has_app_key();
  if (app_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_key_ = new ::std::string;
  }
  app_key_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.app_key)
}
inline void DuibaConsumeCreditsRequest::set_app_key(const char* value) {
  set_has_app_key();
  if (app_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_key_ = new ::std::string;
  }
  app_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsRequest.app_key)
}
inline void DuibaConsumeCreditsRequest::set_app_key(const char* value, size_t size) {
  set_has_app_key();
  if (app_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_key_ = new ::std::string;
  }
  app_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsRequest.app_key)
}
inline ::std::string* DuibaConsumeCreditsRequest::mutable_app_key() {
  set_has_app_key();
  if (app_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsRequest.app_key)
  return app_key_;
}
inline ::std::string* DuibaConsumeCreditsRequest::release_app_key() {
  clear_has_app_key();
  if (app_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = app_key_;
    app_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsRequest::set_allocated_app_key(::std::string* app_key) {
  if (app_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete app_key_;
  }
  if (app_key) {
    set_has_app_key();
    app_key_ = app_key;
  } else {
    clear_has_app_key();
    app_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsRequest.app_key)
}

// required string time_stamp = 4;
inline bool DuibaConsumeCreditsRequest::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DuibaConsumeCreditsRequest::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DuibaConsumeCreditsRequest::clear_time_stamp() {
  if (time_stamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_stamp_->clear();
  }
  clear_has_time_stamp();
}
inline const ::std::string& DuibaConsumeCreditsRequest::time_stamp() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.time_stamp)
  return *time_stamp_;
}
inline void DuibaConsumeCreditsRequest::set_time_stamp(const ::std::string& value) {
  set_has_time_stamp();
  if (time_stamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_stamp_ = new ::std::string;
  }
  time_stamp_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.time_stamp)
}
inline void DuibaConsumeCreditsRequest::set_time_stamp(const char* value) {
  set_has_time_stamp();
  if (time_stamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_stamp_ = new ::std::string;
  }
  time_stamp_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsRequest.time_stamp)
}
inline void DuibaConsumeCreditsRequest::set_time_stamp(const char* value, size_t size) {
  set_has_time_stamp();
  if (time_stamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_stamp_ = new ::std::string;
  }
  time_stamp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsRequest.time_stamp)
}
inline ::std::string* DuibaConsumeCreditsRequest::mutable_time_stamp() {
  set_has_time_stamp();
  if (time_stamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    time_stamp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsRequest.time_stamp)
  return time_stamp_;
}
inline ::std::string* DuibaConsumeCreditsRequest::release_time_stamp() {
  clear_has_time_stamp();
  if (time_stamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = time_stamp_;
    time_stamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsRequest::set_allocated_time_stamp(::std::string* time_stamp) {
  if (time_stamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete time_stamp_;
  }
  if (time_stamp) {
    set_has_time_stamp();
    time_stamp_ = time_stamp;
  } else {
    clear_has_time_stamp();
    time_stamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsRequest.time_stamp)
}

// optional string description = 5;
inline bool DuibaConsumeCreditsRequest::has_description() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_description() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DuibaConsumeCreditsRequest::clear_has_description() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DuibaConsumeCreditsRequest::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& DuibaConsumeCreditsRequest::description() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.description)
  return *description_;
}
inline void DuibaConsumeCreditsRequest::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.description)
}
inline void DuibaConsumeCreditsRequest::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsRequest.description)
}
inline void DuibaConsumeCreditsRequest::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsRequest.description)
}
inline ::std::string* DuibaConsumeCreditsRequest::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsRequest.description)
  return description_;
}
inline ::std::string* DuibaConsumeCreditsRequest::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsRequest::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsRequest.description)
}

// required string order_num = 6;
inline bool DuibaConsumeCreditsRequest::has_order_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_order_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DuibaConsumeCreditsRequest::clear_has_order_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DuibaConsumeCreditsRequest::clear_order_num() {
  if (order_num_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_num_->clear();
  }
  clear_has_order_num();
}
inline const ::std::string& DuibaConsumeCreditsRequest::order_num() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.order_num)
  return *order_num_;
}
inline void DuibaConsumeCreditsRequest::set_order_num(const ::std::string& value) {
  set_has_order_num();
  if (order_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_num_ = new ::std::string;
  }
  order_num_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.order_num)
}
inline void DuibaConsumeCreditsRequest::set_order_num(const char* value) {
  set_has_order_num();
  if (order_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_num_ = new ::std::string;
  }
  order_num_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsRequest.order_num)
}
inline void DuibaConsumeCreditsRequest::set_order_num(const char* value, size_t size) {
  set_has_order_num();
  if (order_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_num_ = new ::std::string;
  }
  order_num_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsRequest.order_num)
}
inline ::std::string* DuibaConsumeCreditsRequest::mutable_order_num() {
  set_has_order_num();
  if (order_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_num_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsRequest.order_num)
  return order_num_;
}
inline ::std::string* DuibaConsumeCreditsRequest::release_order_num() {
  clear_has_order_num();
  if (order_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = order_num_;
    order_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsRequest::set_allocated_order_num(::std::string* order_num) {
  if (order_num_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete order_num_;
  }
  if (order_num) {
    set_has_order_num();
    order_num_ = order_num;
  } else {
    clear_has_order_num();
    order_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsRequest.order_num)
}

// required string type = 7;
inline bool DuibaConsumeCreditsRequest::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DuibaConsumeCreditsRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DuibaConsumeCreditsRequest::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& DuibaConsumeCreditsRequest::type() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.type)
  return *type_;
}
inline void DuibaConsumeCreditsRequest::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.type)
}
inline void DuibaConsumeCreditsRequest::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsRequest.type)
}
inline void DuibaConsumeCreditsRequest::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsRequest.type)
}
inline ::std::string* DuibaConsumeCreditsRequest::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsRequest.type)
  return type_;
}
inline ::std::string* DuibaConsumeCreditsRequest::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsRequest::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsRequest.type)
}

// optional int32 face_price = 8;
inline bool DuibaConsumeCreditsRequest::has_face_price() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_face_price() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DuibaConsumeCreditsRequest::clear_has_face_price() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DuibaConsumeCreditsRequest::clear_face_price() {
  face_price_ = 0;
  clear_has_face_price();
}
inline ::google::protobuf::int32 DuibaConsumeCreditsRequest::face_price() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.face_price)
  return face_price_;
}
inline void DuibaConsumeCreditsRequest::set_face_price(::google::protobuf::int32 value) {
  set_has_face_price();
  face_price_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.face_price)
}

// required int32 actual_price = 9;
inline bool DuibaConsumeCreditsRequest::has_actual_price() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_actual_price() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DuibaConsumeCreditsRequest::clear_has_actual_price() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DuibaConsumeCreditsRequest::clear_actual_price() {
  actual_price_ = 0;
  clear_has_actual_price();
}
inline ::google::protobuf::int32 DuibaConsumeCreditsRequest::actual_price() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.actual_price)
  return actual_price_;
}
inline void DuibaConsumeCreditsRequest::set_actual_price(::google::protobuf::int32 value) {
  set_has_actual_price();
  actual_price_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.actual_price)
}

// optional string ip = 10;
inline bool DuibaConsumeCreditsRequest::has_ip() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_ip() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DuibaConsumeCreditsRequest::clear_has_ip() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DuibaConsumeCreditsRequest::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& DuibaConsumeCreditsRequest::ip() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.ip)
  return *ip_;
}
inline void DuibaConsumeCreditsRequest::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.ip)
}
inline void DuibaConsumeCreditsRequest::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsRequest.ip)
}
inline void DuibaConsumeCreditsRequest::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsRequest.ip)
}
inline ::std::string* DuibaConsumeCreditsRequest::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsRequest.ip)
  return ip_;
}
inline ::std::string* DuibaConsumeCreditsRequest::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsRequest::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsRequest.ip)
}

// optional bool wait_audit = 11;
inline bool DuibaConsumeCreditsRequest::has_wait_audit() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_wait_audit() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DuibaConsumeCreditsRequest::clear_has_wait_audit() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DuibaConsumeCreditsRequest::clear_wait_audit() {
  wait_audit_ = false;
  clear_has_wait_audit();
}
inline bool DuibaConsumeCreditsRequest::wait_audit() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.wait_audit)
  return wait_audit_;
}
inline void DuibaConsumeCreditsRequest::set_wait_audit(bool value) {
  set_has_wait_audit();
  wait_audit_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.wait_audit)
}

// optional string params = 12;
inline bool DuibaConsumeCreditsRequest::has_params() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_params() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DuibaConsumeCreditsRequest::clear_has_params() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DuibaConsumeCreditsRequest::clear_params() {
  if (params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    params_->clear();
  }
  clear_has_params();
}
inline const ::std::string& DuibaConsumeCreditsRequest::params() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.params)
  return *params_;
}
inline void DuibaConsumeCreditsRequest::set_params(const ::std::string& value) {
  set_has_params();
  if (params_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    params_ = new ::std::string;
  }
  params_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.params)
}
inline void DuibaConsumeCreditsRequest::set_params(const char* value) {
  set_has_params();
  if (params_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    params_ = new ::std::string;
  }
  params_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsRequest.params)
}
inline void DuibaConsumeCreditsRequest::set_params(const char* value, size_t size) {
  set_has_params();
  if (params_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    params_ = new ::std::string;
  }
  params_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsRequest.params)
}
inline ::std::string* DuibaConsumeCreditsRequest::mutable_params() {
  set_has_params();
  if (params_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    params_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsRequest.params)
  return params_;
}
inline ::std::string* DuibaConsumeCreditsRequest::release_params() {
  clear_has_params();
  if (params_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = params_;
    params_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsRequest::set_allocated_params(::std::string* params) {
  if (params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete params_;
  }
  if (params) {
    set_has_params();
    params_ = params;
  } else {
    clear_has_params();
    params_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsRequest.params)
}

// required string sign = 13;
inline bool DuibaConsumeCreditsRequest::has_sign() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DuibaConsumeCreditsRequest::set_has_sign() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DuibaConsumeCreditsRequest::clear_has_sign() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DuibaConsumeCreditsRequest::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& DuibaConsumeCreditsRequest::sign() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsRequest.sign)
  return *sign_;
}
inline void DuibaConsumeCreditsRequest::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsRequest.sign)
}
inline void DuibaConsumeCreditsRequest::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsRequest.sign)
}
inline void DuibaConsumeCreditsRequest::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsRequest.sign)
}
inline ::std::string* DuibaConsumeCreditsRequest::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsRequest.sign)
  return sign_;
}
inline ::std::string* DuibaConsumeCreditsRequest::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsRequest::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsRequest.sign)
}

// -------------------------------------------------------------------

// DuibaConsumeCreditsResponse

// required string status = 1;
inline bool DuibaConsumeCreditsResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DuibaConsumeCreditsResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DuibaConsumeCreditsResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DuibaConsumeCreditsResponse::clear_status() {
  if (status_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    status_->clear();
  }
  clear_has_status();
}
inline const ::std::string& DuibaConsumeCreditsResponse::status() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsResponse.status)
  return *status_;
}
inline void DuibaConsumeCreditsResponse::set_status(const ::std::string& value) {
  set_has_status();
  if (status_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    status_ = new ::std::string;
  }
  status_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsResponse.status)
}
inline void DuibaConsumeCreditsResponse::set_status(const char* value) {
  set_has_status();
  if (status_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    status_ = new ::std::string;
  }
  status_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsResponse.status)
}
inline void DuibaConsumeCreditsResponse::set_status(const char* value, size_t size) {
  set_has_status();
  if (status_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    status_ = new ::std::string;
  }
  status_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsResponse.status)
}
inline ::std::string* DuibaConsumeCreditsResponse::mutable_status() {
  set_has_status();
  if (status_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    status_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsResponse.status)
  return status_;
}
inline ::std::string* DuibaConsumeCreditsResponse::release_status() {
  clear_has_status();
  if (status_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = status_;
    status_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsResponse::set_allocated_status(::std::string* status) {
  if (status_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete status_;
  }
  if (status) {
    set_has_status();
    status_ = status;
  } else {
    clear_has_status();
    status_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsResponse.status)
}

// optional string error_message = 2;
inline bool DuibaConsumeCreditsResponse::has_error_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DuibaConsumeCreditsResponse::set_has_error_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DuibaConsumeCreditsResponse::clear_has_error_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DuibaConsumeCreditsResponse::clear_error_message() {
  if (error_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_->clear();
  }
  clear_has_error_message();
}
inline const ::std::string& DuibaConsumeCreditsResponse::error_message() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsResponse.error_message)
  return *error_message_;
}
inline void DuibaConsumeCreditsResponse::set_error_message(const ::std::string& value) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsResponse.error_message)
}
inline void DuibaConsumeCreditsResponse::set_error_message(const char* value) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsResponse.error_message)
}
inline void DuibaConsumeCreditsResponse::set_error_message(const char* value, size_t size) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsResponse.error_message)
}
inline ::std::string* DuibaConsumeCreditsResponse::mutable_error_message() {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsResponse.error_message)
  return error_message_;
}
inline ::std::string* DuibaConsumeCreditsResponse::release_error_message() {
  clear_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_message_;
    error_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsResponse::set_allocated_error_message(::std::string* error_message) {
  if (error_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_message_;
  }
  if (error_message) {
    set_has_error_message();
    error_message_ = error_message;
  } else {
    clear_has_error_message();
    error_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsResponse.error_message)
}

// required string biz_id = 3;
inline bool DuibaConsumeCreditsResponse::has_biz_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DuibaConsumeCreditsResponse::set_has_biz_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DuibaConsumeCreditsResponse::clear_has_biz_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DuibaConsumeCreditsResponse::clear_biz_id() {
  if (biz_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    biz_id_->clear();
  }
  clear_has_biz_id();
}
inline const ::std::string& DuibaConsumeCreditsResponse::biz_id() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsResponse.biz_id)
  return *biz_id_;
}
inline void DuibaConsumeCreditsResponse::set_biz_id(const ::std::string& value) {
  set_has_biz_id();
  if (biz_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    biz_id_ = new ::std::string;
  }
  biz_id_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsResponse.biz_id)
}
inline void DuibaConsumeCreditsResponse::set_biz_id(const char* value) {
  set_has_biz_id();
  if (biz_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    biz_id_ = new ::std::string;
  }
  biz_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaConsumeCreditsResponse.biz_id)
}
inline void DuibaConsumeCreditsResponse::set_biz_id(const char* value, size_t size) {
  set_has_biz_id();
  if (biz_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    biz_id_ = new ::std::string;
  }
  biz_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaConsumeCreditsResponse.biz_id)
}
inline ::std::string* DuibaConsumeCreditsResponse::mutable_biz_id() {
  set_has_biz_id();
  if (biz_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    biz_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaConsumeCreditsResponse.biz_id)
  return biz_id_;
}
inline ::std::string* DuibaConsumeCreditsResponse::release_biz_id() {
  clear_has_biz_id();
  if (biz_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = biz_id_;
    biz_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaConsumeCreditsResponse::set_allocated_biz_id(::std::string* biz_id) {
  if (biz_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete biz_id_;
  }
  if (biz_id) {
    set_has_biz_id();
    biz_id_ = biz_id;
  } else {
    clear_has_biz_id();
    biz_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaConsumeCreditsResponse.biz_id)
}

// required int64 credits = 4;
inline bool DuibaConsumeCreditsResponse::has_credits() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DuibaConsumeCreditsResponse::set_has_credits() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DuibaConsumeCreditsResponse::clear_has_credits() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DuibaConsumeCreditsResponse::clear_credits() {
  credits_ = GOOGLE_LONGLONG(0);
  clear_has_credits();
}
inline ::google::protobuf::int64 DuibaConsumeCreditsResponse::credits() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaConsumeCreditsResponse.credits)
  return credits_;
}
inline void DuibaConsumeCreditsResponse::set_credits(::google::protobuf::int64 value) {
  set_has_credits();
  credits_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaConsumeCreditsResponse.credits)
}

// -------------------------------------------------------------------

// DuibaNotifyRequest

// required string app_key = 1;
inline bool DuibaNotifyRequest::has_app_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DuibaNotifyRequest::set_has_app_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DuibaNotifyRequest::clear_has_app_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DuibaNotifyRequest::clear_app_key() {
  if (app_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_key_->clear();
  }
  clear_has_app_key();
}
inline const ::std::string& DuibaNotifyRequest::app_key() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaNotifyRequest.app_key)
  return *app_key_;
}
inline void DuibaNotifyRequest::set_app_key(const ::std::string& value) {
  set_has_app_key();
  if (app_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_key_ = new ::std::string;
  }
  app_key_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaNotifyRequest.app_key)
}
inline void DuibaNotifyRequest::set_app_key(const char* value) {
  set_has_app_key();
  if (app_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_key_ = new ::std::string;
  }
  app_key_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaNotifyRequest.app_key)
}
inline void DuibaNotifyRequest::set_app_key(const char* value, size_t size) {
  set_has_app_key();
  if (app_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_key_ = new ::std::string;
  }
  app_key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaNotifyRequest.app_key)
}
inline ::std::string* DuibaNotifyRequest::mutable_app_key() {
  set_has_app_key();
  if (app_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaNotifyRequest.app_key)
  return app_key_;
}
inline ::std::string* DuibaNotifyRequest::release_app_key() {
  clear_has_app_key();
  if (app_key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = app_key_;
    app_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaNotifyRequest::set_allocated_app_key(::std::string* app_key) {
  if (app_key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete app_key_;
  }
  if (app_key) {
    set_has_app_key();
    app_key_ = app_key;
  } else {
    clear_has_app_key();
    app_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaNotifyRequest.app_key)
}

// required int64 time_stamp = 2;
inline bool DuibaNotifyRequest::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DuibaNotifyRequest::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DuibaNotifyRequest::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DuibaNotifyRequest::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
inline ::google::protobuf::int64 DuibaNotifyRequest::time_stamp() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaNotifyRequest.time_stamp)
  return time_stamp_;
}
inline void DuibaNotifyRequest::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaNotifyRequest.time_stamp)
}

// required bool success = 3;
inline bool DuibaNotifyRequest::has_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DuibaNotifyRequest::set_has_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DuibaNotifyRequest::clear_has_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DuibaNotifyRequest::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool DuibaNotifyRequest::success() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaNotifyRequest.success)
  return success_;
}
inline void DuibaNotifyRequest::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaNotifyRequest.success)
}

// optional string error_message = 4;
inline bool DuibaNotifyRequest::has_error_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DuibaNotifyRequest::set_has_error_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DuibaNotifyRequest::clear_has_error_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DuibaNotifyRequest::clear_error_message() {
  if (error_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_->clear();
  }
  clear_has_error_message();
}
inline const ::std::string& DuibaNotifyRequest::error_message() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaNotifyRequest.error_message)
  return *error_message_;
}
inline void DuibaNotifyRequest::set_error_message(const ::std::string& value) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaNotifyRequest.error_message)
}
inline void DuibaNotifyRequest::set_error_message(const char* value) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaNotifyRequest.error_message)
}
inline void DuibaNotifyRequest::set_error_message(const char* value, size_t size) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaNotifyRequest.error_message)
}
inline ::std::string* DuibaNotifyRequest::mutable_error_message() {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaNotifyRequest.error_message)
  return error_message_;
}
inline ::std::string* DuibaNotifyRequest::release_error_message() {
  clear_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_message_;
    error_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaNotifyRequest::set_allocated_error_message(::std::string* error_message) {
  if (error_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_message_;
  }
  if (error_message) {
    set_has_error_message();
    error_message_ = error_message;
  } else {
    clear_has_error_message();
    error_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaNotifyRequest.error_message)
}

// required string order_num = 5;
inline bool DuibaNotifyRequest::has_order_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DuibaNotifyRequest::set_has_order_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DuibaNotifyRequest::clear_has_order_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DuibaNotifyRequest::clear_order_num() {
  if (order_num_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_num_->clear();
  }
  clear_has_order_num();
}
inline const ::std::string& DuibaNotifyRequest::order_num() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaNotifyRequest.order_num)
  return *order_num_;
}
inline void DuibaNotifyRequest::set_order_num(const ::std::string& value) {
  set_has_order_num();
  if (order_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_num_ = new ::std::string;
  }
  order_num_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaNotifyRequest.order_num)
}
inline void DuibaNotifyRequest::set_order_num(const char* value) {
  set_has_order_num();
  if (order_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_num_ = new ::std::string;
  }
  order_num_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaNotifyRequest.order_num)
}
inline void DuibaNotifyRequest::set_order_num(const char* value, size_t size) {
  set_has_order_num();
  if (order_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_num_ = new ::std::string;
  }
  order_num_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaNotifyRequest.order_num)
}
inline ::std::string* DuibaNotifyRequest::mutable_order_num() {
  set_has_order_num();
  if (order_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_num_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaNotifyRequest.order_num)
  return order_num_;
}
inline ::std::string* DuibaNotifyRequest::release_order_num() {
  clear_has_order_num();
  if (order_num_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = order_num_;
    order_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaNotifyRequest::set_allocated_order_num(::std::string* order_num) {
  if (order_num_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete order_num_;
  }
  if (order_num) {
    set_has_order_num();
    order_num_ = order_num;
  } else {
    clear_has_order_num();
    order_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaNotifyRequest.order_num)
}

// optional string biz_id = 6;
inline bool DuibaNotifyRequest::has_biz_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DuibaNotifyRequest::set_has_biz_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DuibaNotifyRequest::clear_has_biz_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DuibaNotifyRequest::clear_biz_id() {
  if (biz_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    biz_id_->clear();
  }
  clear_has_biz_id();
}
inline const ::std::string& DuibaNotifyRequest::biz_id() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaNotifyRequest.biz_id)
  return *biz_id_;
}
inline void DuibaNotifyRequest::set_biz_id(const ::std::string& value) {
  set_has_biz_id();
  if (biz_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    biz_id_ = new ::std::string;
  }
  biz_id_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaNotifyRequest.biz_id)
}
inline void DuibaNotifyRequest::set_biz_id(const char* value) {
  set_has_biz_id();
  if (biz_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    biz_id_ = new ::std::string;
  }
  biz_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaNotifyRequest.biz_id)
}
inline void DuibaNotifyRequest::set_biz_id(const char* value, size_t size) {
  set_has_biz_id();
  if (biz_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    biz_id_ = new ::std::string;
  }
  biz_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaNotifyRequest.biz_id)
}
inline ::std::string* DuibaNotifyRequest::mutable_biz_id() {
  set_has_biz_id();
  if (biz_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    biz_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaNotifyRequest.biz_id)
  return biz_id_;
}
inline ::std::string* DuibaNotifyRequest::release_biz_id() {
  clear_has_biz_id();
  if (biz_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = biz_id_;
    biz_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaNotifyRequest::set_allocated_biz_id(::std::string* biz_id) {
  if (biz_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete biz_id_;
  }
  if (biz_id) {
    set_has_biz_id();
    biz_id_ = biz_id;
  } else {
    clear_has_biz_id();
    biz_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaNotifyRequest.biz_id)
}

// required string sign = 7;
inline bool DuibaNotifyRequest::has_sign() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DuibaNotifyRequest::set_has_sign() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DuibaNotifyRequest::clear_has_sign() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DuibaNotifyRequest::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& DuibaNotifyRequest::sign() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaNotifyRequest.sign)
  return *sign_;
}
inline void DuibaNotifyRequest::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaNotifyRequest.sign)
}
inline void DuibaNotifyRequest::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaNotifyRequest.sign)
}
inline void DuibaNotifyRequest::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaNotifyRequest.sign)
}
inline ::std::string* DuibaNotifyRequest::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaNotifyRequest.sign)
  return sign_;
}
inline ::std::string* DuibaNotifyRequest::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaNotifyRequest::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaNotifyRequest.sign)
}

// optional string uid = 8;
inline bool DuibaNotifyRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DuibaNotifyRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DuibaNotifyRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DuibaNotifyRequest::clear_uid() {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_->clear();
  }
  clear_has_uid();
}
inline const ::std::string& DuibaNotifyRequest::uid() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaNotifyRequest.uid)
  return *uid_;
}
inline void DuibaNotifyRequest::set_uid(const ::std::string& value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaNotifyRequest.uid)
}
inline void DuibaNotifyRequest::set_uid(const char* value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaNotifyRequest.uid)
}
inline void DuibaNotifyRequest::set_uid(const char* value, size_t size) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaNotifyRequest.uid)
}
inline ::std::string* DuibaNotifyRequest::mutable_uid() {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaNotifyRequest.uid)
  return uid_;
}
inline ::std::string* DuibaNotifyRequest::release_uid() {
  clear_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uid_;
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaNotifyRequest::set_allocated_uid(::std::string* uid) {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uid_;
  }
  if (uid) {
    set_has_uid();
    uid_ = uid;
  } else {
    clear_has_uid();
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaNotifyRequest.uid)
}

// -------------------------------------------------------------------

// DuibaNotifyResponse

// required .weizhu.credits.DuibaNotifyResponse.Result result = 1;
inline bool DuibaNotifyResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DuibaNotifyResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DuibaNotifyResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DuibaNotifyResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::weizhu::credits::DuibaNotifyResponse_Result DuibaNotifyResponse::result() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaNotifyResponse.result)
  return static_cast< ::weizhu::credits::DuibaNotifyResponse_Result >(result_);
}
inline void DuibaNotifyResponse::set_result(::weizhu::credits::DuibaNotifyResponse_Result value) {
  assert(::weizhu::credits::DuibaNotifyResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaNotifyResponse.result)
}

// optional string fail_text = 2;
inline bool DuibaNotifyResponse::has_fail_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DuibaNotifyResponse::set_has_fail_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DuibaNotifyResponse::clear_has_fail_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DuibaNotifyResponse::clear_fail_text() {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_->clear();
  }
  clear_has_fail_text();
}
inline const ::std::string& DuibaNotifyResponse::fail_text() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.DuibaNotifyResponse.fail_text)
  return *fail_text_;
}
inline void DuibaNotifyResponse::set_fail_text(const ::std::string& value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.DuibaNotifyResponse.fail_text)
}
inline void DuibaNotifyResponse::set_fail_text(const char* value) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.DuibaNotifyResponse.fail_text)
}
inline void DuibaNotifyResponse::set_fail_text(const char* value, size_t size) {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  fail_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.DuibaNotifyResponse.fail_text)
}
inline ::std::string* DuibaNotifyResponse::mutable_fail_text() {
  set_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fail_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.DuibaNotifyResponse.fail_text)
  return fail_text_;
}
inline ::std::string* DuibaNotifyResponse::release_fail_text() {
  clear_has_fail_text();
  if (fail_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fail_text_;
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DuibaNotifyResponse::set_allocated_fail_text(::std::string* fail_text) {
  if (fail_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fail_text_;
  }
  if (fail_text) {
    set_has_fail_text();
    fail_text_ = fail_text;
  } else {
    clear_has_fail_text();
    fail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.DuibaNotifyResponse.fail_text)
}

// -------------------------------------------------------------------

// GetCreditsResponse

// required .weizhu.credits.Credits credits = 1;
inline bool GetCreditsResponse::has_credits() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCreditsResponse::set_has_credits() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCreditsResponse::clear_has_credits() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCreditsResponse::clear_credits() {
  if (credits_ != NULL) credits_->::weizhu::credits::Credits::Clear();
  clear_has_credits();
}
inline const ::weizhu::credits::Credits& GetCreditsResponse::credits() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.GetCreditsResponse.credits)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return credits_ != NULL ? *credits_ : *default_instance().credits_;
#else
  return credits_ != NULL ? *credits_ : *default_instance_->credits_;
#endif
}
inline ::weizhu::credits::Credits* GetCreditsResponse::mutable_credits() {
  set_has_credits();
  if (credits_ == NULL) credits_ = new ::weizhu::credits::Credits;
  // @@protoc_insertion_point(field_mutable:weizhu.credits.GetCreditsResponse.credits)
  return credits_;
}
inline ::weizhu::credits::Credits* GetCreditsResponse::release_credits() {
  clear_has_credits();
  ::weizhu::credits::Credits* temp = credits_;
  credits_ = NULL;
  return temp;
}
inline void GetCreditsResponse::set_allocated_credits(::weizhu::credits::Credits* credits) {
  delete credits_;
  credits_ = credits;
  if (credits) {
    set_has_credits();
  } else {
    clear_has_credits();
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.GetCreditsResponse.credits)
}

// -------------------------------------------------------------------

// GetCreditsOrderRequest

// required bool is_expense = 1;
inline bool GetCreditsOrderRequest::has_is_expense() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCreditsOrderRequest::set_has_is_expense() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCreditsOrderRequest::clear_has_is_expense() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCreditsOrderRequest::clear_is_expense() {
  is_expense_ = false;
  clear_has_is_expense();
}
inline bool GetCreditsOrderRequest::is_expense() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.GetCreditsOrderRequest.is_expense)
  return is_expense_;
}
inline void GetCreditsOrderRequest::set_is_expense(bool value) {
  set_has_is_expense();
  is_expense_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.GetCreditsOrderRequest.is_expense)
}

// required int32 size = 2;
inline bool GetCreditsOrderRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCreditsOrderRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCreditsOrderRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCreditsOrderRequest::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetCreditsOrderRequest::size() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.GetCreditsOrderRequest.size)
  return size_;
}
inline void GetCreditsOrderRequest::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.GetCreditsOrderRequest.size)
}

// optional bytes offset_index = 3;
inline bool GetCreditsOrderRequest::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCreditsOrderRequest::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCreditsOrderRequest::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCreditsOrderRequest::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetCreditsOrderRequest::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.GetCreditsOrderRequest.offset_index)
  return *offset_index_;
}
inline void GetCreditsOrderRequest::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.GetCreditsOrderRequest.offset_index)
}
inline void GetCreditsOrderRequest::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.GetCreditsOrderRequest.offset_index)
}
inline void GetCreditsOrderRequest::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.GetCreditsOrderRequest.offset_index)
}
inline ::std::string* GetCreditsOrderRequest::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.GetCreditsOrderRequest.offset_index)
  return offset_index_;
}
inline ::std::string* GetCreditsOrderRequest::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetCreditsOrderRequest::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.GetCreditsOrderRequest.offset_index)
}

// -------------------------------------------------------------------

// GetCreditsOrderResponse

// repeated .weizhu.credits.CreditsOrder credits_order = 1;
inline int GetCreditsOrderResponse::credits_order_size() const {
  return credits_order_.size();
}
inline void GetCreditsOrderResponse::clear_credits_order() {
  credits_order_.Clear();
}
inline const ::weizhu::credits::CreditsOrder& GetCreditsOrderResponse::credits_order(int index) const {
  // @@protoc_insertion_point(field_get:weizhu.credits.GetCreditsOrderResponse.credits_order)
  return credits_order_.Get(index);
}
inline ::weizhu::credits::CreditsOrder* GetCreditsOrderResponse::mutable_credits_order(int index) {
  // @@protoc_insertion_point(field_mutable:weizhu.credits.GetCreditsOrderResponse.credits_order)
  return credits_order_.Mutable(index);
}
inline ::weizhu::credits::CreditsOrder* GetCreditsOrderResponse::add_credits_order() {
  // @@protoc_insertion_point(field_add:weizhu.credits.GetCreditsOrderResponse.credits_order)
  return credits_order_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::weizhu::credits::CreditsOrder >&
GetCreditsOrderResponse::credits_order() const {
  // @@protoc_insertion_point(field_list:weizhu.credits.GetCreditsOrderResponse.credits_order)
  return credits_order_;
}
inline ::google::protobuf::RepeatedPtrField< ::weizhu::credits::CreditsOrder >*
GetCreditsOrderResponse::mutable_credits_order() {
  // @@protoc_insertion_point(field_mutable_list:weizhu.credits.GetCreditsOrderResponse.credits_order)
  return &credits_order_;
}

// required bool has_more = 2;
inline bool GetCreditsOrderResponse::has_has_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCreditsOrderResponse::set_has_has_more() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCreditsOrderResponse::clear_has_has_more() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCreditsOrderResponse::clear_has_more() {
  has_more_ = false;
  clear_has_has_more();
}
inline bool GetCreditsOrderResponse::has_more() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.GetCreditsOrderResponse.has_more)
  return has_more_;
}
inline void GetCreditsOrderResponse::set_has_more(bool value) {
  set_has_has_more();
  has_more_ = value;
  // @@protoc_insertion_point(field_set:weizhu.credits.GetCreditsOrderResponse.has_more)
}

// optional bytes offset_index = 3;
inline bool GetCreditsOrderResponse::has_offset_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCreditsOrderResponse::set_has_offset_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCreditsOrderResponse::clear_has_offset_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCreditsOrderResponse::clear_offset_index() {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_->clear();
  }
  clear_has_offset_index();
}
inline const ::std::string& GetCreditsOrderResponse::offset_index() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.GetCreditsOrderResponse.offset_index)
  return *offset_index_;
}
inline void GetCreditsOrderResponse::set_offset_index(const ::std::string& value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.GetCreditsOrderResponse.offset_index)
}
inline void GetCreditsOrderResponse::set_offset_index(const char* value) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.GetCreditsOrderResponse.offset_index)
}
inline void GetCreditsOrderResponse::set_offset_index(const void* value, size_t size) {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  offset_index_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.GetCreditsOrderResponse.offset_index)
}
inline ::std::string* GetCreditsOrderResponse::mutable_offset_index() {
  set_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    offset_index_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.GetCreditsOrderResponse.offset_index)
  return offset_index_;
}
inline ::std::string* GetCreditsOrderResponse::release_offset_index() {
  clear_has_offset_index();
  if (offset_index_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = offset_index_;
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetCreditsOrderResponse::set_allocated_offset_index(::std::string* offset_index) {
  if (offset_index_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offset_index_;
  }
  if (offset_index) {
    set_has_offset_index();
    offset_index_ = offset_index;
  } else {
    clear_has_offset_index();
    offset_index_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.GetCreditsOrderResponse.offset_index)
}

// -------------------------------------------------------------------

// GetCreditsRuleResponse

// optional string credits_rule = 1;
inline bool GetCreditsRuleResponse::has_credits_rule() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCreditsRuleResponse::set_has_credits_rule() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCreditsRuleResponse::clear_has_credits_rule() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCreditsRuleResponse::clear_credits_rule() {
  if (credits_rule_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    credits_rule_->clear();
  }
  clear_has_credits_rule();
}
inline const ::std::string& GetCreditsRuleResponse::credits_rule() const {
  // @@protoc_insertion_point(field_get:weizhu.credits.GetCreditsRuleResponse.credits_rule)
  return *credits_rule_;
}
inline void GetCreditsRuleResponse::set_credits_rule(const ::std::string& value) {
  set_has_credits_rule();
  if (credits_rule_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    credits_rule_ = new ::std::string;
  }
  credits_rule_->assign(value);
  // @@protoc_insertion_point(field_set:weizhu.credits.GetCreditsRuleResponse.credits_rule)
}
inline void GetCreditsRuleResponse::set_credits_rule(const char* value) {
  set_has_credits_rule();
  if (credits_rule_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    credits_rule_ = new ::std::string;
  }
  credits_rule_->assign(value);
  // @@protoc_insertion_point(field_set_char:weizhu.credits.GetCreditsRuleResponse.credits_rule)
}
inline void GetCreditsRuleResponse::set_credits_rule(const char* value, size_t size) {
  set_has_credits_rule();
  if (credits_rule_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    credits_rule_ = new ::std::string;
  }
  credits_rule_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:weizhu.credits.GetCreditsRuleResponse.credits_rule)
}
inline ::std::string* GetCreditsRuleResponse::mutable_credits_rule() {
  set_has_credits_rule();
  if (credits_rule_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    credits_rule_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:weizhu.credits.GetCreditsRuleResponse.credits_rule)
  return credits_rule_;
}
inline ::std::string* GetCreditsRuleResponse::release_credits_rule() {
  clear_has_credits_rule();
  if (credits_rule_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = credits_rule_;
    credits_rule_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetCreditsRuleResponse::set_allocated_credits_rule(::std::string* credits_rule) {
  if (credits_rule_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete credits_rule_;
  }
  if (credits_rule) {
    set_has_credits_rule();
    credits_rule_ = credits_rule;
  } else {
    clear_has_credits_rule();
    credits_rule_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:weizhu.credits.GetCreditsRuleResponse.credits_rule)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace credits
}  // namespace weizhu

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_credits_2eproto__INCLUDED
